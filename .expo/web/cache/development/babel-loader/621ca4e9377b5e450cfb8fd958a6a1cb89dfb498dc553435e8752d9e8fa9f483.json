{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { UserType } from \"../UserContext\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport ImagesScreen from \"./ImagesScreen\";\nimport TweetsScreen from \"./TweetsScreen\";\nimport { MaterialCommunityIcons, AntDesign, MaterialIcons } from \"@expo/vector-icons\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tab = createMaterialTopTabNavigator();\nvar ImagesTabScreen = function ImagesTabScreen(_ref) {\n  var posts = _ref.posts;\n  return _jsx(ImagesScreen, {\n    posts: posts\n  });\n};\nvar TweetsTabScreen = function TweetsTabScreen(_ref2) {\n  var posts = _ref2.posts;\n  return _jsx(TweetsScreen, {\n    posts: posts\n  });\n};\nvar TagTabScreen = function TagTabScreen(_ref3) {\n  var posts = _ref3.posts;\n  return _jsx(TweetsScreen, {\n    posts: posts\n  });\n};\nvar ProfileScreen = function ProfileScreen() {\n  var navigation = useNavigation();\n  var _useContext = useContext(UserType),\n    userId = _useContext.userId;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    userProfile = _useState2[0],\n    setUserProfile = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    followers = _useState4[0],\n    setFollowers = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    followings = _useState6[0],\n    setFollowings = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    posts = _useState8[0],\n    setPosts = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    bio = _useState10[0],\n    setBio = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    image = _useState12[0],\n    setImage = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    isImageSelected = _useState14[0],\n    setIsImageSelected = _useState14[1];\n  var _useState15 = useState(null),\n    _useState16 = _slicedToArray(_useState15, 2),\n    loggedInUserId = _useState16[0],\n    setLoggedInUserId = _useState16[1];\n  var handleImagePicker = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      var permissionResult = yield ImagePicker.requestMediaLibraryPermissionsAsync();\n      if (permissionResult.granted === false) {\n        alert(\"Permission to access camera roll is required!\");\n        return;\n      }\n      var pickerResult = yield ImagePicker.launchImageLibraryAsync();\n      if (!pickerResult.canceled && pickerResult.assets.length > 0) {\n        console.log(\"Selected image URI:\", pickerResult.assets[0].uri);\n        setImage(pickerResult.assets[0].uri);\n        setIsImageSelected(true);\n      } else {\n        console.log(\"Image picking cancelled or no image selected\");\n      }\n    });\n    return function handleImagePicker() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    var fetchLoggedInUserId = function () {\n      var _ref5 = _asyncToGenerator(function* () {\n        try {\n          var _loggedInUserId = yield AsyncStorage.getItem(\"userId\");\n          setLoggedInUserId(_loggedInUserId);\n        } catch (error) {\n          console.error(\"Error fetching logged-in user's ID:\", error);\n        }\n      });\n      return function fetchLoggedInUserId() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n    fetchLoggedInUserId();\n  }, []);\n  useEffect(function () {\n    var fetchProfile = function () {\n      var _ref6 = _asyncToGenerator(function* (userId) {\n        try {\n          var authToken = yield AsyncStorage.getItem(\"authToken\");\n          var GetUser = yield axios.get(`https://levelart.up.railway.app/users/${userId}`, {\n            headers: {\n              Authorization: `Bearer ${authToken}`\n            }\n          });\n          setUserProfile(GetUser.data);\n          var profileResponse = yield axios.get(`https://levelart.up.railway.app/followers/${userId}/followers`, {\n            headers: {\n              Authorization: `Bearer ${authToken}`\n            }\n          });\n          if (profileResponse) {\n            var _profileResponse$data = profileResponse.data,\n              user = _profileResponse$data.user,\n              _followers = _profileResponse$data.followers,\n              _followings = _profileResponse$data.followings,\n              _bio = _profileResponse$data.bio;\n            setUserProfile(user);\n            setFollowers((_followers == null ? void 0 : _followers.length) || 0);\n            setFollowings((_followings == null ? void 0 : _followings.length) || 0);\n            setBio(_bio || \"\");\n            var postsResponse = yield axios.get(`https://levelart.up.railway.app/posts/user/${userId}`, {\n              headers: {\n                Authorization: `Bearer ${authToken}`\n              }\n            });\n            if (postsResponse) {\n              setPosts(postsResponse.data);\n            }\n          }\n        } catch (error) {\n          console.error(\"Error fetching profile:\", error);\n        }\n      });\n      return function fetchProfile(_x) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n    if (userId) {\n      fetchProfile(userId);\n    } else {\n      console.log(\"userId is undefined\");\n    }\n  }, [userId]);\n  useEffect(function () {\n    var loadUserProfile = function () {\n      var _ref7 = _asyncToGenerator(function* () {\n        try {\n          var authToken = yield AsyncStorage.getItem(\"authToken\");\n          var GetUserResponse = yield axios.get(`https://levelart.up.railway.app/users/${userId}`, {\n            headers: {\n              Authorization: `Bearer ${authToken}`\n            }\n          });\n          var userObject = GetUserResponse.data;\n          setUserProfile(userObject);\n          var usernameOfCurrentUser = userObject == null ? void 0 : userObject.username;\n          console.log(\"Username of current user:\", usernameOfCurrentUser);\n          navigation.setOptions({\n            headerTitle: \"\",\n            headerLeft: function headerLeft() {\n              return _jsx(Text, {\n                style: {\n                  marginLeft: 10,\n                  fontWeight: \"500\",\n                  fontSize: 18\n                },\n                children: usernameOfCurrentUser || \"Loading...\"\n              });\n            },\n            headerRight: function headerRight() {\n              return _jsx(TouchableOpacity, {\n                style: styles.settingsIcon,\n                onPress: function onPress() {\n                  return navigation.navigate(\"Settings\");\n                },\n                children: _jsx(Icon, {\n                  name: \"settings-outline\",\n                  size: 30,\n                  color: \"#333\"\n                })\n              });\n            }\n          });\n        } catch (error) {\n          console.error(\"Error fetching profile:\", error);\n        }\n      });\n      return function loadUserProfile() {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n    if (userId) {\n      loadUserProfile();\n    } else {\n      console.log(\"userId is undefined\");\n    }\n  }, [userProfile, navigation]);\n  return _jsx(_Fragment, {\n    children: _jsxs(SafeAreaView, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.profileTop,\n        children: [_jsxs(View, {\n          style: styles.userInfo,\n          children: [_jsxs(TouchableOpacity, {\n            onPress: handleImagePicker,\n            style: {\n              position: \"relative\"\n            },\n            children: [userProfile != null && userProfile.profilePic ? _jsx(Image, {\n              style: styles.profileImage,\n              source: {\n                uri: userProfile == null ? void 0 : userProfile.profilePic\n              }\n            }) : _jsx(Image, {\n              style: styles.profileImage,\n              source: {\n                uri: \"https://cdn-icons-png.flaticon.com/128/149/149071.png\"\n              }\n            }), _jsx(TouchableOpacity, {\n              onPress: handleImagePicker,\n              style: {\n                position: \"absolute\",\n                bottom: -3,\n                right: -3\n              },\n              children: _jsx(AntDesign, {\n                name: \"pluscircle\",\n                size: 24,\n                color: \"blue\"\n              })\n            })]\n          }), _jsxs(View, {\n            style: styles.userStats,\n            children: [_jsxs(View, {\n              style: styles.userStatsItem,\n              children: [_jsx(Text, {\n                style: styles.statsCount,\n                children: posts.length\n              }), _jsx(Text, {\n                style: styles.statsText,\n                children: \" posts\"\n              })]\n            }), _jsxs(View, {\n              style: styles.userStatsItem,\n              children: [_jsx(Text, {\n                style: styles.statsCount,\n                children: followers\n              }), _jsx(Text, {\n                style: styles.statsText,\n                children: \" followers\"\n              })]\n            }), _jsxs(View, {\n              style: styles.userStatsItem,\n              children: [_jsxs(Text, {\n                style: styles.statsCount,\n                children: [followings, \" \"]\n              }), _jsx(Text, {\n                style: styles.statsText,\n                children: \"following\"\n              })]\n            })]\n          })]\n        }), userId !== loggedInUserId && _jsx(TouchableOpacity, {\n          style: styles.followButton,\n          children: _jsx(Text, {\n            style: styles.followButtonText,\n            children: \"Follow\"\n          })\n        })]\n      }), _jsx(View, {\n        style: styles.profileInfo,\n        children: _jsx(View, {\n          style: styles.bioContainer,\n          children: _jsxs(View, {\n            style: styles.bioTextContainer,\n            children: [_jsxs(View, {\n              style: {\n                flexDirection: \"row\",\n                gap: 20\n              },\n              children: [userProfile && userProfile != null && userProfile.fullname ? _jsx(Text, {\n                style: styles.bioLabel,\n                children: userProfile == null ? void 0 : userProfile.fullname\n              }) : _jsx(Text, {\n                style: styles.bioLabel,\n                children: \"Full Name\"\n              }), userProfile && userProfile != null && userProfile.pronouns ? _jsx(Text, {\n                children: userProfile == null ? void 0 : userProfile.pronouns\n              }) : null]\n            }), userProfile && userProfile != null && userProfile.bio ? _jsx(View, {\n              children: _jsx(Text, {\n                children: userProfile == null ? void 0 : userProfile.bio\n              })\n            }) : null, _jsx(TouchableOpacity, {\n              style: styles.updateBioButton,\n              onPress: function onPress() {\n                return navigation.navigate(\"EditProfile\");\n              },\n              children: _jsx(Text, {\n                style: styles.updateBioButtonText,\n                children: \"Edit Profile\"\n              })\n            })]\n          })\n        })\n      }), _jsxs(Tab.Navigator, {\n        children: [_jsx(Tab.Screen, {\n          name: \"Posts\",\n          options: {\n            tabBarIcon: function tabBarIcon(_ref8) {\n              var color = _ref8.color,\n                size = _ref8.size;\n              return _jsx(MaterialCommunityIcons, {\n                name: \"grid\",\n                size: 24,\n                color: \"black\"\n              });\n            }\n          },\n          children: function children() {\n            return _jsx(ImagesTabScreen, {\n              posts: posts.filter(function (post) {\n                return post.img;\n              })\n            });\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"Tweets\",\n          options: {\n            tabBarIcon: function tabBarIcon(_ref9) {\n              var color = _ref9.color,\n                size = _ref9.size;\n              return _jsx(MaterialCommunityIcons, {\n                name: \"message-text\",\n                size: 24,\n                color: \"black\"\n              });\n            }\n          },\n          children: function children() {\n            return _jsx(TweetsTabScreen, {\n              posts: posts.filter(function (post) {\n                return !post.img;\n              })\n            });\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"Tag\",\n          options: {\n            tabBarIcon: function tabBarIcon(_ref10) {\n              var color = _ref10.color,\n                size = _ref10.size;\n              return _jsx(MaterialIcons, {\n                name: \"tag\",\n                size: 24,\n                color: \"black\"\n              });\n            }\n          },\n          children: function children() {\n            return _jsx(TagTabScreen, {\n              posts: posts.filter(function (post) {\n                return !post.img;\n              })\n            });\n          }\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  profileTop: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    paddingHorizontal: 10,\n    paddingVertical: 10\n  },\n  settingsIcon: {\n    marginRight: 10\n  },\n  followButton: {\n    backgroundColor: \"blue\",\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 5\n  },\n  followButtonText: {\n    color: \"white\",\n    fontWeight: \"bold\"\n  },\n  profileInfo: {\n    flexDirection: \"column\",\n    marginBottom: 20\n  },\n  bioContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 10\n  },\n  profileImage: {\n    width: 80,\n    height: 80,\n    borderRadius: 50,\n    resizeMode: \"cover\"\n  },\n  bioTextContainer: {\n    flex: 1,\n    alignItems: \"flex-start\",\n    padding: 10\n  },\n  bioLabel: {\n    fontWeight: \"bold\",\n    marginBottom: 5\n  },\n  updateBioButton: {\n    backgroundColor: \"black\",\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    borderRadius: 5,\n    marginTop: 8\n  },\n  updateBioButtonText: {\n    color: \"white\",\n    fontWeight: \"bold\"\n  },\n  userInfo: {\n    flexDirection: \"row\",\n    flex: 1\n  },\n  userStats: {\n    marginLeft: 20,\n    flexDirection: \"row\",\n    flex: 1,\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\"\n  },\n  userStatsItem: {\n    alignItems: \"center\"\n  },\n  statsText: {\n    fontSize: 14,\n    fontWeight: \"500\"\n  },\n  statsCount: {\n    fontWeight: \"bold\",\n    fontSize: 22\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"names":["React","useEffect","useState","useContext","StyleSheet","View","Text","Image","TouchableOpacity","SafeAreaView","useNavigation","UserType","Icon","createMaterialTopTabNavigator","axios","AsyncStorage","ImagesScreen","TweetsScreen","MaterialCommunityIcons","AntDesign","MaterialIcons","ImagePicker","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Tab","ImagesTabScreen","_ref","posts","TweetsTabScreen","_ref2","TagTabScreen","_ref3","ProfileScreen","navigation","_useContext","userId","_useState","_useState2","_slicedToArray","userProfile","setUserProfile","_useState3","_useState4","followers","setFollowers","_useState5","_useState6","followings","setFollowings","_useState7","_useState8","setPosts","_useState9","_useState10","bio","setBio","_useState11","_useState12","image","setImage","_useState13","_useState14","isImageSelected","setIsImageSelected","_useState15","_useState16","loggedInUserId","setLoggedInUserId","handleImagePicker","_ref4","_asyncToGenerator","permissionResult","requestMediaLibraryPermissionsAsync","granted","alert","pickerResult","launchImageLibraryAsync","canceled","assets","length","console","log","uri","apply","arguments","fetchLoggedInUserId","_ref5","getItem","error","fetchProfile","_ref6","authToken","GetUser","get","headers","Authorization","data","profileResponse","_profileResponse$data","user","postsResponse","_x","loadUserProfile","_ref7","GetUserResponse","userObject","usernameOfCurrentUser","username","setOptions","headerTitle","headerLeft","style","marginLeft","fontWeight","fontSize","children","headerRight","styles","settingsIcon","onPress","navigate","name","size","color","container","profileTop","userInfo","position","profilePic","profileImage","source","bottom","right","userStats","userStatsItem","statsCount","statsText","followButton","followButtonText","profileInfo","bioContainer","bioTextContainer","flexDirection","gap","fullname","bioLabel","pronouns","updateBioButton","updateBioButtonText","Navigator","Screen","options","tabBarIcon","_ref8","filter","post","img","_ref9","_ref10","create","flex","backgroundColor","justifyContent","alignItems","paddingHorizontal","paddingVertical","marginRight","borderRadius","marginBottom","width","height","resizeMode","padding","marginTop"],"sources":["C:/Users/VT/Documents/Confidentials/Native Projects/levelArtFrontend/screens/ProfileScreen.js"],"sourcesContent":["// Import useState and useEffect\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  Image,\r\n  TouchableOpacity,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { UserType } from \"../UserContext\";\r\nimport Icon from \"react-native-vector-icons/Ionicons\";\r\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\r\nimport axios from \"axios\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport ImagesScreen from \"./ImagesScreen\";\r\nimport TweetsScreen from \"./TweetsScreen\";\r\nimport {\r\n  MaterialCommunityIcons,\r\n  AntDesign,\r\n  MaterialIcons,\r\n} from \"@expo/vector-icons\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\n\r\nconst Tab = createMaterialTopTabNavigator();\r\n\r\nconst ImagesTabScreen = ({ posts }) => <ImagesScreen posts={posts} />;\r\nconst TweetsTabScreen = ({ posts }) => <TweetsScreen posts={posts} />;\r\nconst TagTabScreen = ({ posts }) => <TweetsScreen posts={posts} />;\r\n\r\nconst ProfileScreen = () => {\r\n  const navigation = useNavigation();\r\n  const { userId } = useContext(UserType); // Access userId from context\r\n  const [userProfile, setUserProfile] = useState(null);\r\n  const [followers, setFollowers] = useState(0);\r\n  const [followings, setFollowings] = useState(0);\r\n  const [posts, setPosts] = useState([]);\r\n  const [bio, setBio] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [isImageSelected, setIsImageSelected] = useState(false);\r\n  const [loggedInUserId, setLoggedInUserId] = useState(null); // New state to hold the logged-in user's ID\r\n\r\n  const handleImagePicker = async () => {\r\n    const permissionResult =\r\n      await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n    if (permissionResult.granted === false) {\r\n      alert(\"Permission to access camera roll is required!\");\r\n      return;\r\n    }\r\n\r\n    const pickerResult = await ImagePicker.launchImageLibraryAsync();\r\n    if (!pickerResult.canceled && pickerResult.assets.length > 0) {\r\n      console.log(\"Selected image URI:\", pickerResult.assets[0].uri);\r\n      setImage(pickerResult.assets[0].uri);\r\n      setIsImageSelected(true);\r\n    } else {\r\n      console.log(\"Image picking cancelled or no image selected\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchLoggedInUserId = async () => {\r\n      try {\r\n        const loggedInUserId = await AsyncStorage.getItem(\"userId\");\r\n        setLoggedInUserId(loggedInUserId);\r\n      } catch (error) {\r\n        console.error(\"Error fetching logged-in user's ID:\", error);\r\n      }\r\n    };\r\n\r\n    fetchLoggedInUserId();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchProfile = async (userId) => {\r\n      try {\r\n        const authToken = await AsyncStorage.getItem(\"authToken\");\r\n        const GetUser = await axios.get(\r\n          `https://levelart.up.railway.app/users/${userId}`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${authToken}`,\r\n            },\r\n          }\r\n        );\r\n        setUserProfile(GetUser.data);\r\n\r\n        const profileResponse = await axios.get(\r\n          `https://levelart.up.railway.app/followers/${userId}/followers`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${authToken}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        if (profileResponse) {\r\n          const { user, followers, followings, bio } = profileResponse.data;\r\n          // Corrected setUser function\r\n          setUserProfile(user);\r\n          setFollowers(followers?.length || 0);\r\n          setFollowings(followings?.length || 0);\r\n          setBio(bio || \"\");\r\n\r\n          const postsResponse = await axios.get(\r\n            `https://levelart.up.railway.app/posts/user/${userId}`,\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${authToken}`,\r\n              },\r\n            }\r\n          );\r\n\r\n          if (postsResponse) {\r\n            setPosts(postsResponse.data);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching profile:\", error);\r\n      }\r\n    };\r\n\r\n    if (userId) {\r\n      fetchProfile(userId);\r\n    } else {\r\n      console.log(\"userId is undefined\");\r\n    }\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    const loadUserProfile = async () => {\r\n      try {\r\n        const authToken = await AsyncStorage.getItem(\"authToken\");\r\n        const GetUserResponse = await axios.get(\r\n          `https://levelart.up.railway.app/users/${userId}`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${authToken}`,\r\n            },\r\n          }\r\n        );\r\n        const userObject = GetUserResponse.data;\r\n        setUserProfile(userObject);\r\n  \r\n        // Extract username from the userObject\r\n        const usernameOfCurrentUser = userObject?.username;\r\n        console.log(\"Username of current user:\", usernameOfCurrentUser);\r\n  \r\n        // Set header options\r\n        navigation.setOptions({\r\n          headerTitle: \"\",\r\n          headerLeft: () => (\r\n            <Text style={{ marginLeft: 10, fontWeight: \"500\", fontSize: 18 }}>\r\n              {usernameOfCurrentUser || \"Loading...\"}\r\n            </Text>\r\n          ),\r\n          headerRight: () => (\r\n            <TouchableOpacity\r\n              style={styles.settingsIcon}\r\n              onPress={() => navigation.navigate(\"Settings\")}\r\n            >\r\n              <Icon name=\"settings-outline\" size={30} color=\"#333\" />\r\n            </TouchableOpacity>\r\n          ),\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error fetching profile:\", error);\r\n      }\r\n    };\r\n  \r\n    if (userId) {\r\n      loadUserProfile();\r\n    } else {\r\n      console.log(\"userId is undefined\");\r\n    }\r\n  }, [userProfile, navigation]);\r\n  \r\n\r\n  return (\r\n    <>\r\n      <SafeAreaView style={styles.container}>\r\n        <View style={styles.profileTop}>\r\n          <View style={styles.userInfo}>\r\n            <TouchableOpacity\r\n              onPress={handleImagePicker}\r\n              style={{ position: \"relative\" }}\r\n            >\r\n              {userProfile?.profilePic ? (\r\n                <Image\r\n                  style={styles.profileImage}\r\n                  source={{ uri: userProfile?.profilePic }}\r\n                />\r\n              ) : (\r\n                <Image\r\n                  style={styles.profileImage}\r\n                  source={{\r\n                    uri: \"https://cdn-icons-png.flaticon.com/128/149/149071.png\",\r\n                  }}\r\n                />\r\n              )}\r\n\r\n              <TouchableOpacity\r\n                onPress={handleImagePicker}\r\n                style={{ position: \"absolute\", bottom: -3, right: -3 }}\r\n              >\r\n                <AntDesign name=\"pluscircle\" size={24} color=\"blue\" />\r\n              </TouchableOpacity>\r\n            </TouchableOpacity>\r\n            <View style={styles.userStats}>\r\n              <View style={styles.userStatsItem}>\r\n                <Text style={styles.statsCount}>{posts.length}</Text>\r\n                <Text style={styles.statsText}> posts</Text>\r\n              </View>\r\n              <View style={styles.userStatsItem}>\r\n                <Text style={styles.statsCount}>{followers}</Text>\r\n                <Text style={styles.statsText}> followers</Text>\r\n              </View>\r\n              <View style={styles.userStatsItem}>\r\n                <Text style={styles.statsCount}>{followings} </Text>\r\n                <Text style={styles.statsText}>following</Text>\r\n              </View>\r\n            </View>\r\n          </View>\r\n          {/* Render the follow button only if the profile does not belong to the logged-in user */}\r\n          {userId !== loggedInUserId && (\r\n    <TouchableOpacity style={styles.followButton}>\r\n      <Text style={styles.followButtonText}>Follow</Text>\r\n    </TouchableOpacity>\r\n  )}\r\n        </View>\r\n\r\n        <View style={styles.profileInfo}>\r\n          <View style={styles.bioContainer}>\r\n            <View style={styles.bioTextContainer}>\r\n              <View style={{ flexDirection: \"row\", gap: 20 }}>\r\n                {userProfile && userProfile?.fullname ? (\r\n                  <Text style={styles.bioLabel}>{userProfile?.fullname}</Text>\r\n                ) : (\r\n                  <Text style={styles.bioLabel}>Full Name</Text>\r\n                )}\r\n                {userProfile && userProfile?.pronouns ? (\r\n                  <Text>{userProfile?.pronouns}</Text>\r\n                ) : null}\r\n              </View>\r\n              {userProfile && userProfile?.bio ? (\r\n                <View>\r\n                  <Text>{userProfile?.bio}</Text>\r\n                </View>\r\n              ) : null}\r\n\r\n              <TouchableOpacity\r\n                style={styles.updateBioButton}\r\n                onPress={() => navigation.navigate(\"EditProfile\")}\r\n              >\r\n                <Text style={styles.updateBioButtonText}>Edit Profile</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </View>\r\n\r\n        <Tab.Navigator>\r\n          <Tab.Screen\r\n            name=\"Posts\"\r\n            options={{\r\n              tabBarIcon: ({ color, size }) => (\r\n                <MaterialCommunityIcons name=\"grid\" size={24} color=\"black\" />\r\n              ),\r\n            }}\r\n          >\r\n            {() => <ImagesTabScreen posts={posts.filter((post) => post.img)} />}\r\n          </Tab.Screen>\r\n          <Tab.Screen\r\n            name=\"Tweets\"\r\n            options={{\r\n              tabBarIcon: ({ color, size }) => (\r\n                <MaterialCommunityIcons\r\n                  name=\"message-text\"\r\n                  size={24}\r\n                  color=\"black\"\r\n                />\r\n              ),\r\n            }}\r\n          >\r\n            {() => <TweetsTabScreen posts={posts.filter((post) => !post.img)} />}\r\n          </Tab.Screen>\r\n          <Tab.Screen\r\n            name=\"Tag\"\r\n            options={{\r\n              tabBarIcon: ({ color, size }) => (\r\n                <MaterialIcons name=\"tag\" size={24} color=\"black\" />\r\n              ),\r\n            }}\r\n          >\r\n            {() => <TagTabScreen posts={posts.filter((post) => !post.img)} />}\r\n          </Tab.Screen>\r\n        </Tab.Navigator>\r\n      </SafeAreaView>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"white\",\r\n  },\r\n  profileTop: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 10,\r\n  },\r\n  settingsIcon: {\r\n    marginRight: 10,\r\n  },\r\n  followButton: {\r\n    backgroundColor: \"blue\",\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 10,\r\n    borderRadius: 5,\r\n  },\r\n  followButtonText: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  profileInfo: {\r\n    flexDirection: \"column\",\r\n    marginBottom: 20,\r\n  },\r\n  bioContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: 10,\r\n  },\r\n  profileImage: {\r\n    width: 80,\r\n    height: 80,\r\n    borderRadius: 50,\r\n    resizeMode: \"cover\",\r\n  },\r\n  bioTextContainer: {\r\n    flex: 1,\r\n    alignItems: \"flex-start\",\r\n    padding: 10,\r\n  },\r\n  bioLabel: {\r\n    fontWeight: \"bold\",\r\n    marginBottom: 5,\r\n  },\r\n  updateBioButton: {\r\n    backgroundColor: \"black\",\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 12,\r\n    borderRadius: 5,\r\n    marginTop: 8,\r\n  },\r\n  updateBioButtonText: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  userInfo: {\r\n    flexDirection: \"row\",\r\n    flex: 1,\r\n  },\r\n  userStats: {\r\n    marginLeft: 20,\r\n    flexDirection: \"row\",\r\n    flex: 1,\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n  },\r\n  userStatsItem: {\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  statsText: {\r\n    fontSize: 14,\r\n    fontWeight: \"500\",\r\n  },\r\n  statsCount: {\r\n    fontWeight: \"bold\",\r\n    fontSize: 22,\r\n  },\r\n});\r\n\r\nexport default ProfileScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}