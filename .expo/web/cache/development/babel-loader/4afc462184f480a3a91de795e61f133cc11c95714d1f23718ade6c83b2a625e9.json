{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { UserType } from \"../UserContext\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport ImageScreen from \"./ImagesScreen\";\nimport TweetScreen from \"./TweetsScreen\";\nimport axios from \"axios\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createMaterialTopTabNavigator();\nvar ProfileScreen = function ProfileScreen() {\n  var navigation = useNavigation();\n  var _useContext = useContext(UserType),\n    userId = _useContext.userId,\n    setUserId = _useContext.setUserId;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    posts = _useState2[0],\n    setPosts = _useState2[1];\n  useEffect(function () {\n    var fetchPosts = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var response = yield axios.get(`API_ENDPOIN/${userId}`);\n          setPosts(response.data);\n        } catch (error) {\n          console.error(\"Error fetching posts:\", error);\n        }\n      });\n      return function fetchPosts() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchPosts();\n  }, [userId]);\n  var logout = function () {\n    var _ref2 = _asyncToGenerator(function* () {});\n    return function logout() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleSettingsPress = function handleSettingsPress() {\n    navigation.navigate('Settings');\n  };\n  var updateBio = function () {\n    var _ref3 = _asyncToGenerator(function* () {});\n    return function updateBio() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n      },\n      children: [_jsx(Text, {\n        children: \"Profile Screen\"\n      }), _jsx(Icon, {\n        name: \"settings-outline\",\n        size: 30,\n        onPress: handleSettingsPress\n      })]\n    }), _jsxs(Tab.Navigator, {\n      children: [_jsx(Tab.Screen, {\n        name: \"Images\",\n        component: function component() {\n          return _jsx(ImageScreen, {\n            posts: posts\n          });\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Tweets\",\n        component: function component() {\n          return _jsx(TweetScreen, {\n            posts: posts\n          });\n        }\n      })]\n    }), _jsx(Button, {\n      title: \"Logout\",\n      onPress: logout\n    })]\n  });\n};\nexport default ProfileScreen;","map":{"version":3,"names":["React","useEffect","useState","useContext","View","Text","Button","useNavigation","UserType","Icon","createMaterialTopTabNavigator","ImageScreen","TweetScreen","axios","jsx","_jsx","jsxs","_jsxs","Tab","ProfileScreen","navigation","_useContext","userId","setUserId","_useState","_useState2","_slicedToArray","posts","setPosts","fetchPosts","_ref","_asyncToGenerator","response","get","data","error","console","apply","arguments","logout","_ref2","handleSettingsPress","navigate","updateBio","_ref3","style","flex","children","flexDirection","justifyContent","alignItems","name","size","onPress","Navigator","Screen","component","title"],"sources":["C:/Users/DELL/Documents/Confidentials/levelArtFrontend/screens/ProfileScreen.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { View, Text, Button } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { UserType } from '../UserContext';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\r\nimport ImageScreen from './ImagesScreen';\r\nimport TweetScreen from './TweetsScreen';\r\nimport axios from \"axios\"; // Import axios for making API requests\r\n\r\nconst Tab = createMaterialTopTabNavigator();\r\n\r\nconst ProfileScreen = () => {\r\n  const navigation = useNavigation();\r\n  const { userId, setUserId } = useContext(UserType);\r\n  const [posts, setPosts] = useState([]); // Define state for posts data\r\n\r\n  useEffect(() => {\r\n    // Fetch posts data when the component mounts\r\n    const fetchPosts = async () => {\r\n      try {\r\n        // Make API request to fetch posts data\r\n        const response = await axios.get(`API_ENDPOIN/${userId}`);\r\n        // Set the fetched posts data in the state\r\n        setPosts(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching posts:\", error);\r\n      }\r\n    };\r\n\r\n    fetchPosts(); // Call the fetchPosts function\r\n  }, [userId]); // Add userId to the dependency array\r\n\r\n  const logout = async () => {\r\n    // Handle logout\r\n    // ...\r\n  };\r\n\r\n  const handleSettingsPress = () => {\r\n    navigation.navigate('Settings');\r\n  };\r\n\r\n  const updateBio = async () => {\r\n    // Update bio\r\n    // ...\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n        <Text>Profile Screen</Text>\r\n        <Icon name=\"settings-outline\" size={30} onPress={handleSettingsPress} />\r\n      </View>\r\n      <Tab.Navigator>\r\n        <Tab.Screen name=\"Images\" component={() => <ImageScreen posts={posts} />} />\r\n        <Tab.Screen name=\"Tweets\" component={() => <TweetScreen posts={posts} />} />\r\n      </Tab.Navigator>\r\n      <Button title=\"Logout\" onPress={logout} />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}