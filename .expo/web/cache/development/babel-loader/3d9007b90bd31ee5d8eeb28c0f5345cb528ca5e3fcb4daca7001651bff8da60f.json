{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { UserType } from \"../UserContext\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CreatePostScreen = function CreatePostScreen() {\n  var _useContext = useContext(UserType),\n    userId = _useContext.userId;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    content = _useState2[0],\n    setContent = _useState2[1];\n  var handlePostSubmit = function handlePostSubmit() {\n    console.log(uer);\n    if (!userId || !content) {\n      console.log(\"Postedby and text fields are required\");\n      return;\n    }\n    var postData = {\n      userId: userId,\n      content: content\n    };\n    axios.post(\"http://localhost:3000/posts/create-post\", postData).then(function (response) {\n      setContent(\"\");\n    }).catch(function (error) {\n      console.log(\"Error creating post\", error);\n    });\n  };\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.userInfo,\n      children: [_jsx(Image, {\n        style: styles.userAvatar,\n        source: {\n          uri: \"https://cdn-icons-png.flaticon.com/128/149/149071.png\"\n        }\n      }), _jsx(Text, {\n        style: styles.username,\n        children: \"Your Username\"\n      })]\n    }), _jsx(View, {\n      style: styles.inputContainer,\n      children: _jsx(TextInput, {\n        value: content,\n        onChangeText: function onChangeText(text) {\n          return setContent(text);\n        },\n        placeholder: \"Type your message...\",\n        placeholderTextColor: \"black\",\n        multiline: true,\n        style: styles.input\n      })\n    }), _jsx(Button, {\n      onPress: handlePostSubmit,\n      title: \"Share Post\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    padding: 10\n  },\n  userInfo: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    gap: 10,\n    padding: 10\n  },\n  userAvatar: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    resizeMode: \"contain\"\n  },\n  username: {\n    fontSize: 16,\n    fontWeight: \"bold\"\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    marginLeft: 10\n  },\n  input: {\n    flex: 1,\n    borderWidth: 1,\n    borderColor: \"black\",\n    borderRadius: 5,\n    padding: 10\n  }\n});\nexport default CreatePostScreen;","map":{"version":3,"names":["React","useState","useContext","View","TextInput","Button","SafeAreaView","Image","Text","StyleSheet","UserType","axios","jsx","_jsx","jsxs","_jsxs","CreatePostScreen","_useContext","userId","_useState","_useState2","_slicedToArray","content","setContent","handlePostSubmit","console","log","uer","postData","post","then","response","catch","error","style","styles","container","children","userInfo","userAvatar","source","uri","username","inputContainer","value","onChangeText","text","placeholder","placeholderTextColor","multiline","input","onPress","title","create","padding","flexDirection","alignItems","gap","width","height","borderRadius","resizeMode","fontSize","fontWeight","marginLeft","flex","borderWidth","borderColor"],"sources":["C:/himanshu/threads-app/screens/ThreadsScreen.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { View, TextInput, Button, SafeAreaView, Image, Text, StyleSheet } from \"react-native\";\r\nimport { UserType } from \"../UserContext\";\r\nimport axios from \"axios\";\r\n\r\nconst CreatePostScreen = () => {\r\n  const { userId } = useContext(UserType);\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const handlePostSubmit = () => {\r\n    console.log(uer)\r\n    if (!userId || !content) {\r\n      console.log(\"Postedby and text fields are required\");\r\n      return;\r\n    }\r\n  \r\n    const postData = {\r\n      userId,\r\n      content,\r\n    };\r\n  \r\n    axios.post(\"http://localhost:3000/posts/create-post\", postData)\r\n      .then((response) => {\r\n        setContent(\"\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error creating post\", error);\r\n      });\r\n  };\r\n  \r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.userInfo}>\r\n        <Image\r\n          style={styles.userAvatar}\r\n          source={{\r\n            uri: \"https://cdn-icons-png.flaticon.com/128/149/149071.png\",\r\n          }}\r\n        />\r\n        <Text style={styles.username}>Your Username</Text>\r\n      </View>\r\n\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          value={content}\r\n          onChangeText={(text) => setContent(text)}\r\n          placeholder=\"Type your message...\"\r\n          placeholderTextColor=\"black\"\r\n          multiline\r\n          style={styles.input}\r\n        />\r\n      </View>\r\n\r\n      <Button onPress={handlePostSubmit} title=\"Share Post\" />\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 10,\r\n  },\r\n  userInfo: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    gap: 10,\r\n    padding: 10,\r\n  },\r\n  userAvatar: {\r\n    width: 40,\r\n    height: 40,\r\n    borderRadius: 20,\r\n    resizeMode: \"contain\",\r\n  },\r\n  username: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n  },\r\n  inputContainer: {\r\n    flexDirection: \"row\",\r\n    marginLeft: 10,\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    borderWidth: 1,\r\n    borderColor: \"black\",\r\n    borderRadius: 5,\r\n    padding: 10,\r\n  },\r\n});\r\n\r\nexport default CreatePostScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}