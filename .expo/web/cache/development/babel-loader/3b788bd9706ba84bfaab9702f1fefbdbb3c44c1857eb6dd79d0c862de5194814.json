{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { UserType } from \"../UserContext\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport ImagesScreen from \"./ImagesScreen\";\nimport TweetsScreen from \"./TweetsScreen\";\nimport { MaterialCommunityIcons, AntDesign, MaterialIcons } from \"@expo/vector-icons\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tab = createMaterialTopTabNavigator();\nvar ImagesTabScreen = function ImagesTabScreen(_ref) {\n  var posts = _ref.posts;\n  return _jsx(ImagesScreen, {\n    posts: posts\n  });\n};\nvar TweetsTabScreen = function TweetsTabScreen(_ref2) {\n  var posts = _ref2.posts;\n  return _jsx(TweetsScreen, {\n    posts: posts\n  });\n};\nvar TagTabScreen = function TagTabScreen(_ref3) {\n  var posts = _ref3.posts;\n  return _jsx(TweetsScreen, {\n    posts: posts\n  });\n};\nvar ProfileScreen = function ProfileScreen() {\n  var navigation = useNavigation();\n  var _useContext = useContext(UserType),\n    userId = _useContext.userId,\n    setUserId = _useContext.setUserId;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    userProfile = _useState2[0],\n    setUserProfile = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    followers = _useState4[0],\n    setFollowers = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    followings = _useState6[0],\n    setFollowings = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    posts = _useState8[0],\n    setPosts = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    bio = _useState10[0],\n    setBio = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    image = _useState12[0],\n    setImage = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    isImageSelected = _useState14[0],\n    setIsImageSelected = _useState14[1];\n  var handleImagePicker = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        var permissionResult = yield ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (permissionResult.granted === false) {\n          alert(\"Permission to access camera roll is required!\");\n          return;\n        }\n        var pickerResult = yield ImagePicker.launchImageLibraryAsync({\n          allowsEditing: true,\n          aspect: [1, 1],\n          quality: 1\n        });\n        if (!pickerResult.cancelled && pickerResult.assets.length > 0) {\n          var selectedAsset = pickerResult.assets[0];\n          var newImageUri = selectedAsset.uri;\n          setImage(newImageUri);\n          var authToken = yield AsyncStorage.getItem(\"authToken\");\n          var formData = new FormData();\n          formData.append(\"profilePic\", {\n            uri: newImageUri,\n            name: \"profilePic.jpg\",\n            type: \"image/jpeg\"\n          });\n          var updateProfilePicResponse = yield axios.put(`https://levelart.up.railway.app/users/${userId}`, formData, {\n            headers: {\n              Authorization: `Bearer ${authToken}`,\n              \"Content-Type\": \"multipart/form-data\"\n            }\n          });\n          if (updateProfilePicResponse.status === 200) {\n            console.log(\"Profile picture updated successfully\");\n          } else {\n            console.error(\"Error updating profile picture:\", updateProfilePicResponse.data);\n            setImage(userProfile.profilePic || \"\");\n          }\n        }\n      } catch (error) {\n        console.error(\"Error picking image:\", error);\n      }\n    });\n    return function handleImagePicker() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    var fetchProfile = function () {\n      var _ref5 = _asyncToGenerator(function* (userId) {\n        try {\n          var authToken = yield AsyncStorage.getItem(\"authToken\");\n          var GetUser = yield axios.get(`https://levelart.up.railway.app/users/${userId}`, {\n            headers: {\n              Authorization: `Bearer ${authToken}`\n            }\n          });\n          setUserProfile(GetUser.data);\n          var profileResponse = yield axios.get(`https://levelart.up.railway.app/followers/${userId}/followers`, {\n            headers: {\n              Authorization: `Bearer ${authToken}`\n            }\n          });\n          if (profileResponse) {\n            var _profileResponse$data = profileResponse.data,\n              user = _profileResponse$data.user,\n              _followers = _profileResponse$data.followers,\n              _followings = _profileResponse$data.followings,\n              _bio = _profileResponse$data.bio;\n            setUserProfile(user);\n            setFollowers((_followers == null ? void 0 : _followers.length) || 0);\n            setFollowings((_followings == null ? void 0 : _followings.length) || 0);\n            setBio(_bio || \"\");\n            var postsResponse = yield axios.get(`https://levelart.up.railway.app/posts/user/${userId}`, {\n              headers: {\n                Authorization: `Bearer ${authToken}`\n              }\n            });\n            if (postsResponse) {\n              setPosts(postsResponse.data);\n            }\n          }\n        } catch (error) {\n          console.error(\"Error fetching profile:\", error);\n        }\n      });\n      return function fetchProfile(_x) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n    if (userId) {\n      fetchProfile(userId);\n    } else {\n      console.log(\"userId is undefined\");\n    }\n  }, [userId]);\n  useEffect(function () {\n    var loadUserProfile = function () {\n      var _ref6 = _asyncToGenerator(function* () {\n        try {\n          var authToken = yield AsyncStorage.getItem(\"authToken\");\n          var GetUserResponse = yield axios.get(`https://levelart.up.railway.app/users/${userId}`, {\n            headers: {\n              Authorization: `Bearer ${authToken}`\n            }\n          });\n          var userObject = GetUserResponse.data;\n          setUserProfile(userObject);\n          var usernameOfCurrentUser = userObject == null ? void 0 : userObject.username;\n          console.log(\"Username of current user:\", usernameOfCurrentUser);\n          navigation.setOptions({\n            headerTitle: \"\",\n            headerLeft: function headerLeft() {\n              return _jsx(Text, {\n                style: {\n                  marginLeft: 10,\n                  fontWeight: \"500\",\n                  fontSize: 18\n                },\n                children: usernameOfCurrentUser || \"Loading...\"\n              });\n            },\n            headerRight: function headerRight() {\n              return _jsx(TouchableOpacity, {\n                style: styles.settingsIcon,\n                onPress: function onPress() {\n                  return navigation.navigate(\"Settings\");\n                },\n                children: _jsx(Icon, {\n                  name: \"settings-outline\",\n                  size: 30,\n                  color: \"#333\"\n                })\n              });\n            }\n          });\n        } catch (error) {\n          console.error(\"Error fetching profile:\", error);\n        }\n      });\n      return function loadUserProfile() {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n    if (userId) {\n      loadUserProfile();\n    } else {\n      console.log(\"userId is undefined\");\n    }\n  }, [userProfile, navigation]);\n  return _jsx(_Fragment, {\n    children: _jsxs(SafeAreaView, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: styles.profileTop,\n        children: _jsxs(View, {\n          style: styles.userInfo,\n          children: [_jsxs(TouchableOpacity, {\n            onPress: handleImagePicker,\n            style: {\n              position: \"relative\"\n            },\n            children: [userProfile != null && userProfile.profilePic ? _jsx(Image, {\n              style: styles.profileImage,\n              source: {\n                uri: userProfile == null ? void 0 : userProfile.profilePic\n              }\n            }) : _jsx(Image, {\n              style: styles.profileImage,\n              source: {\n                uri: \"https://cdn-icons-png.flaticon.com/128/149/149071.png\"\n              }\n            }), _jsx(TouchableOpacity, {\n              onPress: handleImagePicker,\n              style: {\n                position: \"absolute\",\n                bottom: -3,\n                right: -3\n              },\n              children: _jsx(AntDesign, {\n                name: \"pluscircle\",\n                size: 24,\n                color: \"blue\"\n              })\n            })]\n          }), _jsxs(View, {\n            style: styles.userStats,\n            children: [_jsxs(View, {\n              style: styles.userStatsItem,\n              children: [_jsx(Text, {\n                style: styles.statsCount,\n                children: posts.length\n              }), _jsx(Text, {\n                style: styles.statsText,\n                children: \" posts\"\n              })]\n            }), _jsxs(View, {\n              style: styles.userStatsItem,\n              children: [_jsx(Text, {\n                style: styles.statsCount,\n                children: followers\n              }), _jsx(Text, {\n                style: styles.statsText,\n                children: \" followers\"\n              })]\n            }), _jsxs(View, {\n              style: styles.userStatsItem,\n              children: [_jsxs(Text, {\n                style: styles.statsCount,\n                children: [followings, \" \"]\n              }), _jsx(Text, {\n                style: styles.statsText,\n                children: \"following\"\n              })]\n            })]\n          })]\n        })\n      }), _jsx(View, {\n        style: styles.profileInfo,\n        children: _jsx(View, {\n          style: styles.bioContainer,\n          children: _jsxs(View, {\n            style: styles.bioTextContainer,\n            children: [_jsxs(View, {\n              style: {\n                flexDirection: \"row\",\n                gap: 20\n              },\n              children: [userProfile && userProfile != null && userProfile.fullname ? _jsx(Text, {\n                style: styles.bioLabel,\n                children: userProfile == null ? void 0 : userProfile.fullname\n              }) : _jsx(Text, {\n                style: styles.bioLabel,\n                children: \"Full Name\"\n              }), userProfile && userProfile != null && userProfile.pronouns ? _jsx(Text, {\n                children: userProfile == null ? void 0 : userProfile.pronouns\n              }) : null]\n            }), userProfile && userProfile != null && userProfile.bio ? _jsx(View, {\n              children: _jsx(Text, {\n                children: userProfile == null ? void 0 : userProfile.bio\n              })\n            }) : null, _jsx(TouchableOpacity, {\n              style: styles.updateBioButton,\n              onPress: function onPress() {\n                return navigation.navigate(\"EditProfile\");\n              },\n              children: _jsx(Text, {\n                style: styles.updateBioButtonText,\n                children: \"Edit Profile\"\n              })\n            })]\n          })\n        })\n      }), _jsxs(Tab.Navigator, {\n        children: [_jsx(Tab.Screen, {\n          name: \"Posts\",\n          options: {\n            tabBarIcon: function tabBarIcon(_ref7) {\n              var color = _ref7.color,\n                size = _ref7.size;\n              return _jsx(MaterialCommunityIcons, {\n                name: \"grid\",\n                size: 24,\n                color: \"black\"\n              });\n            }\n          },\n          children: function children() {\n            return _jsx(ImagesTabScreen, {\n              posts: posts.filter(function (post) {\n                return post.img;\n              })\n            });\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"Tweets\",\n          options: {\n            tabBarIcon: function tabBarIcon(_ref8) {\n              var color = _ref8.color,\n                size = _ref8.size;\n              return _jsx(MaterialCommunityIcons, {\n                name: \"message-text\",\n                size: 24,\n                color: \"black\"\n              });\n            }\n          },\n          children: function children() {\n            return _jsx(TweetsTabScreen, {\n              posts: posts.filter(function (post) {\n                return !post.img;\n              })\n            });\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"Tag\",\n          options: {\n            tabBarIcon: function tabBarIcon(_ref9) {\n              var color = _ref9.color,\n                size = _ref9.size;\n              return _jsx(MaterialIcons, {\n                name: \"tag\",\n                size: 24,\n                color: \"black\"\n              });\n            }\n          },\n          children: function children() {\n            return _jsx(TagTabScreen, {\n              posts: posts.filter(function (post) {\n                return !post.img;\n              })\n            });\n          }\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  profileTop: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    paddingHorizontal: 10,\n    paddingVertical: 10\n  },\n  settingsIcon: {\n    marginRight: 10\n  },\n  profileInfo: {\n    flexDirection: \"column\",\n    marginBottom: 20\n  },\n  bioContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 10\n  },\n  profileImage: {\n    width: 80,\n    height: 80,\n    borderRadius: 50,\n    resizeMode: \"cover\"\n  },\n  bioTextContainer: {\n    flex: 1,\n    alignItems: \"flex-start\",\n    padding: 10\n  },\n  bioLabel: {\n    fontWeight: \"bold\",\n    marginBottom: 5\n  },\n  updateBioButton: {\n    backgroundColor: \"black\",\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    borderRadius: 5,\n    marginTop: 8\n  },\n  updateBioButtonText: {\n    color: \"white\",\n    fontWeight: \"bold\"\n  },\n  userInfo: {\n    flexDirection: \"row\",\n    flex: 1\n  },\n  userStats: {\n    marginLeft: 20,\n    flexDirection: \"row\",\n    flex: 1,\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\"\n  },\n  userStatsItem: {\n    alignItems: \"center\"\n  },\n  statsText: {\n    fontSize: 14,\n    fontWeight: \"500\"\n  },\n  statsCount: {\n    fontWeight: \"bold\",\n    fontSize: 22\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"names":["React","useEffect","useState","useContext","StyleSheet","View","Text","Image","TouchableOpacity","SafeAreaView","useNavigation","UserType","Icon","createMaterialTopTabNavigator","axios","AsyncStorage","ImagesScreen","TweetsScreen","MaterialCommunityIcons","AntDesign","MaterialIcons","ImagePicker","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Tab","ImagesTabScreen","_ref","posts","TweetsTabScreen","_ref2","TagTabScreen","_ref3","ProfileScreen","navigation","_useContext","userId","setUserId","_useState","_useState2","_slicedToArray","userProfile","setUserProfile","_useState3","_useState4","followers","setFollowers","_useState5","_useState6","followings","setFollowings","_useState7","_useState8","setPosts","_useState9","_useState10","bio","setBio","_useState11","_useState12","image","setImage","_useState13","_useState14","isImageSelected","setIsImageSelected","handleImagePicker","_ref4","_asyncToGenerator","permissionResult","requestMediaLibraryPermissionsAsync","granted","alert","pickerResult","launchImageLibraryAsync","allowsEditing","aspect","quality","cancelled","assets","length","selectedAsset","newImageUri","uri","authToken","getItem","formData","FormData","append","name","type","updateProfilePicResponse","put","headers","Authorization","status","console","log","error","data","profilePic","apply","arguments","fetchProfile","_ref5","GetUser","get","profileResponse","_profileResponse$data","user","postsResponse","_x","loadUserProfile","_ref6","GetUserResponse","userObject","usernameOfCurrentUser","username","setOptions","headerTitle","headerLeft","style","marginLeft","fontWeight","fontSize","children","headerRight","styles","settingsIcon","onPress","navigate","size","color","container","profileTop","userInfo","position","profileImage","source","bottom","right","userStats","userStatsItem","statsCount","statsText","profileInfo","bioContainer","bioTextContainer","flexDirection","gap","fullname","bioLabel","pronouns","updateBioButton","updateBioButtonText","Navigator","Screen","options","tabBarIcon","_ref7","filter","post","img","_ref8","_ref9","create","flex","backgroundColor","justifyContent","alignItems","paddingHorizontal","paddingVertical","marginRight","marginBottom","width","height","borderRadius","resizeMode","padding","marginTop"],"sources":["C:/Users/VT/Documents/Confidentials/Native Projects/levelArtFrontend/screens/ProfileScreen.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  Image,\r\n  TouchableOpacity,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { UserType } from \"../UserContext\";\r\nimport Icon from \"react-native-vector-icons/Ionicons\";\r\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\r\nimport axios from \"axios\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport ImagesScreen from \"./ImagesScreen\";\r\nimport TweetsScreen from \"./TweetsScreen\";\r\nimport {\r\n  MaterialCommunityIcons,\r\n  AntDesign,\r\n  MaterialIcons,\r\n} from \"@expo/vector-icons\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\n\r\nconst Tab = createMaterialTopTabNavigator();\r\n\r\nconst ImagesTabScreen = ({ posts }) => <ImagesScreen posts={posts} />;\r\nconst TweetsTabScreen = ({ posts }) => <TweetsScreen posts={posts} />;\r\nconst TagTabScreen = ({ posts }) => <TweetsScreen posts={posts} />;\r\n\r\nconst ProfileScreen = () => {\r\n  const navigation = useNavigation();\r\n\r\n  const { userId, setUserId } = useContext(UserType);\r\n  const [userProfile, setUserProfile] = useState(null);\r\n  const [followers, setFollowers] = useState(0);\r\n  const [followings, setFollowings] = useState(0);\r\n  const [posts, setPosts] = useState([]);\r\n  const [bio, setBio] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [isImageSelected, setIsImageSelected] = useState(false);\r\n\r\nconst handleImagePicker = async () => {\r\n  try {\r\n    const permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n    if (permissionResult.granted === false) {\r\n      alert(\"Permission to access camera roll is required!\");\r\n      return;\r\n    }\r\n\r\n    const pickerResult = await ImagePicker.launchImageLibraryAsync({\r\n      allowsEditing: true,\r\n      aspect: [1, 1],\r\n      quality: 1,\r\n    });\r\n\r\n    if (!pickerResult.cancelled && pickerResult.assets.length > 0) {\r\n      const selectedAsset = pickerResult.assets[0];\r\n      const newImageUri = selectedAsset.uri;\r\n\r\n      // Update the profile picture locally\r\n      setImage(newImageUri);\r\n\r\n      // Update the profile picture on the server\r\n      const authToken = await AsyncStorage.getItem(\"authToken\");\r\n      const formData = new FormData();\r\n      formData.append(\"profilePic\", {\r\n        uri: newImageUri,\r\n        name: \"profilePic.jpg\",\r\n        type: \"image/jpeg\",\r\n      });\r\n\r\n      const updateProfilePicResponse = await axios.put(\r\n        `https://levelart.up.railway.app/users/${userId}`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${authToken}`,\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (updateProfilePicResponse.status === 200) {\r\n        // Profile picture updated successfully\r\n        console.log(\"Profile picture updated successfully\");\r\n      } else {\r\n        // Handle error while updating profile picture\r\n        console.error(\"Error updating profile picture:\", updateProfilePicResponse.data);\r\n        // Revert the local profile picture to the previous one\r\n        setImage(userProfile.profilePic || \"\");\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error picking image:\", error);\r\n  }\r\n};\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchProfile = async (userId) => {\r\n      try {\r\n        const authToken = await AsyncStorage.getItem(\"authToken\");\r\n        const GetUser = await axios.get(\r\n          `https://levelart.up.railway.app/users/${userId}`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${authToken}`,\r\n            },\r\n          }\r\n        );\r\n        setUserProfile(GetUser.data);\r\n\r\n        const profileResponse = await axios.get(\r\n          `https://levelart.up.railway.app/followers/${userId}/followers`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${authToken}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        if (profileResponse) {\r\n          const { user, followers, followings, bio } = profileResponse.data;\r\n          // Corrected setUser function\r\n          setUserProfile(user);\r\n          setFollowers(followers?.length || 0);\r\n          setFollowings(followings?.length || 0);\r\n          setBio(bio || \"\");\r\n\r\n          const postsResponse = await axios.get(\r\n            `https://levelart.up.railway.app/posts/user/${userId}`,\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${authToken}`,\r\n              },\r\n            }\r\n          );\r\n\r\n          if (postsResponse) {\r\n            setPosts(postsResponse.data);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching profile:\", error);\r\n      }\r\n    };\r\n\r\n    if (userId) {\r\n      fetchProfile(userId);\r\n    } else {\r\n      console.log(\"userId is undefined\");\r\n    }\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    const loadUserProfile = async () => {\r\n      try {\r\n        const authToken = await AsyncStorage.getItem(\"authToken\");\r\n        const GetUserResponse = await axios.get(\r\n          `https://levelart.up.railway.app/users/${userId}`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${authToken}`,\r\n            },\r\n          }\r\n        );\r\n        const userObject = GetUserResponse.data;\r\n        setUserProfile(userObject);\r\n  \r\n        // Extract username from the userObject\r\n        const usernameOfCurrentUser = userObject?.username;\r\n        console.log(\"Username of current user:\", usernameOfCurrentUser);\r\n  \r\n        // Set header options\r\n        navigation.setOptions({\r\n          headerTitle: \"\",\r\n          headerLeft: () => (\r\n            <Text style={{ marginLeft: 10, fontWeight: \"500\", fontSize: 18 }}>\r\n              {usernameOfCurrentUser || \"Loading...\"}\r\n            </Text>\r\n          ),\r\n          headerRight: () => (\r\n            <TouchableOpacity\r\n              style={styles.settingsIcon}\r\n              onPress={() => navigation.navigate(\"Settings\")}\r\n            >\r\n              <Icon name=\"settings-outline\" size={30} color=\"#333\" />\r\n            </TouchableOpacity>\r\n          ),\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error fetching profile:\", error);\r\n      }\r\n    };\r\n  \r\n    if (userId) {\r\n      loadUserProfile();\r\n    } else {\r\n      console.log(\"userId is undefined\");\r\n    }\r\n  }, [userProfile, navigation]);\r\n  \r\n\r\n  return (\r\n    <>\r\n      <SafeAreaView style={styles.container}>\r\n        <View style={styles.profileTop}>\r\n          <View style={styles.userInfo}>\r\n            <TouchableOpacity\r\n              onPress={handleImagePicker}\r\n              style={{ position: \"relative\" }}\r\n            >\r\n              {userProfile?.profilePic ? (\r\n                <Image\r\n                  style={styles.profileImage}\r\n                  source={{ uri: userProfile?.profilePic }}\r\n                />\r\n              ) : (\r\n                <Image\r\n                  style={styles.profileImage}\r\n                  source={{\r\n                    uri: \"https://cdn-icons-png.flaticon.com/128/149/149071.png\",\r\n                  }}\r\n                />\r\n              )}\r\n\r\n              <TouchableOpacity\r\n                onPress={handleImagePicker}\r\n                style={{ position: \"absolute\", bottom: -3, right: -3 }}\r\n              >\r\n                <AntDesign name=\"pluscircle\" size={24} color=\"blue\" />\r\n              </TouchableOpacity>\r\n            </TouchableOpacity>\r\n            <View style={styles.userStats}>\r\n              <View style={styles.userStatsItem}>\r\n                <Text style={styles.statsCount}>{posts.length}</Text>\r\n                <Text style={styles.statsText}> posts</Text>\r\n              </View>\r\n              <View style={styles.userStatsItem}>\r\n                <Text style={styles.statsCount}>{followers}</Text>\r\n                <Text style={styles.statsText}> followers</Text>\r\n              </View>\r\n              <View style={styles.userStatsItem}>\r\n                <Text style={styles.statsCount}>{followings} </Text>\r\n                <Text style={styles.statsText}>following</Text>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={styles.profileInfo}>\r\n          <View style={styles.bioContainer}>\r\n            <View style={styles.bioTextContainer}>\r\n              <View style={{ flexDirection: \"row\", gap: 20 }}>\r\n                {userProfile && userProfile?.fullname ? (\r\n                  <Text style={styles.bioLabel}>{userProfile?.fullname}</Text>\r\n                ) : (\r\n                  <Text style={styles.bioLabel}>Full Name</Text>\r\n                )}\r\n                {userProfile && userProfile?.pronouns ? (\r\n                  <Text>{userProfile?.pronouns}</Text>\r\n                ) : null}\r\n              </View>\r\n              {userProfile && userProfile?.bio ? (\r\n                <View>\r\n                  <Text>{userProfile?.bio}</Text>\r\n                </View>\r\n              ) : null}\r\n\r\n              <TouchableOpacity\r\n                style={styles.updateBioButton}\r\n                onPress={() => navigation.navigate(\"EditProfile\")}\r\n              >\r\n                <Text style={styles.updateBioButtonText}>Edit Profile</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </View>\r\n\r\n        <Tab.Navigator>\r\n          <Tab.Screen\r\n            name=\"Posts\"\r\n            options={{\r\n              tabBarIcon: ({ color, size }) => (\r\n                <MaterialCommunityIcons name=\"grid\" size={24} color=\"black\" />\r\n              ),\r\n            }}\r\n          >\r\n            {() => <ImagesTabScreen posts={posts.filter((post) => post.img)} />}\r\n          </Tab.Screen>\r\n          <Tab.Screen\r\n            name=\"Tweets\"\r\n            options={{\r\n              tabBarIcon: ({ color, size }) => (\r\n                <MaterialCommunityIcons\r\n                  name=\"message-text\"\r\n                  size={24}\r\n                  color=\"black\"\r\n                />\r\n              ),\r\n            }}\r\n          >\r\n            {() => <TweetsTabScreen posts={posts.filter((post) => !post.img)} />}\r\n          </Tab.Screen>\r\n          <Tab.Screen\r\n            name=\"Tag\"\r\n            options={{\r\n              tabBarIcon: ({ color, size }) => (\r\n                <MaterialIcons name=\"tag\" size={24} color=\"black\" />\r\n              ),\r\n            }}\r\n          >\r\n            {() => <TagTabScreen posts={posts.filter((post) => !post.img)} />}\r\n          </Tab.Screen>\r\n        </Tab.Navigator>\r\n      </SafeAreaView>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"white\",\r\n  },\r\n  profileTop: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 10,\r\n  },\r\n  settingsIcon: {\r\n    marginRight: 10,\r\n  },\r\n  profileInfo: {\r\n    flexDirection: \"column\",\r\n    marginBottom: 20,\r\n  },\r\n  bioContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: 10,\r\n  },\r\n  profileImage: {\r\n    width: 80,\r\n    height: 80,\r\n    borderRadius: 50,\r\n    resizeMode: \"cover\",\r\n  },\r\n  bioTextContainer: {\r\n    flex: 1,\r\n    alignItems: \"flex-start\",\r\n    padding: 10,\r\n  },\r\n  bioLabel: {\r\n    fontWeight: \"bold\",\r\n    marginBottom: 5,\r\n  },\r\n  updateBioButton: {\r\n    backgroundColor: \"black\",\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 12,\r\n    borderRadius: 5,\r\n    marginTop: 8,\r\n  },\r\n  updateBioButtonText: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  userInfo: {\r\n    flexDirection: \"row\",\r\n    flex: 1,\r\n  },\r\n  userStats: {\r\n    marginLeft: 20,\r\n    flexDirection: \"row\",\r\n    flex: 1,\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n  },\r\n  userStatsItem: {\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  statsText: {\r\n    fontSize: 14,\r\n    fontWeight: \"500\",\r\n  },\r\n  statsCount: {\r\n    fontWeight: \"bold\",\r\n    fontSize: 22,\r\n  },\r\n});\r\n\r\nexport default ProfileScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}