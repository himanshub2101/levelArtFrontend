{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { UserType } from \"../UserContext\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport ImagesScreen from \"./ImagesScreen\";\nimport TweetsScreen from \"./TweetsScreen\";\nimport { MaterialCommunityIcons, AntDesign, MaterialIcons } from \"@expo/vector-icons\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tab = createMaterialTopTabNavigator();\nvar ProfileScreen = function ProfileScreen() {\n  var navigation = useNavigation();\n  var _useContext = useContext(UserType),\n    userId = _useContext.userId,\n    setUserId = _useContext.setUserId;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    followers = _useState4[0],\n    setFollowers = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    followings = _useState6[0],\n    setFollowings = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    posts = _useState8[0],\n    setPosts = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    replies = _useState10[0],\n    setReplies = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    bio = _useState12[0],\n    setBio = _useState12[1];\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    userProfile = _useState14[0],\n    setUserProfile = _useState14[1];\n  var PostsComponent = function PostsComponent() {\n    return _jsx(ImagesScreen, {\n      posts: imagePosts\n    });\n  };\n  var TweetsComponent = function TweetsComponent() {\n    return _jsx(TweetsScreen, {\n      posts: tweetPosts\n    });\n  };\n  var TagComponent = function TagComponent() {\n    return _jsx(TweetsScreen, {\n      posts: tweetPosts\n    });\n  };\n  var handleImagePicker = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var permissionResult = yield ImagePicker.requestMediaLibraryPermissionsAsync();\n      if (permissionResult.granted === false) {\n        alert(\"Permission to access camera roll is required!\");\n        return;\n      }\n      var pickerResult = yield ImagePicker.launchImageLibraryAsync();\n      if (!pickerResult.canceled && pickerResult.assets.length > 0) {\n        console.log(\"Selected image URI:\", pickerResult.assets[0].uri);\n        setImage(pickerResult.assets[0].uri);\n        setIsImageSelected(true);\n      } else {\n        console.log(\"Image picking cancelled or no image selected\");\n      }\n    });\n    return function handleImagePicker() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    var fetchProfile = function () {\n      var _ref2 = _asyncToGenerator(function* (userId) {\n        try {\n          var authToken = yield AsyncStorage.getItem(\"authToken\");\n          var GetUser = yield axios.get(`https://levelart.up.railway.app/users/${userId}`, {\n            headers: {\n              Authorization: `Bearer ${authToken}`\n            }\n          });\n          setUserProfile(GetUser.data);\n          console.log(\"profile fetch\", userProfile);\n          var profileResponse = yield axios.get(`https://levelart.up.railway.app/followers/${userId}`, {\n            headers: {\n              Authorization: `Bearer ${authToken}`\n            }\n          }).catch(function (error) {\n            console.error(\"Error fetching profile:\", error);\n          });\n          console.log(\"followers\", profileResponse);\n          console.log('all followers', profileResponse == null ? void 0 : profileResponse.followers);\n          if (profileResponse) {\n            var _profileResponse$data = profileResponse.data,\n              _user = _profileResponse$data.user,\n              _followers = _profileResponse$data.followers,\n              _followings = _profileResponse$data.followings,\n              _bio = _profileResponse$data.bio;\n            setUser(_user);\n            setFollowers((_followers == null ? void 0 : _followers.length) || 0);\n            setFollowings((_followings == null ? void 0 : _followings.length) || 0);\n            setBio(_bio || \"\");\n            var postsResponse = yield axios.get(`https://levelart.up.railway.app/posts/user/${userId}`, {\n              headers: {\n                Authorization: `Bearer ${authToken}`\n              }\n            }).catch(function (error) {\n              console.error(\"Error fetching posts:\", error);\n            });\n            if (postsResponse) {\n              setPosts(postsResponse.data);\n              console.log(\"post user\", postsResponse.data);\n            }\n          }\n        } catch (error) {\n          console.error(\"Error fetching profile:\", error);\n        }\n      });\n      return function fetchProfile(_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    if (userId) {\n      fetchProfile(userId);\n    } else {\n      console.log(\"userId is undefined\");\n    }\n  }, [userId]);\n  var imagePosts = posts.filter(function (post) {\n    return post.img;\n  });\n  var tweetPosts = posts.filter(function (post) {\n    return !post.img;\n  });\n  useEffect(function () {\n    navigation.setOptions({\n      headerTitle: \"\",\n      headerLeft: function headerLeft() {\n        return _jsx(Text, {\n          style: {\n            marginLeft: 10,\n            fontWeight: 500,\n            fontSize: 18\n          },\n          children: (userProfile == null ? void 0 : userProfile.username) || \"Loading...\"\n        });\n      },\n      headerRight: function headerRight() {\n        return _jsx(TouchableOpacity, {\n          style: styles.settingsIcon,\n          onPress: function onPress() {\n            return navigation.navigate(\"Settings\");\n          },\n          children: _jsx(Icon, {\n            name: \"settings-outline\",\n            size: 30,\n            color: \"#333\"\n          })\n        });\n      }\n    });\n  }, [userProfile]);\n  return _jsx(_Fragment, {\n    children: _jsxs(SafeAreaView, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: styles.profileTop,\n        children: _jsxs(View, {\n          style: styles.userInfo,\n          children: [_jsxs(TouchableOpacity, {\n            onPress: handleImagePicker,\n            style: {\n              position: \"relative\"\n            },\n            children: [userProfile != null && userProfile.profilePic ? _jsx(Image, {\n              style: styles.profileImage,\n              source: {\n                uri: userProfile == null ? void 0 : userProfile.profilePic\n              }\n            }) : _jsx(Image, {\n              style: styles.profileImage,\n              source: {\n                uri: \"https://cdn-icons-png.flaticon.com/128/149/149071.png\"\n              }\n            }), _jsx(TouchableOpacity, {\n              onPress: handleImagePicker,\n              style: {\n                position: \"absolute\",\n                bottom: -3,\n                right: -3\n              },\n              children: _jsx(AntDesign, {\n                name: \"pluscircle\",\n                size: 24,\n                color: \"blue\"\n              })\n            })]\n          }), _jsxs(View, {\n            style: styles.userStats,\n            children: [_jsxs(View, {\n              style: styles.userStatsItem,\n              children: [_jsx(Text, {\n                style: styles.statsCount,\n                children: posts.length\n              }), _jsx(Text, {\n                style: styles.statsText,\n                children: \" posts\"\n              })]\n            }), _jsxs(View, {\n              style: styles.userStatsItem,\n              children: [_jsx(Text, {\n                style: styles.statsCount,\n                children: followers\n              }), _jsx(Text, {\n                style: styles.statsText,\n                children: \" followers\"\n              })]\n            }), _jsxs(View, {\n              style: styles.userStatsItem,\n              children: [_jsxs(Text, {\n                style: styles.statsCount,\n                children: [followings, \" \"]\n              }), _jsx(Text, {\n                style: styles.statsText,\n                children: \"following\"\n              })]\n            })]\n          })]\n        })\n      }), _jsx(View, {\n        style: styles.profileInfo,\n        children: _jsx(View, {\n          style: styles.bioContainer,\n          children: _jsxs(View, {\n            style: styles.bioTextContainer,\n            children: [_jsxs(View, {\n              style: {\n                flexDirection: \"row\",\n                gap: 20\n              },\n              children: [userProfile && userProfile != null && userProfile.fullname ? _jsx(Text, {\n                style: styles.bioLabel,\n                children: userProfile == null ? void 0 : userProfile.fullname\n              }) : _jsx(Text, {\n                style: styles.bioLabel,\n                children: \"Full Name\"\n              }), userProfile && userProfile != null && userProfile.pronouns ? _jsx(Text, {\n                children: userProfile == null ? void 0 : userProfile.pronouns\n              }) : null]\n            }), userProfile && userProfile != null && userProfile.bio ? _jsx(View, {\n              children: _jsx(Text, {\n                children: userProfile == null ? void 0 : userProfile.bio\n              })\n            }) : null, _jsx(TouchableOpacity, {\n              style: styles.updateBioButton,\n              onPress: function onPress() {\n                return navigation.navigate(\"EditProfile\");\n              },\n              children: _jsx(Text, {\n                style: styles.updateBioButtonText,\n                children: \"Edit Profile\"\n              })\n            })]\n          })\n        })\n      }), _jsxs(Tab.Navigator, {\n        children: [_jsx(Tab.Screen, {\n          name: \"Posts\",\n          component: PostsComponent,\n          options: {\n            tabBarIcon: function tabBarIcon(_ref3) {\n              var color = _ref3.color,\n                size = _ref3.size;\n              return _jsx(MaterialCommunityIcons, {\n                name: \"grid\",\n                size: 24,\n                color: \"black\"\n              });\n            }\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"Tweets\",\n          component: TweetsComponent,\n          options: {\n            tabBarIcon: function tabBarIcon(_ref4) {\n              var color = _ref4.color,\n                size = _ref4.size;\n              return _jsx(MaterialCommunityIcons, {\n                name: \"message-text\",\n                size: 24,\n                color: \"black\"\n              });\n            }\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"Tag\",\n          component: TagComponent,\n          options: {\n            tabBarIcon: function tabBarIcon(_ref5) {\n              var color = _ref5.color,\n                size = _ref5.size;\n              return _jsx(MaterialIcons, {\n                name: \"tag\",\n                size: 24,\n                color: \"black\"\n              });\n            }\n          }\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  profileHeader: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    paddingHorizontal: 16,\n    paddingTop: 35,\n    paddingBottom: 4,\n    zIndex: 10,\n    backgroundColor: \"#fff\"\n  },\n  profileTop: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    paddingHorizontal: 10,\n    paddingVertical: 10\n  },\n  username: {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  settingsIcon: {\n    marginRight: 10\n  },\n  profileInfo: {\n    flexDirection: \"column\",\n    marginBottom: 20\n  },\n  bioContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 10\n  },\n  profileImage: {\n    width: 80,\n    height: 80,\n    borderRadius: 50,\n    resizeMode: \"cover\"\n  },\n  bioTextContainer: {\n    flex: 1,\n    alignItems: \"flex-start\",\n    padding: 10\n  },\n  bioLabel: {\n    fontWeight: \"bold\",\n    marginBottom: 5\n  },\n  updateBioButton: {\n    backgroundColor: \"black\",\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    borderRadius: 5,\n    marginTop: 8\n  },\n  updateBioButtonText: {\n    color: \"white\",\n    fontWeight: \"bold\"\n  },\n  buttonsContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 20\n  },\n  button: {\n    backgroundColor: \"red\",\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"bold\"\n  },\n  userInfo: {\n    flexDirection: \"row\",\n    flex: 1\n  },\n  userStats: {\n    marginLeft: 20,\n    flexDirection: \"row\",\n    flex: 1,\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\"\n  },\n  userStatsItem: {\n    alignItems: \"center\"\n  },\n  statsText: {\n    fontSize: 14,\n    fontWeight: \"500\"\n  },\n  statsCount: {\n    fontWeight: \"bold\",\n    fontSize: 22\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"names":["React","useEffect","useState","useContext","StyleSheet","View","ScrollView","Text","TextInput","Button","Image","TouchableOpacity","Modal","SafeAreaView","useNavigation","UserType","Icon","createMaterialTopTabNavigator","axios","AsyncStorage","ImagesScreen","TweetsScreen","MaterialCommunityIcons","AntDesign","MaterialIcons","ImagePicker","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Tab","ProfileScreen","navigation","_useContext","userId","setUserId","_useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","followers","setFollowers","_useState5","_useState6","followings","setFollowings","_useState7","_useState8","posts","setPosts","_useState9","_useState10","replies","setReplies","_useState11","_useState12","bio","setBio","_useState13","_useState14","userProfile","setUserProfile","PostsComponent","imagePosts","TweetsComponent","tweetPosts","TagComponent","handleImagePicker","_ref","_asyncToGenerator","permissionResult","requestMediaLibraryPermissionsAsync","granted","alert","pickerResult","launchImageLibraryAsync","canceled","assets","length","console","log","uri","setImage","setIsImageSelected","apply","arguments","fetchProfile","_ref2","authToken","getItem","GetUser","get","headers","Authorization","data","profileResponse","catch","error","_profileResponse$data","postsResponse","_x","filter","post","img","setOptions","headerTitle","headerLeft","style","marginLeft","fontWeight","fontSize","children","username","headerRight","styles","settingsIcon","onPress","navigate","name","size","color","container","profileTop","userInfo","position","profilePic","profileImage","source","bottom","right","userStats","userStatsItem","statsCount","statsText","profileInfo","bioContainer","bioTextContainer","flexDirection","gap","fullname","bioLabel","pronouns","updateBioButton","updateBioButtonText","Navigator","Screen","component","options","tabBarIcon","_ref3","_ref4","_ref5","create","flex","backgroundColor","profileHeader","justifyContent","alignItems","paddingHorizontal","paddingTop","paddingBottom","zIndex","paddingVertical","marginRight","marginBottom","width","height","borderRadius","resizeMode","padding","marginTop","buttonsContainer","button","buttonText"],"sources":["D:/LevelUp Technology/levelArtFrontend/screens/ProfileScreen.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  ScrollView,\n  Text,\n  TextInput,\n  Button,\n  Image,\n  TouchableOpacity,\n  Modal,\n  SafeAreaView,\n} from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { UserType } from \"../UserContext\";\nimport Icon from \"react-native-vector-icons/Ionicons\";\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport ImagesScreen from \"./ImagesScreen\"; // Import the ImagesScreen component\nimport TweetsScreen from \"./TweetsScreen\"; // Import the TweetsScreen component\nimport {\n  MaterialCommunityIcons,\n  AntDesign,\n  MaterialIcons,\n} from \"@expo/vector-icons\";\nimport * as ImagePicker from \"expo-image-picker\";\nconst Tab = createMaterialTopTabNavigator();\n\nconst ProfileScreen = () => {\n  const navigation = useNavigation();\n  const { userId, setUserId } = useContext(UserType);\n  const [user, setUser] = useState(\"\");\n  const [followers, setFollowers] = useState(0);\n  const [followings, setFollowings] = useState(0);\n  const [posts, setPosts] = useState([]);\n  const [replies, setReplies] = useState([]);\n  const [bio, setBio] = useState(\"\");\n  const [userProfile, setUserProfile] = useState(null);\n  const PostsComponent = () => <ImagesScreen posts={imagePosts} />;\n  const TweetsComponent = () => <TweetsScreen posts={tweetPosts} />;\n  const TagComponent = () => <TweetsScreen posts={tweetPosts} />;\n\n\n  const handleImagePicker = async () => {\n    const permissionResult =\n      await ImagePicker.requestMediaLibraryPermissionsAsync();\n    if (permissionResult.granted === false) {\n      alert(\"Permission to access camera roll is required!\");\n      return;\n    }\n\n    const pickerResult = await ImagePicker.launchImageLibraryAsync();\n    if (!pickerResult.canceled && pickerResult.assets.length > 0) {\n      console.log(\"Selected image URI:\", pickerResult.assets[0].uri); // Log the URI of the selected image\n\n      setImage(pickerResult.assets[0].uri);\n      setIsImageSelected(true);\n    } else {\n      console.log(\"Image picking cancelled or no image selected\");\n    }\n  };\n\n  useEffect(() => {\n    const fetchProfile = async (userId) => {\n      try {\n        const authToken = await AsyncStorage.getItem(\"authToken\");\n\n        const GetUser = await axios.get(\n          `https://levelart.up.railway.app/users/${userId}`,\n          {\n            headers: {\n              Authorization: `Bearer ${authToken}`,\n            },\n          }\n        );\n        setUserProfile(GetUser.data);\n        console.log(\"profile fetch\", userProfile);\n        const profileResponse = await axios\n          .get(\n            `https://levelart.up.railway.app/followers/${userId}`,\n            {\n              headers: {\n                Authorization: `Bearer ${authToken}`,\n              },\n            }\n\n          )\n          .catch((error) => {\n            console.error(\"Error fetching profile:\", error);\n          });\n          console.log(\"followers\",profileResponse)\n          console.log('all followers',profileResponse?.followers)\n        if (profileResponse) {\n          const { user, followers, followings, bio } = profileResponse.data;\n          setUser(user);\n          setFollowers(followers?.length || 0);\n          setFollowings(followings?.length || 0);\n          setBio(bio || \"\");\n\n          const postsResponse = await axios\n            .get(`https://levelart.up.railway.app/posts/user/${userId}`, {\n              headers: {\n                Authorization: `Bearer ${authToken}`,\n              },\n            })\n            .catch((error) => {\n              console.error(\"Error fetching posts:\", error);\n            });\n\n          if (postsResponse) {\n            setPosts(postsResponse.data);\n            console.log(\"post user\", postsResponse.data);\n          }\n\n          // const repliesResponse = await axios\n          //   .get(\n          //     `https://levelart.up.railway.app/posts/user/${userId}/replies`,\n          //     {\n          //       headers: {\n          //         Authorization: `Bearer ${authToken}`,\n          //       },\n          //     }\n          //   )\n          //   .catch((error) => {\n          //     console.error(\"Error fetching replies:\", error);\n          //   });\n\n          // if (repliesResponse) {\n          //   setReplies(repliesResponse.data);\n          // }\n        }\n      } catch (error) {\n        console.error(\"Error fetching profile:\", error);\n      }\n    };\n\n    if (userId) {\n      fetchProfile(userId);\n    } else {\n      console.log(\"userId is undefined\");\n    }\n  }, [userId]);\n\n  // Filter posts based on whether they contain images\n  const imagePosts = posts.filter((post) => post.img); // Filter posts with images\n  const tweetPosts = posts.filter((post) => !post.img); // Filter posts without images\n\n  useEffect(() => {\n    navigation.setOptions({\n      headerTitle: \"\",\n      headerLeft: () => (\n        <Text style={{ marginLeft: 10, fontWeight: 500, fontSize: 18 }}>\n          {userProfile?.username || \"Loading...\"}\n        </Text>\n      ),\n      headerRight: () => (\n        <TouchableOpacity\n          style={styles.settingsIcon}\n          onPress={() => navigation.navigate(\"Settings\")}\n        >\n          <Icon name=\"settings-outline\" size={30} color=\"#333\" />\n        </TouchableOpacity>\n      ),\n    });\n  }, [userProfile]);\n  \n\n  return (\n    <>\n      <SafeAreaView style={styles.container}>\n        {/* <ScrollView> */}\n        <View style={styles.profileTop}>\n          <View style={styles.userInfo}>\n            <TouchableOpacity\n              onPress={handleImagePicker}\n              style={{ position: \"relative\" }}\n            >\n              {userProfile?.profilePic ? (\n                <Image\n                  style={styles.profileImage}\n                  source={{ uri: userProfile?.profilePic }}\n                />\n              ) : (\n                <Image\n                  style={styles.profileImage}\n                  source={{\n                    uri: \"https://cdn-icons-png.flaticon.com/128/149/149071.png\",\n                  }}\n                />\n              )}\n\n              <TouchableOpacity\n                onPress={handleImagePicker}\n                style={{ position: \"absolute\", bottom: -3, right: -3 }}\n              >\n                <AntDesign name=\"pluscircle\" size={24} color=\"blue\" />\n              </TouchableOpacity>\n            </TouchableOpacity>\n            <View style={styles.userStats}>\n              {/* <Text style={styles.username}>{user}</Text> */}\n\n              <View style={styles.userStatsItem}>\n                <Text style={styles.statsCount}>{posts.length}</Text>\n                <Text style={styles.statsText}> posts</Text>\n              </View>\n              <View style={styles.userStatsItem}>\n                <Text style={styles.statsCount}>{followers}</Text>\n                <Text style={styles.statsText}> followers</Text>\n              </View>\n              <View style={styles.userStatsItem}>\n                <Text style={styles.statsCount}>{followings} </Text>\n                <Text style={styles.statsText}>following</Text>\n              </View>\n            </View>\n          </View>\n        </View>\n\n        <View style={styles.profileInfo}>\n          <View style={styles.bioContainer}>\n            <View style={styles.bioTextContainer}>\n              <View style={{ flexDirection: \"row\", gap: 20 }}>\n                {userProfile && userProfile?.fullname ? (\n                  <Text style={styles.bioLabel}>{userProfile?.fullname}</Text>\n                ) : (\n                  <Text style={styles.bioLabel}>Full Name</Text>\n                )}\n                {userProfile && userProfile?.pronouns ? (\n                  <Text>{userProfile?.pronouns}</Text>\n                ) : null}\n              </View>\n              {userProfile && userProfile?.bio ? (\n                <View>\n                  <Text>{userProfile?.bio}</Text>\n                </View>\n              ) : null}\n\n              <TouchableOpacity\n                style={styles.updateBioButton}\n                onPress={() => navigation.navigate(\"EditProfile\")}\n              >\n                <Text style={styles.updateBioButtonText}>Edit Profile</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n\n        {/* Render the Tab.Navigator outside the ScrollView */}\n\n<Tab.Navigator>\n<Tab.Screen\n  name=\"Posts\"\n  component={PostsComponent}\n  options={{\n    tabBarIcon: ({ color, size }) => (\n      <MaterialCommunityIcons name=\"grid\" size={24} color=\"black\" />\n    ),\n  }}\n/>\n<Tab.Screen\n  name=\"Tweets\"\n  component={TweetsComponent}\n  options={{\n    tabBarIcon: ({ color, size }) => (\n      <MaterialCommunityIcons\n        name=\"message-text\"\n        size={24}\n        color=\"black\"\n      />\n    ),\n  }}\n/>\n<Tab.Screen\n  name=\"Tag\"\n  component={TagComponent}\n  options={{\n    tabBarIcon: ({ color, size }) => (\n      <MaterialIcons name=\"tag\" size={24} color=\"black\" />\n    ),\n  }}\n/>\n</Tab.Navigator>\n\n      </SafeAreaView>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n  },\n  profileHeader: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    paddingHorizontal: 16,\n    paddingTop: 35,\n    paddingBottom: 4,\n    // borderBottomWidth:1,\n    // borderBottomColor:\"#e0e0e0\",\n    zIndex: 10,\n    backgroundColor: \"#fff\",\n  },\n  profileTop: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    paddingHorizontal: 10,\n    paddingVertical: 10,\n  },\n  username: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n  },\n  settingsIcon: {\n    marginRight: 10,\n  },\n  profileInfo: {\n    flexDirection: \"column\",\n    marginBottom: 20,\n  },\n  bioContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 10,\n  },\n  profileImage: {\n    width: 80,\n    height: 80,\n    borderRadius: 50,\n    resizeMode: \"cover\",\n  },\n  bioTextContainer: {\n    flex: 1,\n    alignItems: \"flex-start\",\n    padding: 10,\n  },\n  bioLabel: {\n    fontWeight: \"bold\",\n    marginBottom: 5,\n  },\n  updateBioButton: {\n    backgroundColor: \"black\",\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    borderRadius: 5,\n    marginTop: 8,\n  },\n  updateBioButtonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n  },\n  buttonsContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 20,\n  },\n  button: {\n    backgroundColor: \"red\",\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    borderRadius: 5,\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n  },\n  userInfo: {\n    flexDirection: \"row\",\n    flex: 1,\n  },\n  userStats: {\n    marginLeft: 20,\n    flexDirection: \"row\",\n    flex: 1,\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n  },\n  userStatsItem: {\n    alignItems: \"center\",\n  },\n\n  statsText: {\n    fontSize: 14,\n    fontWeight: \"500\",\n  },\n  statsCount: {\n    fontWeight: \"bold\",\n    fontSize: 22,\n  },\n});\n\nexport default ProfileScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}