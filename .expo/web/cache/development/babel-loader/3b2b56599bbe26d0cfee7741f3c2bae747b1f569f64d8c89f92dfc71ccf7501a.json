{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { IconButton } from 'react-native-paper';\nimport useShowToast from \"../hooks/useShowToast\";\nimport { conversationsAtom, selectedConversationAtom } from \"../atoms/messagesAtom\";\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\nimport { BsFillImageFill } from 'react-icons/bs';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MessageInput = function MessageInput(_ref) {\n  var setMessages = _ref.setMessages;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    messageText = _useState2[0],\n    setMessageText = _useState2[1];\n  var showToast = useShowToast();\n  var selectedConversation = useRecoilValue(selectedConversationAtom);\n  var setConversations = useSetRecoilState(conversationsAtom);\n  var imageRef = useRef(null);\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    imgUrl = _useState4[0],\n    setImgUrl = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isSending = _useState6[0],\n    setIsSending = _useState6[1];\n  var handleSendMessage = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!messageText && !imgUrl) return;\n      if (isSending) return;\n      setIsSending(true);\n      try {\n        var res = yield fetch('/api/messages', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            message: messageText,\n            recipientId: selectedConversation.userId,\n            img: imgUrl\n          })\n        });\n        var data = yield res.json();\n        if (data.error) {\n          showToast('Error', data.error);\n          return;\n        }\n        setMessages(function (messages) {\n          return [].concat(_toConsumableArray(messages), [data]);\n        });\n        setConversations(function (prevConvs) {\n          var updatedConversations = prevConvs.map(function (conversation) {\n            if (conversation._id === selectedConversation._id) {\n              return _objectSpread(_objectSpread({}, conversation), {}, {\n                lastMessage: {\n                  text: messageText,\n                  sender: data.sender\n                }\n              });\n            }\n            return conversation;\n          });\n          return updatedConversations;\n        });\n        setMessageText('');\n        setImgUrl('');\n      } catch (error) {\n        showToast('Error', error.message);\n      } finally {\n        setIsSending(false);\n      }\n    });\n    return function handleSendMessage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleImageChange = function handleImageChange(event) {\n    var file = event.target.files[0];\n    if (!file) return;\n    var reader = new FileReader();\n    reader.onloadend = function () {\n      setImgUrl(reader.result);\n    };\n    reader.readAsDataURL(file);\n  };\n  return _jsxs(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      paddingHorizontal: 8\n    },\n    children: [_jsx(TextInput, {\n      style: {\n        flex: 1,\n        height: 40,\n        borderWidth: 1,\n        borderColor: 'gray',\n        borderRadius: 20,\n        paddingHorizontal: 10\n      },\n      placeholder: \"Type a message\",\n      value: messageText,\n      onChangeText: setMessageText\n    }), _jsx(TouchableOpacity, {\n      onPress: handleSendMessage,\n      style: {\n        marginLeft: 8\n      },\n      children: _jsx(IconButton, {\n        icon: \"send\",\n        size: 24\n      })\n    }), _jsxs(TouchableOpacity, {\n      onPress: function onPress() {\n        var _imageRef$current;\n        return (_imageRef$current = imageRef.current) == null ? void 0 : _imageRef$current.click();\n      },\n      style: {\n        marginLeft: 8\n      },\n      children: [_jsx(BsFillImageFill, {\n        size: 24\n      }), _jsx(\"input\", {\n        type: \"file\",\n        ref: imageRef,\n        style: {\n          display: 'none'\n        },\n        onChange: handleImageChange\n      })]\n    }), _jsx(Modal, {\n      visible: !!imgUrl,\n      animationType: \"slide\",\n      onRequestClose: function onRequestClose() {\n        return setImgUrl('');\n      },\n      children: _jsxs(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: [_jsx(Image, {\n          source: {\n            uri: imgUrl\n          },\n          style: {\n            width: '100%',\n            height: '100%'\n          },\n          resizeMode: \"contain\"\n        }), _jsx(View, {\n          style: {\n            position: 'absolute',\n            bottom: 20,\n            right: 20\n          },\n          children: isSending ? _jsx(ActivityIndicator, {\n            size: \"small\",\n            color: \"#0000ff\"\n          }) : _jsx(TouchableOpacity, {\n            onPress: handleSendMessage,\n            children: _jsx(IconButton, {\n              icon: \"send\",\n              size: 24\n            })\n          })\n        })]\n      })\n    })]\n  });\n};\nexport default MessageInput;","map":{"version":3,"names":["React","useState","useRef","View","TextInput","TouchableOpacity","Modal","Image","ActivityIndicator","IconButton","useShowToast","conversationsAtom","selectedConversationAtom","useRecoilValue","useSetRecoilState","BsFillImageFill","jsx","_jsx","jsxs","_jsxs","MessageInput","_ref","setMessages","_useState","_useState2","_slicedToArray","messageText","setMessageText","showToast","selectedConversation","setConversations","imageRef","_useState3","_useState4","imgUrl","setImgUrl","_useState5","_useState6","isSending","setIsSending","handleSendMessage","_ref2","_asyncToGenerator","res","fetch","method","headers","body","JSON","stringify","message","recipientId","userId","img","data","json","error","messages","concat","_toConsumableArray","prevConvs","updatedConversations","map","conversation","_id","_objectSpread","lastMessage","text","sender","apply","arguments","handleImageChange","event","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","style","flexDirection","alignItems","paddingHorizontal","children","flex","height","borderWidth","borderColor","borderRadius","placeholder","value","onChangeText","onPress","marginLeft","icon","size","_imageRef$current","current","click","type","ref","display","onChange","visible","animationType","onRequestClose","justifyContent","source","uri","width","resizeMode","position","bottom","right","color"],"sources":["C:/Users/DELL/Documents/Confidentials/levelArtFrontend/components/messageInput.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { View, TextInput, TouchableOpacity, Modal, Image, ActivityIndicator } from 'react-native';\r\nimport { IconButton } from 'react-native-paper'; // Import IconButton from Material-UI\r\nimport useShowToast from '../hooks/useShowToast';\r\nimport { conversationsAtom, selectedConversationAtom } from '../atoms/messagesAtom';\r\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\r\nimport { BsFillImageFill } from 'react-icons/bs'; // Make sure to have the BsFillImageFill icon available in your project\r\n\r\nconst MessageInput = ({ setMessages }) => {\r\n  const [messageText, setMessageText] = useState('');\r\n  const showToast = useShowToast();\r\n  const selectedConversation = useRecoilValue(selectedConversationAtom);\r\n  const setConversations = useSetRecoilState(conversationsAtom);\r\n  const imageRef = useRef(null);\r\n  const [imgUrl, setImgUrl] = useState('');\r\n  const [isSending, setIsSending] = useState(false);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!messageText && !imgUrl) return;\r\n    if (isSending) return;\r\n\r\n    setIsSending(true);\r\n\r\n    try {\r\n      const res = await fetch('/api/messages', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          message: messageText,\r\n          recipientId: selectedConversation.userId,\r\n          img: imgUrl,\r\n        }),\r\n      });\r\n      const data = await res.json();\r\n      if (data.error) {\r\n        showToast('Error', data.error);\r\n        return;\r\n      }\r\n\r\n      setMessages((messages) => [...messages, data]);\r\n\r\n      setConversations((prevConvs) => {\r\n        const updatedConversations = prevConvs.map((conversation) => {\r\n          if (conversation._id === selectedConversation._id) {\r\n            return {\r\n              ...conversation,\r\n              lastMessage: {\r\n                text: messageText,\r\n                sender: data.sender,\r\n              },\r\n            };\r\n          }\r\n          return conversation;\r\n        });\r\n        return updatedConversations;\r\n      });\r\n\r\n      setMessageText('');\r\n      setImgUrl('');\r\n    } catch (error) {\r\n      showToast('Error', error.message);\r\n    } finally {\r\n      setIsSending(false);\r\n    }\r\n  };\r\n\r\n  const handleImageChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      setImgUrl(reader.result);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  return (\r\n    <View style={{ flexDirection: 'row', alignItems: 'center', paddingHorizontal: 8 }}>\r\n      <TextInput\r\n        style={{ flex: 1, height: 40, borderWidth: 1, borderColor: 'gray', borderRadius: 20, paddingHorizontal: 10 }}\r\n        placeholder=\"Type a message\"\r\n        value={messageText}\r\n        onChangeText={setMessageText}\r\n      />\r\n      <TouchableOpacity onPress={handleSendMessage} style={{ marginLeft: 8 }}>\r\n        <IconButton icon=\"send\" size={24} />\r\n      </TouchableOpacity>\r\n      <TouchableOpacity onPress={() => imageRef.current?.click()} style={{ marginLeft: 8 }}>\r\n        <BsFillImageFill size={24} />\r\n        <input type=\"file\" ref={imageRef} style={{ display: 'none' }} onChange={handleImageChange} />\r\n      </TouchableOpacity>\r\n      <Modal visible={!!imgUrl} animationType=\"slide\" onRequestClose={() => setImgUrl('')}>\r\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n          <Image source={{ uri: imgUrl }} style={{ width: '100%', height: '100%' }} resizeMode=\"contain\" />\r\n          <View style={{ position: 'absolute', bottom: 20, right: 20 }}>\r\n            {isSending ? (\r\n              <ActivityIndicator size=\"small\" color=\"#0000ff\" />\r\n            ) : (\r\n              <TouchableOpacity onPress={handleSendMessage}>\r\n                <IconButton icon=\"send\" size={24} />\r\n              </TouchableOpacity>\r\n            )}\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default MessageInput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}