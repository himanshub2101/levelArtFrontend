{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useContext, useLayoutEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { UserType } from \"../UserContext\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport ImagesScreen from \"./ImagesScreen\";\nimport TweetsScreen from \"./TweetsScreen\";\nimport { MaterialCommunityIcons, AntDesign, MaterialIcons } from \"@expo/vector-icons\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tab = createMaterialTopTabNavigator();\nvar ProfileScreen = function ProfileScreen() {\n  var _route$params;\n  var navigation = useNavigation();\n  var _useContext = useContext(UserType),\n    userId = _useContext.userId,\n    setUserId = _useContext.setUserId;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    followers = _useState4[0],\n    setFollowers = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    followings = _useState6[0],\n    setFollowings = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    posts = _useState8[0],\n    setPosts = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    replies = _useState10[0],\n    setReplies = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    bio = _useState12[0],\n    setBio = _useState12[1];\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    image = _useState14[0],\n    setImage = _useState14[1];\n  var _useState15 = useState(\"\"),\n    _useState16 = _slicedToArray(_useState15, 2),\n    userProfile = _useState16[0],\n    setUserProfille = _useState16[1];\n  var route = useRoute();\n  var userEditProfileData = (_route$params = route.params) == null ? void 0 : _route$params.userProfileData;\n  var handleImagePicker = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var permissionResult = yield ImagePicker.requestMediaLibraryPermissionsAsync();\n      if (permissionResult.granted === false) {\n        alert(\"Permission to access camera roll is required!\");\n        return;\n      }\n      var pickerResult = yield ImagePicker.launchImageLibraryAsync();\n      if (!pickerResult.canceled && pickerResult.assets.length > 0) {\n        console.log(\"Selected image URI:\", pickerResult.assets[0].uri);\n        setImage(pickerResult.assets[0].uri);\n        setIsImageSelected(true);\n      } else {\n        console.log(\"Image picking cancelled or no image selected\");\n      }\n    });\n    return function handleImagePicker() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    var fetchProfile = function () {\n      var _ref2 = _asyncToGenerator(function* (userId) {\n        try {\n          var authToken = yield AsyncStorage.getItem(\"authToken\");\n          var GetUser = yield axios.get(`https://levelart.up.railway.app/users/${userId}`, {\n            headers: {\n              Authorization: `Bearer ${authToken}`\n            }\n          });\n          setUserProfille(GetUser);\n          console.log(\"get user \", userProfile.data);\n          var profileResponse = yield axios.get(`https://levelart.up.railway.app/followers/${userId}/followers`, {\n            headers: {\n              Authorization: `Bearer ${authToken}`\n            }\n          }).catch(function (error) {\n            console.error(\"Error fetching profile:\", error);\n          });\n          if (profileResponse) {\n            var _profileResponse$data = profileResponse.data,\n              _user = _profileResponse$data.user,\n              _followers = _profileResponse$data.followers,\n              _followings = _profileResponse$data.followings,\n              _bio = _profileResponse$data.bio;\n            setUser(_user);\n            setFollowers((_followers == null ? void 0 : _followers.length) || 0);\n            setFollowings((_followings == null ? void 0 : _followings.length) || 0);\n            setBio(_bio || \"\");\n            var postsResponse = yield axios.get(`https://levelart.up.railway.app/posts/user/${userId}`, {\n              headers: {\n                Authorization: `Bearer ${authToken}`\n              }\n            }).catch(function (error) {\n              console.error(\"Error fetching posts:\", error);\n            });\n            if (postsResponse) {\n              setPosts(postsResponse.data);\n              console.log(\"post user\", postsResponse.data);\n            }\n          }\n        } catch (error) {\n          console.error(\"Error fetching profile:\", error);\n        }\n      });\n      return function fetchProfile(_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    if (userId) {\n      fetchProfile(userId);\n    } else {\n      console.log(\"userId is undefined\");\n    }\n  }, [userId]);\n  var logout = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        yield AsyncStorage.removeItem(\"authToken\");\n        console.log(\"Cleared auth token\");\n        navigation.replace(\"Login\");\n      } catch (error) {\n        console.error(\"Error clearing auth token:\", error);\n      }\n    });\n    return function logout() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var imagePosts = posts.filter(function (post) {\n    return post.img;\n  });\n  var tweetPosts = posts.filter(function (post) {\n    return !post.img;\n  });\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerTitle: \"\",\n      headerLeft: function headerLeft() {\n        return userEditProfileData && userEditProfileData.username ? _jsx(Text, {\n          style: {\n            marginLeft: 10,\n            fontWeight: 500,\n            fontSize: 18\n          },\n          children: userEditProfileData.username\n        }) : _jsx(Text, {\n          style: {\n            marginLeft: 10,\n            fontWeight: 500,\n            fontSize: 18\n          },\n          children: \"User Name\"\n        });\n      },\n      headerRight: function headerRight() {\n        return _jsx(TouchableOpacity, {\n          style: styles.settingsIcon,\n          onPress: function onPress() {\n            return navigation.navigate(\"Settings\");\n          },\n          children: _jsx(Icon, {\n            name: \"settings-outline\",\n            size: 30,\n            color: \"#333\"\n          })\n        });\n      }\n    });\n  }, []);\n  return _jsx(_Fragment, {\n    children: _jsxs(SafeAreaView, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: styles.profileTop,\n        children: _jsxs(View, {\n          style: styles.userInfo,\n          children: [_jsxs(TouchableOpacity, {\n            onPress: handleImagePicker,\n            style: {\n              position: \"relative\"\n            },\n            children: [image ? _jsx(Image, {\n              style: styles.profileImage,\n              source: {\n                uri: image\n              }\n            }) : userEditProfileData && userEditProfileData.profilePic ? _jsx(Image, {\n              style: styles.profileImage,\n              source: {\n                uri: userEditProfileData.profilePic\n              }\n            }) : _jsx(Image, {\n              style: styles.profileImage,\n              source: {\n                uri: \"https://cdn-icons-png.flaticon.com/128/149/149071.png\"\n              }\n            }), _jsx(TouchableOpacity, {\n              onPress: handleImagePicker,\n              style: {\n                position: \"absolute\",\n                bottom: -3,\n                right: -3\n              },\n              children: _jsx(AntDesign, {\n                name: \"pluscircle\",\n                size: 24,\n                color: \"blue\"\n              })\n            })]\n          }), _jsxs(View, {\n            style: styles.userStats,\n            children: [_jsxs(View, {\n              style: styles.userStatsItem,\n              children: [_jsx(Text, {\n                style: styles.statsCount,\n                children: posts.length\n              }), _jsx(Text, {\n                style: styles.statsText,\n                children: \" posts\"\n              })]\n            }), _jsxs(View, {\n              style: styles.userStatsItem,\n              children: [_jsx(Text, {\n                style: styles.statsCount,\n                children: followers\n              }), _jsx(Text, {\n                style: styles.statsText,\n                children: \" followers\"\n              })]\n            }), _jsxs(View, {\n              style: styles.userStatsItem,\n              children: [_jsxs(Text, {\n                style: styles.statsCount,\n                children: [followings, \" \"]\n              }), _jsx(Text, {\n                style: styles.statsText,\n                children: \"following\"\n              })]\n            })]\n          })]\n        })\n      }), _jsx(View, {\n        style: styles.profileInfo,\n        children: _jsx(View, {\n          style: styles.bioContainer,\n          children: _jsxs(View, {\n            style: styles.bioTextContainer,\n            children: [_jsxs(View, {\n              style: {\n                flexDirection: \"row\",\n                gap: 20\n              },\n              children: [userEditProfileData && userEditProfileData.name ? _jsx(Text, {\n                style: styles.bioLabel,\n                children: userEditProfileData.name\n              }) : _jsx(Text, {\n                style: styles.bioLabel,\n                children: \"Akash Saini\"\n              }), userEditProfileData && userEditProfileData.pronouns ? _jsx(Text, {\n                children: userEditProfileData.pronouns\n              }) : null]\n            }), userEditProfileData && userEditProfileData.bio ? _jsx(View, {\n              children: _jsx(Text, {\n                children: userEditProfileData.bio\n              })\n            }) : null, _jsx(TouchableOpacity, {\n              style: styles.updateBioButton,\n              onPress: function onPress() {\n                return navigation.navigate(\"EditProfile\");\n              },\n              children: _jsx(Text, {\n                style: styles.updateBioButtonText,\n                children: \"Edit Profile\"\n              })\n            })]\n          })\n        })\n      }), _jsxs(Tab.Navigator, {\n        children: [_jsx(Tab.Screen, {\n          name: \"Posts\",\n          component: function component() {\n            return _jsx(ImagesScreen, {\n              posts: imagePosts\n            });\n          },\n          options: {\n            tabBarIcon: function tabBarIcon(_ref4) {\n              var color = _ref4.color,\n                size = _ref4.size;\n              return _jsx(MaterialCommunityIcons, {\n                name: \"grid\",\n                size: 24,\n                color: \"black\"\n              });\n            }\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"Tweets\",\n          component: function component() {\n            return _jsx(TweetsScreen, {\n              posts: tweetPosts\n            });\n          },\n          options: {\n            tabBarIcon: function tabBarIcon(_ref5) {\n              var color = _ref5.color,\n                size = _ref5.size;\n              return _jsx(MaterialCommunityIcons, {\n                name: \"message-text\",\n                size: 24,\n                color: \"black\"\n              });\n            }\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"Tag\",\n          component: function component() {\n            return _jsx(TweetsScreen, {\n              posts: tweetPosts\n            });\n          },\n          options: {\n            tabBarIcon: function tabBarIcon(_ref6) {\n              var color = _ref6.color,\n                size = _ref6.size;\n              return _jsx(MaterialIcons, {\n                name: \"tag\",\n                size: 24,\n                color: \"black\"\n              });\n            }\n          }\n        })]\n      }), _jsx(View, {\n        style: styles.buttonsContainer,\n        children: _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: logout,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Logout\"\n          })\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  profileHeader: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    paddingHorizontal: 16,\n    paddingTop: 35,\n    paddingBottom: 4,\n    zIndex: 10,\n    backgroundColor: \"#fff\"\n  },\n  profileTop: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    paddingHorizontal: 10,\n    paddingVertical: 10\n  },\n  username: {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  settingsIcon: {\n    marginRight: 10\n  },\n  profileInfo: {\n    flexDirection: \"column\",\n    marginBottom: 20\n  },\n  bioContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 10\n  },\n  profileImage: {\n    width: 80,\n    height: 80,\n    borderRadius: 50,\n    resizeMode: \"cover\"\n  },\n  bioTextContainer: {\n    flex: 1,\n    alignItems: \"flex-start\",\n    padding: 10\n  },\n  bioLabel: {\n    fontWeight: \"bold\",\n    marginBottom: 5\n  },\n  updateBioButton: {\n    backgroundColor: \"black\",\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    borderRadius: 5,\n    marginTop: 8\n  },\n  updateBioButtonText: {\n    color: \"white\",\n    fontWeight: \"bold\"\n  },\n  buttonsContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 20\n  },\n  button: {\n    backgroundColor: \"red\",\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"bold\"\n  },\n  userInfo: {\n    flexDirection: \"row\",\n    flex: 1\n  },\n  userStats: {\n    marginLeft: 20,\n    flexDirection: \"row\",\n    flex: 1,\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\"\n  },\n  userStatsItem: {\n    alignItems: \"center\"\n  },\n  statsText: {\n    fontSize: 14,\n    fontWeight: \"500\"\n  },\n  statsCount: {\n    fontWeight: \"bold\",\n    fontSize: 22\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"names":["React","useEffect","useState","useContext","useLayoutEffect","StyleSheet","View","ScrollView","Text","TextInput","Button","Image","TouchableOpacity","Modal","SafeAreaView","useNavigation","UserType","Icon","createMaterialTopTabNavigator","axios","AsyncStorage","ImagesScreen","TweetsScreen","MaterialCommunityIcons","AntDesign","MaterialIcons","ImagePicker","useRoute","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Tab","ProfileScreen","_route$params","navigation","_useContext","userId","setUserId","_useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","followers","setFollowers","_useState5","_useState6","followings","setFollowings","_useState7","_useState8","posts","setPosts","_useState9","_useState10","replies","setReplies","_useState11","_useState12","bio","setBio","_useState13","_useState14","image","setImage","_useState15","_useState16","userProfile","setUserProfille","route","userEditProfileData","params","userProfileData","handleImagePicker","_ref","_asyncToGenerator","permissionResult","requestMediaLibraryPermissionsAsync","granted","alert","pickerResult","launchImageLibraryAsync","canceled","assets","length","console","log","uri","setIsImageSelected","apply","arguments","fetchProfile","_ref2","authToken","getItem","GetUser","get","headers","Authorization","data","profileResponse","catch","error","_profileResponse$data","postsResponse","_x","logout","_ref3","removeItem","replace","imagePosts","filter","post","img","tweetPosts","setOptions","headerTitle","headerLeft","username","style","marginLeft","fontWeight","fontSize","children","headerRight","styles","settingsIcon","onPress","navigate","name","size","color","container","profileTop","userInfo","position","profileImage","source","profilePic","bottom","right","userStats","userStatsItem","statsCount","statsText","profileInfo","bioContainer","bioTextContainer","flexDirection","gap","bioLabel","pronouns","updateBioButton","updateBioButtonText","Navigator","Screen","component","options","tabBarIcon","_ref4","_ref5","_ref6","buttonsContainer","button","buttonText","create","flex","backgroundColor","profileHeader","justifyContent","alignItems","paddingHorizontal","paddingTop","paddingBottom","zIndex","paddingVertical","marginRight","marginBottom","width","height","borderRadius","resizeMode","padding","marginTop"],"sources":["D:/LevelUp Technology/levelArtFrontend/screens/ProfileScreen.js"],"sourcesContent":["import React, { useEffect, useState, useContext, useLayoutEffect } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  ScrollView,\n  Text,\n  TextInput,\n  Button,\n  Image,\n  TouchableOpacity,\n  Modal,\n  SafeAreaView,\n} from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { UserType } from \"../UserContext\";\nimport Icon from \"react-native-vector-icons/Ionicons\";\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport ImagesScreen from \"./ImagesScreen\"; // Import the ImagesScreen component\nimport TweetsScreen from \"./TweetsScreen\"; // Import the TweetsScreen component\nimport {\n  MaterialCommunityIcons,\n  AntDesign,\n  MaterialIcons,\n} from \"@expo/vector-icons\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { useRoute } from \"@react-navigation/native\";\n\nconst Tab = createMaterialTopTabNavigator();\n\nconst ProfileScreen = () => {\n  const navigation = useNavigation();\n  const { userId, setUserId } = useContext(UserType);\n  const [user, setUser] = useState(\"\");\n  const [followers, setFollowers] = useState(0);\n  const [followings, setFollowings] = useState(0);\n  const [posts, setPosts] = useState([]);\n  const [replies, setReplies] = useState([]);\n  const [bio, setBio] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [userProfile, setUserProfille] = useState(\"\");\n  const route = useRoute();\n  const userEditProfileData = route.params?.userProfileData;\n\n  const handleImagePicker = async () => {\n    const permissionResult =\n      await ImagePicker.requestMediaLibraryPermissionsAsync();\n    if (permissionResult.granted === false) {\n      alert(\"Permission to access camera roll is required!\");\n      return;\n    }\n\n    const pickerResult = await ImagePicker.launchImageLibraryAsync();\n    if (!pickerResult.canceled && pickerResult.assets.length > 0) {\n      console.log(\"Selected image URI:\", pickerResult.assets[0].uri); // Log the URI of the selected image\n\n      setImage(pickerResult.assets[0].uri);\n      setIsImageSelected(true);\n    } else {\n      console.log(\"Image picking cancelled or no image selected\");\n    }\n  };\n\n  useEffect(() => {\n    const fetchProfile = async (userId) => {\n      try {\n        const authToken = await AsyncStorage.getItem(\"authToken\");\n\n        const GetUser = await axios.get(\n          `https://levelart.up.railway.app/users/${userId}`,\n          {\n            headers: {\n              Authorization: `Bearer ${authToken}`,\n            },\n          }\n        );\n        setUserProfille(GetUser);\n        console.log(\"get user \", userProfile.data);\n\n        const profileResponse = await axios\n          .get(\n            `https://levelart.up.railway.app/followers/${userId}/followers`,\n            {\n              headers: {\n                Authorization: `Bearer ${authToken}`,\n              },\n            }\n          )\n          .catch((error) => {\n            console.error(\"Error fetching profile:\", error);\n          });\n\n        if (profileResponse) {\n          const { user, followers, followings, bio } = profileResponse.data;\n          setUser(user);\n          setFollowers(followers?.length || 0);\n          setFollowings(followings?.length || 0);\n          setBio(bio || \"\");\n\n          const postsResponse = await axios\n            .get(`https://levelart.up.railway.app/posts/user/${userId}`, {\n              headers: {\n                Authorization: `Bearer ${authToken}`,\n              },\n            })\n            .catch((error) => {\n              console.error(\"Error fetching posts:\", error);\n            });\n\n          if (postsResponse) {\n            setPosts(postsResponse.data);\n            console.log(\"post user\", postsResponse.data);\n          }\n\n          // const repliesResponse = await axios\n          //   .get(\n          //     `https://levelart.up.railway.app/posts/user/${userId}/replies`,\n          //     {\n          //       headers: {\n          //         Authorization: `Bearer ${authToken}`,\n          //       },\n          //     }\n          //   )\n          //   .catch((error) => {\n          //     console.error(\"Error fetching replies:\", error);\n          //   });\n\n          // if (repliesResponse) {\n          //   setReplies(repliesResponse.data);\n          // }\n        }\n      } catch (error) {\n        console.error(\"Error fetching profile:\", error);\n      }\n    };\n\n    if (userId) {\n      fetchProfile(userId);\n    } else {\n      console.log(\"userId is undefined\");\n    }\n  }, [userId]);\n\n  const logout = async () => {\n    try {\n      await AsyncStorage.removeItem(\"authToken\");\n      console.log(\"Cleared auth token\");\n      navigation.replace(\"Login\");\n    } catch (error) {\n      console.error(\"Error clearing auth token:\", error);\n    }\n  };\n\n  // const handleSettingsPress = () => {\n  //   navigation.navigate(\"Settings\");\n  // };\n  // const handleEditProfile = () => {\n  //   navigation.navigate(\"EditProfile\");\n  // };\n\n  // Filter posts based on whether they contain images\n  const imagePosts = posts.filter((post) => post.img); // Filter posts with images\n  const tweetPosts = posts.filter((post) => !post.img); // Filter posts without images\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerTitle: \"\",\n      headerLeft: () =>\n        userEditProfileData && userEditProfileData.username ? (\n          <Text style={{ marginLeft: 10, fontWeight: 500, fontSize: 18 }}>\n            {userEditProfileData.username}\n          </Text>\n        ) : (\n          <Text style={{ marginLeft: 10, fontWeight: 500, fontSize: 18 }}>\n            User Name\n          </Text>\n        ),\n      headerRight: () => (\n        <TouchableOpacity\n          style={styles.settingsIcon}\n          onPress={() => navigation.navigate(\"Settings\")}\n        >\n          <Icon name=\"settings-outline\" size={30} color=\"#333\" />\n        </TouchableOpacity>\n      ),\n    });\n  }, []);\n\n  return (\n    <>\n      <SafeAreaView style={styles.container}>\n        {/* <ScrollView> */}\n        <View style={styles.profileTop}>\n          <View style={styles.userInfo}>\n            <TouchableOpacity\n              onPress={handleImagePicker}\n              style={{ position: \"relative\" }}\n            >\n              {image ? (\n                <Image style={styles.profileImage} source={{ uri: image }} />\n              ) : userEditProfileData && userEditProfileData.profilePic ? (\n                <Image\n                  style={styles.profileImage}\n                  source={{ uri: userEditProfileData.profilePic }}\n                />\n              ) : (\n                <Image\n                  style={styles.profileImage}\n                  source={{\n                    uri: \"https://cdn-icons-png.flaticon.com/128/149/149071.png\",\n                  }}\n                />\n              )}\n\n              <TouchableOpacity\n                onPress={handleImagePicker}\n                style={{ position: \"absolute\", bottom: -3, right: -3 }}\n              >\n                <AntDesign name=\"pluscircle\" size={24} color=\"blue\" />\n              </TouchableOpacity>\n            </TouchableOpacity>\n            <View style={styles.userStats}>\n              {/* <Text style={styles.username}>{user}</Text> */}\n\n              <View style={styles.userStatsItem}>\n                <Text style={styles.statsCount}>{posts.length}</Text>\n                <Text style={styles.statsText}> posts</Text>\n              </View>\n              <View style={styles.userStatsItem}>\n                <Text style={styles.statsCount}>{followers}</Text>\n                <Text style={styles.statsText}> followers</Text>\n              </View>\n              <View style={styles.userStatsItem}>\n                <Text style={styles.statsCount}>{followings} </Text>\n                <Text style={styles.statsText}>following</Text>\n              </View>\n            </View>\n          </View>\n        </View>\n\n        <View style={styles.profileInfo}>\n          <View style={styles.bioContainer}>\n            <View style={styles.bioTextContainer}>\n              <View style={{ flexDirection: \"row\", gap: 20 }}>\n                {userEditProfileData && userEditProfileData.name ? (\n                  <Text style={styles.bioLabel}>\n                    {userEditProfileData.name}\n                  </Text>\n                ) : (\n                  <Text style={styles.bioLabel}>Akash Saini</Text>\n                )}\n                {userEditProfileData && userEditProfileData.pronouns ? (\n                  <Text>{userEditProfileData.pronouns}</Text>\n                ) : null}\n              </View>\n              {userEditProfileData && userEditProfileData.bio ? (\n                <View>\n                  <Text>{userEditProfileData.bio}</Text>\n                </View>\n              ) : null}\n\n              <TouchableOpacity\n                style={styles.updateBioButton}\n                onPress={() => navigation.navigate(\"EditProfile\")}\n              >\n                <Text style={styles.updateBioButtonText}>Edit Profile</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n\n        {/* Render the Tab.Navigator outside the ScrollView */}\n        <Tab.Navigator>\n          <Tab.Screen\n            name=\"Posts\"\n            component={() => <ImagesScreen posts={imagePosts} />}\n            options={{\n              // tabBarLabel:\"\",\n              tabBarIcon: ({ color, size }) => (\n                <MaterialCommunityIcons name=\"grid\" size={24} color=\"black\" />\n              ),\n            }}\n          />\n          <Tab.Screen\n            name=\"Tweets\"\n            component={() => <TweetsScreen posts={tweetPosts} />}\n            options={{\n              // tabBarLabel:\"\",\n              tabBarIcon: ({ color, size }) => (\n                <MaterialCommunityIcons\n                  name=\"message-text\"\n                  size={24}\n                  color=\"black\"\n                />\n              ),\n            }}\n          />\n          <Tab.Screen\n            name=\"Tag\"\n            component={() => <TweetsScreen posts={tweetPosts} />}\n            options={{\n              // tabBarLabel:\"\",\n              tabBarIcon: ({ color, size }) => (\n                <MaterialIcons name=\"tag\" size={24} color=\"black\" />\n              ),\n            }}\n          />\n        </Tab.Navigator>\n\n        <View style={styles.buttonsContainer}>\n          <TouchableOpacity style={styles.button} onPress={logout}>\n            <Text style={styles.buttonText}>Logout</Text>\n          </TouchableOpacity>\n        </View>\n        {/* </ScrollView> */}\n      </SafeAreaView>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n  },\n  profileHeader: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    paddingHorizontal: 16,\n    paddingTop: 35,\n    paddingBottom: 4,\n    // borderBottomWidth:1,\n    // borderBottomColor:\"#e0e0e0\",\n    zIndex: 10,\n    backgroundColor: \"#fff\",\n  },\n  profileTop: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    paddingHorizontal: 10,\n    paddingVertical: 10,\n  },\n  username: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n  },\n  settingsIcon: {\n    marginRight: 10,\n  },\n  profileInfo: {\n    flexDirection: \"column\",\n    marginBottom: 20,\n  },\n  bioContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 10,\n  },\n  profileImage: {\n    width: 80,\n    height: 80,\n    borderRadius: 50,\n    resizeMode: \"cover\",\n  },\n  bioTextContainer: {\n    flex: 1,\n    alignItems: \"flex-start\",\n    padding: 10,\n  },\n  bioLabel: {\n    fontWeight: \"bold\",\n    marginBottom: 5,\n  },\n  updateBioButton: {\n    backgroundColor: \"black\",\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    borderRadius: 5,\n    marginTop: 8,\n  },\n  updateBioButtonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n  },\n  buttonsContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 20,\n  },\n  button: {\n    backgroundColor: \"red\",\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    borderRadius: 5,\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n  },\n  userInfo: {\n    flexDirection: \"row\",\n    flex:1,\n  },\n  userStats: {\n    marginLeft: 20,\n    flexDirection: \"row\",\n    flex: 1,\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n  },\n  userStatsItem: {\n    alignItems: \"center\",\n  },\n\n  statsText: {\n    fontSize: 14,\n    fontWeight: \"500\",\n  },\n  statsCount: {\n    fontWeight: \"bold\",\n    fontSize: 22,\n  },\n});\n\nexport default ProfileScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}