{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ThreadsScreen = function ThreadsScreen() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    postedBy = _useState2[0],\n    setPostedBy = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    content = _useState4[0],\n    setContent = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setIsLoading = _useState6[1];\n  console.log(\"postedBy:\", postedBy);\n  useEffect(function () {\n    var fetchUserId = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var storedUserId = yield AsyncStorage.getItem(\"userId\");\n          var response = yield fetch(\"https://levelartbackend-production.up.railway.app/users\");\n          var userId = response.user;\n          console.log(\"userId:\", userId);\n          if (storedUserId) {\n            setPostedBy(storedUserId);\n          } else {\n            console.log(\"User ID not found in AsyncStorage\");\n          }\n        } catch (error) {\n          console.error(\"Error fetching userId from AsyncStorage:\", error);\n        } finally {\n          setIsLoading(false);\n        }\n      });\n      return function fetchUserId() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchUserId();\n  }, []);\n  var handlePostSubmit = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!content) {\n        console.log(\"Text field is required\");\n        return;\n      }\n      try {\n        var userId = yield AsyncStorage.getItem(\"userId\");\n        if (!userId) {\n          console.log(\"User ID not found in AsyncStorage\");\n          return;\n        }\n        var postData = {\n          postedBy: userId,\n          text: content\n        };\n        var authToken = yield AsyncStorage.getItem(\"authToken\");\n        if (!authToken) {\n          console.log(\"No authentication token found in AsyncStorage\");\n          return;\n        }\n        var response = yield axios.post(\"https://levelartbackend-production.up.railway.app/posts/create-post\", postData, {\n          headers: {\n            Authorization: `Bearer ${authToken}`\n          }\n        });\n        setContent(\"\");\n        console.log(\"Post created successfully:\", response.data);\n      } catch (error) {\n        console.log(\"Error creating post:\", error);\n      }\n    });\n    return function handlePostSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  if (isLoading) {\n    return _jsx(SafeAreaView, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"black\"\n      })\n    });\n  }\n  return _jsxs(SafeAreaView, {\n    style: {\n      padding: 10\n    },\n    children: [_jsx(View, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        gap: 10,\n        padding: 10\n      },\n      children: _jsx(Image, {\n        style: {\n          width: 40,\n          height: 40,\n          borderRadius: 20,\n          resizeMode: \"contain\"\n        },\n        source: {\n          uri: \"https://cdn-icons-png.flaticon.com/128/149/149071.png\"\n        }\n      })\n    }), _jsx(View, {\n      style: {\n        flexDirection: \"row\",\n        marginLeft: 10\n      },\n      children: _jsx(TextInput, {\n        value: content,\n        onChangeText: function onChangeText(text) {\n          return setContent(text);\n        },\n        placeholderTextColor: \"black\",\n        placeholder: \"Type your message...\",\n        multiline: true\n      })\n    }), _jsx(View, {\n      style: {\n        marginTop: 20\n      }\n    }), _jsx(Button, {\n      onPress: handlePostSubmit,\n      title: \"Share Post\"\n    })]\n  });\n};\nexport default ThreadsScreen;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","Text","View","Image","SafeAreaView","TextInput","Button","ActivityIndicator","axios","AsyncStorage","jsx","_jsx","jsxs","_jsxs","ThreadsScreen","_useState","_useState2","_slicedToArray","postedBy","setPostedBy","_useState3","_useState4","content","setContent","_useState5","_useState6","isLoading","setIsLoading","console","log","fetchUserId","_ref","_asyncToGenerator","storedUserId","getItem","response","fetch","userId","user","error","apply","arguments","handlePostSubmit","_ref2","postData","text","authToken","post","headers","Authorization","data","style","flex","justifyContent","alignItems","children","size","color","padding","flexDirection","gap","width","height","borderRadius","resizeMode","source","uri","marginLeft","value","onChangeText","placeholderTextColor","placeholder","multiline","marginTop","onPress","title","styles","create"],"sources":["C:/himanshu/LevelArtFrontend/screens/ThreadsScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, Text, View, Image, SafeAreaView, TextInput, Button, ActivityIndicator } from \"react-native\";\r\nimport axios from \"axios\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nconst ThreadsScreen = () => {\r\n  const [postedBy, setPostedBy] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  console.log(\"postedBy:\",postedBy)\r\n\r\n  useEffect(() => {\r\n\r\n    const fetchUserId = async () => {\r\n      try {\r\n\r\n        const storedUserId = await AsyncStorage.getItem(\"userId\");\r\n\r\n        const response = await fetch(\"https://levelartbackend-production.up.railway.app/users\")\r\n\r\n        const userId = response.user\r\n\r\n        console.log(\"userId:\", userId);\r\n        if (storedUserId) {\r\n          setPostedBy(storedUserId);\r\n        } else {\r\n          console.log(\"User ID not found in AsyncStorage\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching userId from AsyncStorage:\", error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    \r\n  \r\n    fetchUserId();\r\n  }, []);\r\n  \r\n  \r\n  \r\n  const handlePostSubmit = async () => {\r\n    if (!content) {\r\n      console.log(\"Text field is required\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      // Retrieve the user ID from AsyncStorage\r\n      const userId = await AsyncStorage.getItem(\"userId\");\r\n      if (!userId) {\r\n        console.log(\"User ID not found in AsyncStorage\");\r\n        return;\r\n      }\r\n  \r\n      // Create the postData object with the user ID and content\r\n      const postData = {\r\n        postedBy: userId, // Pass the userId as postedBy\r\n        text: content, // Pass the content as text\r\n      };\r\n  \r\n      // Retrieve the authentication token from AsyncStorage\r\n      const authToken = await AsyncStorage.getItem(\"authToken\");\r\n      if (!authToken) {\r\n        console.log(\"No authentication token found in AsyncStorage\");\r\n        return;\r\n      }\r\n  \r\n      // Include the token in the request header\r\n      const response = await axios.post(\"https://levelartbackend-production.up.railway.app/posts/create-post\", postData, {\r\n        headers: {\r\n          Authorization: `Bearer ${authToken}`,\r\n        },\r\n      });\r\n  \r\n      // Clear the content field after successful post creation\r\n      setContent(\"\");\r\n      console.log(\"Post created successfully:\", response.data);\r\n    } catch (error) {\r\n      console.log(\"Error creating post:\", error);\r\n    }\r\n  };\r\n  \r\n  \r\n  if (isLoading) {\r\n    return (\r\n      <SafeAreaView style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n        <ActivityIndicator size=\"large\" color=\"black\" />\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={{ padding: 10 }}>\r\n      <View\r\n        style={{\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          gap: 10,\r\n          padding: 10,\r\n        }}\r\n      >\r\n        <Image\r\n          style={{\r\n            width: 40,\r\n            height: 40,\r\n            borderRadius: 20,\r\n            resizeMode: \"contain\",\r\n          }}\r\n          source={{\r\n            uri: \"https://cdn-icons-png.flaticon.com/128/149/149071.png\",\r\n          }}\r\n        />\r\n      </View>\r\n\r\n      <View style={{ flexDirection: \"row\", marginLeft: 10 }}>\r\n        <TextInput\r\n          value={content}\r\n          onChangeText={(text) => setContent(text)}\r\n          placeholderTextColor={\"black\"}\r\n          placeholder=\"Type your message...\"\r\n          multiline\r\n        />\r\n      </View>\r\n\r\n      <View style={{ marginTop: 20 }} />\r\n\r\n      <Button onPress={handlePostSubmit} title=\"Share Post\" />\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default ThreadsScreen;\r\n\r\nconst styles = StyleSheet.create({});\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,iBAAA;AAEnD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,2CAA2C;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAErE,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;EAC1B,IAAAC,SAAA,GAAgCjB,QAAQ,CAAC,EAAE,CAAC;IAAAkB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAA8BtB,QAAQ,CAAC,EAAE,CAAC;IAAAuB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAnCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAC1B,IAAAG,UAAA,GAAkC1B,QAAQ,CAAC,IAAI,CAAC;IAAA2B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAzCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAE9BG,OAAO,CAACC,GAAG,CAAC,WAAW,EAACX,QAAQ,CAAC;EAEjCnB,SAAS,CAAC,YAAM;IAEd,IAAM+B,WAAW;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QAC9B,IAAI;UAEF,IAAMC,YAAY,SAASxB,YAAY,CAACyB,OAAO,CAAC,QAAQ,CAAC;UAEzD,IAAMC,QAAQ,SAASC,KAAK,CAAC,yDAAyD,CAAC;UAEvF,IAAMC,MAAM,GAAGF,QAAQ,CAACG,IAAI;UAE5BV,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEQ,MAAM,CAAC;UAC9B,IAAIJ,YAAY,EAAE;YAChBd,WAAW,CAACc,YAAY,CAAC;UAC3B,CAAC,MAAM;YACLL,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;UAClD;QACF,CAAC,CAAC,OAAOU,KAAK,EAAE;UACdX,OAAO,CAACW,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;QAClE,CAAC,SAAS;UACRZ,YAAY,CAAC,KAAK,CAAC;QACrB;MACF,CAAC;MAAA,gBApBKG,WAAWA,CAAA;QAAA,OAAAC,IAAA,CAAAS,KAAA,OAAAC,SAAA;MAAA;IAAA,GAoBhB;IAIDX,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAIN,IAAMY,gBAAgB;IAAA,IAAAC,KAAA,GAAAX,iBAAA,CAAG,aAAY;MACnC,IAAI,CAACV,OAAO,EAAE;QACZM,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;QACrC;MACF;MAEA,IAAI;QAEF,IAAMQ,MAAM,SAAS5B,YAAY,CAACyB,OAAO,CAAC,QAAQ,CAAC;QACnD,IAAI,CAACG,MAAM,EAAE;UACXT,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;UAChD;QACF;QAGA,IAAMe,QAAQ,GAAG;UACf1B,QAAQ,EAAEmB,MAAM;UAChBQ,IAAI,EAAEvB;QACR,CAAC;QAGD,IAAMwB,SAAS,SAASrC,YAAY,CAACyB,OAAO,CAAC,WAAW,CAAC;QACzD,IAAI,CAACY,SAAS,EAAE;UACdlB,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;UAC5D;QACF;QAGA,IAAMM,QAAQ,SAAS3B,KAAK,CAACuC,IAAI,CAAC,qEAAqE,EAAEH,QAAQ,EAAE;UACjHI,OAAO,EAAE;YACPC,aAAa,EAAG,UAASH,SAAU;UACrC;QACF,CAAC,CAAC;QAGFvB,UAAU,CAAC,EAAE,CAAC;QACdK,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEM,QAAQ,CAACe,IAAI,CAAC;MAC1D,CAAC,CAAC,OAAOX,KAAK,EAAE;QACdX,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEU,KAAK,CAAC;MAC5C;IACF,CAAC;IAAA,gBAxCKG,gBAAgBA,CAAA;MAAA,OAAAC,KAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;EAAA,GAwCrB;EAGD,IAAIf,SAAS,EAAE;IACb,OACEf,IAAA,CAACP,YAAY;MAAC+C,KAAK,EAAE;QAAEC,IAAI,EAAE,CAAC;QAAEC,cAAc,EAAE,QAAQ;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAC,QAAA,EAC/E5C,IAAA,CAACJ,iBAAiB;QAACiD,IAAI,EAAC,OAAO;QAACC,KAAK,EAAC;MAAO,CAAE;IAAC,CACpC,CAAC;EAEnB;EAEA,OACE5C,KAAA,CAACT,YAAY;IAAC+C,KAAK,EAAE;MAAEO,OAAO,EAAE;IAAG,CAAE;IAAAH,QAAA,GACnC5C,IAAA,CAACT,IAAI;MACHiD,KAAK,EAAE;QACLQ,aAAa,EAAE,KAAK;QACpBL,UAAU,EAAE,QAAQ;QACpBM,GAAG,EAAE,EAAE;QACPF,OAAO,EAAE;MACX,CAAE;MAAAH,QAAA,EAEF5C,IAAA,CAACR,KAAK;QACJgD,KAAK,EAAE;UACLU,KAAK,EAAE,EAAE;UACTC,MAAM,EAAE,EAAE;UACVC,YAAY,EAAE,EAAE;UAChBC,UAAU,EAAE;QACd,CAAE;QACFC,MAAM,EAAE;UACNC,GAAG,EAAE;QACP;MAAE,CACH;IAAC,CACE,CAAC,EAEPvD,IAAA,CAACT,IAAI;MAACiD,KAAK,EAAE;QAAEQ,aAAa,EAAE,KAAK;QAAEQ,UAAU,EAAE;MAAG,CAAE;MAAAZ,QAAA,EACpD5C,IAAA,CAACN,SAAS;QACR+D,KAAK,EAAE9C,OAAQ;QACf+C,YAAY,EAAE,SAAAA,aAACxB,IAAI;UAAA,OAAKtB,UAAU,CAACsB,IAAI,CAAC;QAAA,CAAC;QACzCyB,oBAAoB,EAAE,OAAQ;QAC9BC,WAAW,EAAC,sBAAsB;QAClCC,SAAS;MAAA,CACV;IAAC,CACE,CAAC,EAEP7D,IAAA,CAACT,IAAI;MAACiD,KAAK,EAAE;QAAEsB,SAAS,EAAE;MAAG;IAAE,CAAE,CAAC,EAElC9D,IAAA,CAACL,MAAM;MAACoE,OAAO,EAAEhC,gBAAiB;MAACiC,KAAK,EAAC;IAAY,CAAE,CAAC;EAAA,CAC5C,CAAC;AAEnB,CAAC;AAED,eAAe7D,aAAa;AAE5B,IAAM8D,MAAM,GAAG5E,UAAU,CAAC6E,MAAM,CAAC,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}