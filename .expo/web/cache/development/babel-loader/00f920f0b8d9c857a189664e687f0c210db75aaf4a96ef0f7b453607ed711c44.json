{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    posts = _useState2[0],\n    setPosts = _useState2[1];\n  useEffect(function () {\n    fetchPosts();\n  }, []);\n  var fetchPosts = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var authToken = yield AsyncStorage.getItem('authToken');\n        var headers = {\n          Authorization: `Bearer ${authToken}`,\n          'Content-Type': 'application/json'\n        };\n        var response = yield axios.get('http://localhost:3000/posts', {\n          headers: headers\n        });\n        setPosts(response.data);\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    });\n    return function fetchPosts() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: \"Recent Posts\"\n    }), _jsx(View, {\n      style: styles.postContainer,\n      children: posts.map(function (post) {\n        return _jsxs(View, {\n          style: styles.post,\n          children: [_jsx(Text, {\n            style: styles.postText,\n            children: post.content\n          }), _jsxs(Text, {\n            style: styles.author,\n            children: [\"Posted by: \", post.author]\n          })]\n        }, post._id);\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#ffffff'\n  },\n  heading: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  postContainer: {\n    marginTop: 10\n  },\n  post: {\n    marginBottom: 20,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#cccccc',\n    borderRadius: 5\n  },\n  postText: {\n    fontSize: 16,\n    marginBottom: 10\n  },\n  author: {\n    fontSize: 14,\n    color: '#666666'\n  }\n});\nexport default HomeScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","ScrollView","StyleSheet","axios","jsx","_jsx","jsxs","_jsxs","HomeScreen","_useState","_useState2","_slicedToArray","posts","setPosts","fetchPosts","_ref","_asyncToGenerator","authToken","AsyncStorage","getItem","headers","Authorization","response","get","data","error","console","apply","arguments","style","styles","container","children","heading","postContainer","map","post","postText","content","author","_id","create","flex","padding","backgroundColor","fontSize","fontWeight","marginBottom","marginTop","borderWidth","borderColor","borderRadius","color"],"sources":["C:/himanshu/threads-app/screens/HomeScreen.js"],"sourcesContent":["// src/screens/HomeScreen.js\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { View, Text, ScrollView, StyleSheet } from 'react-native';\r\nimport axios from 'axios';\r\n\r\nconst HomeScreen = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, []);\r\n\r\n const fetchPosts = async () => {\r\n  try {\r\n    // Fetch the authentication token from AsyncStorage or wherever it's stored\r\n    const authToken = await AsyncStorage.getItem('authToken');\r\n    \r\n    // Set the authorization header with the authentication token\r\n    const headers = {\r\n      Authorization: `Bearer ${authToken}`,\r\n      'Content-Type': 'application/json',\r\n    };\r\n\r\n    // Make the request to fetch posts with the authorization header\r\n    const response = await axios.get('http://localhost:3000/posts', { headers });\r\n    setPosts(response.data);\r\n  } catch (error) {\r\n    console.error('Error fetching posts:', error);\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <Text style={styles.heading}>Recent Posts</Text>\r\n      <View style={styles.postContainer}>\r\n        {posts.map(post => (\r\n          <View key={post._id} style={styles.post}>\r\n            <Text style={styles.postText}>{post.content}</Text>\r\n            <Text style={styles.author}>Posted by: {post.author}</Text>\r\n          </View>\r\n        ))}\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    backgroundColor: '#ffffff',\r\n  },\r\n  heading: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n  },\r\n  postContainer: {\r\n    marginTop: 10,\r\n  },\r\n  post: {\r\n    marginBottom: 20,\r\n    padding: 10,\r\n    borderWidth: 1,\r\n    borderColor: '#cccccc',\r\n    borderRadius: 5,\r\n  },\r\n  postText: {\r\n    fontSize: 16,\r\n    marginBottom: 10,\r\n  },\r\n  author: {\r\n    fontSize: 14,\r\n    color: '#666666',\r\n  },\r\n});\r\n\r\nexport default HomeScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}