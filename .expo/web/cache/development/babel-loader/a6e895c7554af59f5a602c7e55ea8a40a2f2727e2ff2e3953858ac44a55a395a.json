{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as ImagePicker from 'expo-image-picker';\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport jwt_decode from \"jwt-decode\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ThreadsScreen = function ThreadsScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    content = _useState2[0],\n    setContent = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    image = _useState4[0],\n    setImage = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setIsLoading = _useState6[1];\n  var handleImagePicker = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var permissionResult = yield ImagePicker.requestMediaLibraryPermissionsAsync();\n      if (permissionResult.granted === false) {\n        alert('Permission to access camera roll is required!');\n        return;\n      }\n      var pickerResult = yield ImagePicker.launchImageLibraryAsync();\n      if (!pickerResult.canceled && pickerResult.assets.length > 0) {\n        console.log(\"Selected image URI:\", pickerResult.assets[0].uri);\n        setImage(pickerResult.assets[0].uri);\n      } else {\n        console.log(\"Image picking cancelled or no image selected\");\n      }\n    });\n    return function handleImagePicker() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handlePostSubmit = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setIsLoading(true);\n      try {\n        var authToken = yield AsyncStorage.getItem('authToken');\n        var decodedToken = jwt_decode(authToken);\n        var userId = decodedToken.sub;\n        var formData = new FormData();\n        formData.append('text', content);\n        formData.append('postedBy', userId);\n        if (image) {\n          var localUri = image;\n          var filename = localUri.split('/').pop();\n          var match = /\\.(\\w+)$/.exec(filename);\n          var type = match ? `image/${match[1]}` : 'image';\n          formData.append('img', {\n            uri: localUri,\n            name: filename,\n            type: type\n          });\n        }\n        var response = yield axios.post('http://192.168.178.40:3000/posts/create-post', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            'Authorization': `Bearer ${authToken}`\n          }\n        });\n        AsyncStorage.setItem(\"p\", response.data._id);\n        console.log('Post created successfully:', response.data._id);\n        setContent('');\n        setImage(null);\n      } catch (error) {\n        console.error('Error creating post:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function handlePostSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      padding: 20\n    },\n    children: [_jsx(TextInput, {\n      value: content,\n      onChangeText: setContent,\n      placeholder: \"What's on your mind?\",\n      multiline: true,\n      style: {\n        marginBottom: 20,\n        borderBottomWidth: 1,\n        borderColor: '#ccc'\n      }\n    }), _jsx(TouchableOpacity, {\n      onPress: handleImagePicker,\n      children: _jsx(View, {\n        style: {\n          marginBottom: 20\n        },\n        children: _jsx(Text, {\n          children: \"Add Image\"\n        })\n      })\n    }), image && _jsx(Image, {\n      source: {\n        uri: image\n      },\n      style: {\n        width: 200,\n        height: 200,\n        marginBottom: 20\n      }\n    }), _jsx(Button, {\n      title: \"Share Post\",\n      onPress: handlePostSubmit,\n      disabled: isLoading\n    }), isLoading && _jsx(ActivityIndicator, {})]\n  });\n};\nexport default ThreadsScreen;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","Text","View","Image","SafeAreaView","TextInput","Button","ActivityIndicator","TouchableOpacity","ImagePicker","axios","AsyncStorage","jwt_decode","jsx","_jsx","jsxs","_jsxs","ThreadsScreen","_useState","_useState2","_slicedToArray","content","setContent","_useState3","_useState4","image","setImage","_useState5","_useState6","isLoading","setIsLoading","handleImagePicker","_ref","_asyncToGenerator","permissionResult","requestMediaLibraryPermissionsAsync","granted","alert","pickerResult","launchImageLibraryAsync","canceled","assets","length","console","log","uri","apply","arguments","handlePostSubmit","_ref2","authToken","getItem","decodedToken","userId","sub","formData","FormData","append","localUri","filename","split","pop","match","exec","type","name","response","post","headers","setItem","data","_id","error","style","flex","padding","children","value","onChangeText","placeholder","multiline","marginBottom","borderBottomWidth","borderColor","onPress","source","width","height","title","disabled","styles","create"],"sources":["C:/Users/DELL/Documents/Confidentials/levelArtFrontend/screens/ThreadsScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, Text, View, Image, SafeAreaView, TextInput, Button, ActivityIndicator, TouchableOpacity } from \"react-native\";\r\nimport * as ImagePicker from 'expo-image-picker'; // Import Expo's ImagePicker module\r\nimport axios from \"axios\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst ThreadsScreen = () => {\r\n  const [content, setContent] = useState('');\r\n  const [image, setImage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleImagePicker = async () => {\r\n    const permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n    if (permissionResult.granted === false) {\r\n      alert('Permission to access camera roll is required!');\r\n      return;\r\n    }\r\n  \r\n    const pickerResult = await ImagePicker.launchImageLibraryAsync();\r\n    if (!pickerResult.canceled && pickerResult.assets.length > 0) {\r\n      console.log(\"Selected image URI:\", pickerResult.assets[0].uri); // Log the URI of the selected image\r\n  \r\n      setImage(pickerResult.assets[0].uri);\r\n    } else {\r\n      console.log(\"Image picking cancelled or no image selected\");\r\n    }\r\n  };\r\n  \r\n\r\n  const handlePostSubmit = async () => {\r\n    setIsLoading(true);\r\n  \r\n    try {\r\n      const authToken = await AsyncStorage.getItem('authToken');\r\n      const decodedToken = jwt_decode(authToken);\r\n      const userId = decodedToken.sub; // Extract user ID from the token\r\n  \r\n      const formData = new FormData();\r\n      formData.append('text', content);\r\n      formData.append('postedBy', userId); // Include the user ID as the \"postedBy\" field\r\n  \r\n      if (image) {\r\n        const localUri = image;\r\n        const filename = localUri.split('/').pop();\r\n        const match = /\\.(\\w+)$/.exec(filename);\r\n        const type = match ? `image/${match[1]}` : 'image';\r\n        formData.append('img', { uri: localUri, name: filename, type }); // Change 'image' to 'img'\r\n      }\r\n  \r\n      const response = await axios.post('http://192.168.178.40:3000/posts/create-post', formData, {\r\n      headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          'Authorization': `Bearer ${authToken}`,\r\n        },\r\n      });\r\n      AsyncStorage.setItem(\"p\", response.data._id);\r\n\r\n      console.log('Post created successfully:', response.data._id);\r\n      // Reset form fields\r\n      setContent('');\r\n      setImage(null);\r\n\r\n    } catch (error) {\r\n      console.error('Error creating post:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1, padding: 20 }}>\r\n      <TextInput\r\n        value={content}\r\n        onChangeText={setContent}\r\n        placeholder=\"What's on your mind?\"\r\n        multiline\r\n        style={{ marginBottom: 20, borderBottomWidth: 1, borderColor: '#ccc' }}\r\n      />\r\n      <TouchableOpacity onPress={handleImagePicker}>\r\n        <View style={{ marginBottom: 20 }}>\r\n          <Text>Add Image</Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n      {image && <Image source={{ uri: image }} style={{ width: 200, height: 200, marginBottom: 20 }} />}\r\n      <Button title=\"Share Post\" onPress={handlePostSubmit} disabled={isLoading} />\r\n      {isLoading && <ActivityIndicator />}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ThreadsScreen;\r\n\r\nconst styles = StyleSheet.create({});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}