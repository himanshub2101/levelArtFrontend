{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _useState = useState([]),\n  _useState2 = _slicedToArray(_useState, 2),\n  savedPosts = _useState2[0],\n  setSavedPosts = _useState2[1];\nuseEffect(function () {\n  fetchSavedPosts();\n}, []);\nvar fetchSavedPosts = function () {\n  var _ref = _asyncToGenerator(function* () {\n    try {\n      var _savedPosts = yield AsyncStorage.getItem(\"savedPosts\");\n      if (_savedPosts) {\n        setSavedPosts(JSON.parse(_savedPosts));\n      }\n    } catch (error) {\n      console.error(\"Error fetching saved posts:\", error);\n    }\n  });\n  return function fetchSavedPosts() {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar handleSavePost = function () {\n  var _ref2 = _asyncToGenerator(function* (postId) {\n    try {\n      var isSaved = savedPosts.includes(postId);\n      var updatedSavedPosts = isSaved ? savedPosts.filter(function (savedPostId) {\n        return savedPostId !== postId;\n      }) : [].concat(_toConsumableArray(savedPosts), [postId]);\n      setSavedPosts(updatedSavedPosts);\n      yield AsyncStorage.setItem(\"savedPosts\", JSON.stringify(updatedSavedPosts));\n    } catch (error) {\n      console.error(\"Error saving post:\", error);\n    }\n  });\n  return function handleSavePost(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n_jsxs(View, {\n  style: styles.actionButtons,\n  children: [_jsx(TouchableOpacity, {\n    onPress: function onPress() {\n      return handleLike(post._id);\n    },\n    style: {\n      marginHorizontal: 10\n    },\n    children: _jsx(AntDesign, {\n      name: post.liked ? \"heart\" : \"hearto\",\n      size: 30,\n      color: post.liked ? \"red\" : \"black\"\n    })\n  }), _jsx(TouchableOpacity, {\n    onPress: toggleCommentInput,\n    style: {\n      marginHorizontal: 10\n    },\n    children: _jsx(FontAwesome, {\n      name: \"comment-o\",\n      size: 30,\n      color: \"black\"\n    })\n  }), _jsx(TouchableOpacity, {\n    onPress: function onPress() {\n      return handleSavePost(post._id);\n    },\n    style: {\n      marginHorizontal: 10\n    },\n    children: _jsx(Feather, {\n      name: savedPosts.includes(post._id) ? \"bookmark\" : \"bookmark-outline\",\n      size: 30,\n      color: \"black\"\n    })\n  }), _jsx(TouchableOpacity, {\n    onPress: function onPress() {},\n    style: {\n      marginHorizontal: 10\n    },\n    children: _jsx(Ionicons, {\n      name: \"paper-plane-outline\",\n      size: 30,\n      color: \"black\"\n    })\n  })]\n});","map":{"version":3,"names":["Feather","jsx","_jsx","jsxs","_jsxs","_useState","useState","_useState2","_slicedToArray","savedPosts","setSavedPosts","useEffect","fetchSavedPosts","_ref","_asyncToGenerator","AsyncStorage","getItem","JSON","parse","error","console","apply","arguments","handleSavePost","_ref2","postId","isSaved","includes","updatedSavedPosts","filter","savedPostId","concat","_toConsumableArray","setItem","stringify","_x","View","style","styles","actionButtons","children","TouchableOpacity","onPress","handleLike","post","_id","marginHorizontal","AntDesign","name","liked","size","color","toggleCommentInput","FontAwesome","Ionicons"],"sources":["C:/Users/VT/Documents/confidential/native project/levelArtFrontend/screens/HomeScreen.js"],"sourcesContent":["// Import the necessary icon\r\nimport { Feather } from \"@expo/vector-icons\";\r\n\r\n// Inside the component function\r\nconst [savedPosts, setSavedPosts] = useState([]); // State to store saved posts\r\n\r\n// Fetch saved posts when the component mounts\r\nuseEffect(() => {\r\n  fetchSavedPosts();\r\n}, []);\r\n\r\n// Function to fetch saved posts\r\nconst fetchSavedPosts = async () => {\r\n  try {\r\n    // Fetch saved posts from AsyncStorage or your backend API\r\n    const savedPosts = await AsyncStorage.getItem(\"savedPosts\");\r\n    if (savedPosts) {\r\n      setSavedPosts(JSON.parse(savedPosts));\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error fetching saved posts:\", error);\r\n  }\r\n};\r\n\r\n// Function to handle saving/unsaving posts\r\nconst handleSavePost = async (postId) => {\r\n  try {\r\n    // Check if the post is already saved\r\n    const isSaved = savedPosts.includes(postId);\r\n    // Update the saved posts list based on the current state\r\n    const updatedSavedPosts = isSaved\r\n      ? savedPosts.filter((savedPostId) => savedPostId !== postId)\r\n      : [...savedPosts, postId];\r\n    // Update the saved posts state\r\n    setSavedPosts(updatedSavedPosts);\r\n    // Save the updated list to AsyncStorage or your backend API\r\n    await AsyncStorage.setItem(\"savedPosts\", JSON.stringify(updatedSavedPosts));\r\n  } catch (error) {\r\n    console.error(\"Error saving post:\", error);\r\n  }\r\n};\r\n\r\n// Inside the renderPost function, add the save icon and handle its press event\r\n<View style={styles.actionButtons}>\r\n  <TouchableOpacity onPress={() => handleLike(post._id)} style={{ marginHorizontal: 10 }}>\r\n    <AntDesign name={post.liked ? \"heart\" : \"hearto\"} size={30} color={post.liked ? \"red\" : \"black\"} />\r\n  </TouchableOpacity>\r\n  <TouchableOpacity onPress={toggleCommentInput} style={{ marginHorizontal: 10 }}>\r\n    <FontAwesome name=\"comment-o\" size={30} color=\"black\" />\r\n  </TouchableOpacity>\r\n  <TouchableOpacity onPress={() => handleSavePost(post._id)} style={{ marginHorizontal: 10 }}>\r\n    <Feather name={savedPosts.includes(post._id) ? \"bookmark\" : \"bookmark-outline\"} size={30} color=\"black\" />\r\n  </TouchableOpacity>\r\n  <TouchableOpacity onPress={() => {}} style={{ marginHorizontal: 10 }}>\r\n    <Ionicons name=\"paper-plane-outline\" size={30} color=\"black\" />\r\n  </TouchableOpacity>\r\n</View>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}