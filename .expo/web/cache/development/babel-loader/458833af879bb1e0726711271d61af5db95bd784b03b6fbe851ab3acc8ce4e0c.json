{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as ImagePicker from 'expo-image-picker';\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport jwt_decode from \"jwt-decode\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ThreadsScreen = function ThreadsScreen() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    content = _useState2[0],\n    setContent = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoading = _useState4[0],\n    setIsLoading = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    img = _useState6[0],\n    setImage = _useState6[1];\n  useEffect(function () {\n    setIsLoading(false);\n  }, []);\n  var handlePostSubmit = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (!content && !img) {\n        console.log(\"Text field or image is required\");\n        return;\n      }\n      console.log(\"Content:\", content);\n      console.log(\"Image URI:\", img);\n      try {\n        var authToken = yield AsyncStorage.getItem(\"authToken\");\n        console.log(\"AuthToken:\", authToken);\n        var decodedToken = jwt_decode(authToken);\n        var userId = decodedToken == null ? void 0 : decodedToken.sub;\n        var postData = new FormData();\n        console.log(\"userIdFromThreadScreen:\", userId);\n        postData.append(\"text\", content);\n        postData.append(\"postedBy\", userId);\n        if (img) {\n          var uriParts = img.split(\".\");\n          var fileType = uriParts[uriParts.length - 1];\n          postData.append(\"image\", {\n            uri: img,\n            name: `photo.${fileType}`,\n            type: `image/${fileType}`\n          });\n        }\n        console.log(\"FormData:\", postData);\n        var response = yield axios.post(\"https://levelartbackend-production.up.railway.app/posts/create-post\", postData, {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        setContent(\"\");\n        setImage(null);\n        console.log(\"Post created successfully:\", response.data);\n      } catch (error) {\n        if (error.response) {\n          console.log(\"Error creating post:\", error.response.data.error);\n        } else {\n          console.log(\"Error creating post:\", error.message);\n        }\n      }\n    });\n    return function handlePostSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleImagePicker = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var _result$assets;\n        var _yield$ImagePicker$re = yield ImagePicker.requestMediaLibraryPermissionsAsync(),\n          status = _yield$ImagePicker$re.status;\n        if (status !== 'granted') {\n          console.log('Permission to access photo library denied');\n          return;\n        }\n        var result = yield ImagePicker.launchImageLibraryAsync({\n          mediaTypes: ImagePicker.MediaTypeOptions.Images,\n          allowsEditing: true,\n          aspect: [4, 3],\n          quality: 1\n        });\n        if (!result.canceled && ((_result$assets = result.assets) == null ? void 0 : _result$assets.length) > 0) {\n          setImage(result.assets[0].uri);\n        } else {\n          console.log('Image selection cancelled or no image selected');\n        }\n      } catch (error) {\n        console.log('Error selecting image:', error);\n      }\n    });\n    return function handleImagePicker() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(SafeAreaView, {\n    style: {\n      padding: 10\n    },\n    children: [_jsx(View, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        gap: 10,\n        padding: 10\n      },\n      children: _jsx(Image, {\n        style: {\n          width: 40,\n          height: 40,\n          borderRadius: 20,\n          resizeMode: \"contain\"\n        },\n        source: {\n          uri: \"https://cdn-icons-png.flaticon.com/128/149/149071.png\"\n        }\n      })\n    }), _jsx(View, {\n      style: {\n        flexDirection: \"row\",\n        marginLeft: 10\n      },\n      children: _jsx(TextInput, {\n        value: content,\n        onChangeText: function onChangeText(text) {\n          return setContent(text);\n        },\n        placeholderTextColor: \"black\",\n        placeholder: \"What's on your mind?\",\n        multiline: true\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: handleImagePicker,\n      children: _jsx(View, {\n        style: {\n          marginTop: 10,\n          alignItems: 'center'\n        },\n        children: _jsx(Text, {\n          children: \"Add Image\"\n        })\n      })\n    }), img && _jsx(Image, {\n      source: {\n        uri: img\n      },\n      style: {\n        width: 200,\n        height: 200,\n        marginTop: 10\n      }\n    }), _jsx(View, {\n      style: {\n        marginTop: 20\n      }\n    }), _jsx(Button, {\n      onPress: handlePostSubmit,\n      title: \"Post\"\n    })]\n  });\n};\nexport default ThreadsScreen;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","Text","View","Image","SafeAreaView","TextInput","Button","ActivityIndicator","TouchableOpacity","ImagePicker","axios","AsyncStorage","jwt_decode","jsx","_jsx","jsxs","_jsxs","ThreadsScreen","_useState","_useState2","_slicedToArray","content","setContent","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","img","setImage","handlePostSubmit","_ref","_asyncToGenerator","console","log","authToken","getItem","decodedToken","userId","sub","postData","FormData","append","uriParts","split","fileType","length","uri","name","type","response","post","headers","Authorization","data","error","message","apply","arguments","handleImagePicker","_ref2","_result$assets","_yield$ImagePicker$re","requestMediaLibraryPermissionsAsync","status","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","canceled","assets","style","padding","children","flexDirection","alignItems","gap","width","height","borderRadius","resizeMode","source","marginLeft","value","onChangeText","text","placeholderTextColor","placeholder","multiline","onPress","marginTop","title","styles","create"],"sources":["C:/Users/DELL/Documents/Confidentials/levelArtFrontend/screens/ThreadsScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, Text, View, Image, SafeAreaView, TextInput, Button, ActivityIndicator, TouchableOpacity } from \"react-native\";\r\nimport * as ImagePicker from 'expo-image-picker'; // Import Expo's ImagePicker module\r\nimport axios from \"axios\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst ThreadsScreen = () => {\r\n  const [content, setContent] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [img, setImage] = useState(null); // State to store selected image URI\r\n\r\n  useEffect(() => {\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const handlePostSubmit = async () => {\r\n    if (!content && !img) {\r\n      console.log(\"Text field or image is required\");\r\n      return;\r\n    }\r\n    console.log(\"Content:\", content);\r\n    console.log(\"Image URI:\", img);\r\n    try {\r\n      const authToken = await AsyncStorage.getItem(\"authToken\");\r\n      console.log(\"AuthToken:\", authToken); // Log authToken before sending the request\r\n      const decodedToken = jwt_decode(authToken);\r\n      const userId = decodedToken?.sub; // Extract userId from decoded token\r\n      const postData = new FormData();\r\n  \r\n      console.log(\"userIdFromThreadScreen:\", userId);\r\n      postData.append(\"text\", content); // Add text content to FormData\r\n      postData.append(\"postedBy\", userId); // Add postedBy (user ID) to FormData\r\n      if (img) {\r\n        const uriParts = img.split(\".\");\r\n        const fileType = uriParts[uriParts.length - 1];\r\n        postData.append(\"image\", {\r\n          uri: img,\r\n          name: `photo.${fileType}`,\r\n          type: `image/${fileType}`,\r\n        }); // Add image file to FormData\r\n      }\r\n\r\n      console.log(\"FormData:\", postData); // Log FormData before sending the request\r\n  \r\n      const response = await axios.post(\r\n        \"https://levelartbackend-production.up.railway.app/posts/create-post\",\r\n        postData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${authToken}`,\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n      );\r\n  \r\n      setContent(\"\");\r\n      setImage(null);\r\n      console.log(\"Post created successfully:\", response.data);\r\n    } catch (error) {\r\n      if (error.response) {\r\n        // If the error has a response property, log the error message from the server\r\n        console.log(\"Error creating post:\", error.response.data.error);\r\n      } else {\r\n        // Otherwise, log the general error message\r\n        console.log(\"Error creating post:\", error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleImagePicker = async () => {\r\n    try {\r\n      const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n      if (status !== 'granted') {\r\n        console.log('Permission to access photo library denied');\r\n        return;\r\n      }\r\n\r\n      const result = await ImagePicker.launchImageLibraryAsync({\r\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n        allowsEditing: true,\r\n        aspect: [4, 3],\r\n        quality: 1,\r\n      });\r\n\r\n      if (!result.canceled && result.assets?.length > 0) {\r\n        setImage(result.assets[0].uri);\r\n      } else {\r\n        console.log('Image selection cancelled or no image selected');\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.log('Error selecting image:', error);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <SafeAreaView style={{ padding: 10 }}>\r\n      <View\r\n        style={{\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          gap: 10,\r\n          padding: 10,\r\n        }}\r\n      >\r\n        <Image\r\n          style={{\r\n            width: 40,\r\n            height: 40,\r\n            borderRadius: 20,\r\n            resizeMode: \"contain\",\r\n          }}\r\n          source={{\r\n            uri: \"https://cdn-icons-png.flaticon.com/128/149/149071.png\",\r\n          }}\r\n        />\r\n      </View>\r\n\r\n      <View style={{ flexDirection: \"row\", marginLeft: 10 }}>\r\n        <TextInput\r\n          value={content}\r\n          onChangeText={(text) => setContent(text)}\r\n          placeholderTextColor={\"black\"}\r\n          placeholder=\"What's on your mind?\"\r\n          multiline\r\n        />\r\n      </View>\r\n\r\n      <TouchableOpacity onPress={handleImagePicker}>\r\n        <View style={{ marginTop: 10, alignItems: 'center' }}>\r\n          <Text>Add Image</Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n\r\n      {img && (\r\n        <Image\r\n          source={{ uri: img }}\r\n          style={{ width: 200, height: 200, marginTop: 10 }}\r\n        />\r\n      )}\r\n\r\n      <View style={{ marginTop: 20 }} />\r\n\r\n      <Button onPress={handlePostSubmit} title=\"Post\" />\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default ThreadsScreen;\r\n\r\nconst styles = StyleSheet.create({});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}