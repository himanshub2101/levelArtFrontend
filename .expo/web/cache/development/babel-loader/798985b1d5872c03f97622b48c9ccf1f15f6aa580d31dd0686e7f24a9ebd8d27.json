{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { UserType } from \"../UserContext\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport ImageScreen from \"./ImagesScreen\";\nimport TweetScreen from \"./TweetsScreen\";\nimport axios from \"axios\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createMaterialTopTabNavigator();\nvar ProfileScreen = function ProfileScreen() {\n  var navigation = useNavigation();\n  var _useContext = useContext(UserType),\n    userId = _useContext.userId,\n    setUserId = _useContext.setUserId;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    posts = _useState2[0],\n    setPosts = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    user = _useState4[0],\n    setUser = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    followers = _useState6[0],\n    setFollowers = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    followings = _useState8[0],\n    setFollowings = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    bio = _useState10[0],\n    setBio = _useState10[1];\n  useEffect(function () {\n    var fetchProfile = function () {\n      var _ref = _asyncToGenerator(function* (userId) {\n        try {\n          var authToken = yield AsyncStorage.getItem(\"authToken\");\n          var profileResponse = yield axios.get(`API_ENDPOINT_TO_FETCH_PROFILE/${userId}`, {\n            headers: {\n              Authorization: `Bearer ${authToken}`\n            }\n          });\n          var _profileResponse$data = profileResponse.data,\n            _user = _profileResponse$data.user,\n            _followers = _profileResponse$data.followers,\n            _followings = _profileResponse$data.followings,\n            _bio = _profileResponse$data.bio;\n          setUser(_user);\n          setFollowers((_followers == null ? void 0 : _followers.length) || 0);\n          setFollowings((_followings == null ? void 0 : _followings.length) || 0);\n          setBio(_bio || \"\");\n          var postsResponse = yield axios.get(`API_ENDPOINT_TO_FETCH_POSTS/${userId}`, {\n            headers: {\n              Authorization: `Bearer ${authToken}`\n            }\n          });\n          setPosts(postsResponse.data);\n        } catch (error) {\n          console.error(\"Error fetching profile:\", error);\n        }\n      });\n      return function fetchProfile(_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchProfile(userId);\n  }, [userId]);\n  var logout = function () {\n    var _ref2 = _asyncToGenerator(function* () {});\n    return function logout() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleSettingsPress = function handleSettingsPress() {\n    navigation.navigate('Settings');\n  };\n  var updateBio = function () {\n    var _ref3 = _asyncToGenerator(function* () {});\n    return function updateBio() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        padding: 10,\n        borderBottomWidth: 1,\n        borderBottomColor: \"#ccc\"\n      },\n      children: [_jsx(TouchableOpacity, {\n        onPress: handleSettingsPress,\n        children: _jsx(Icon, {\n          name: \"settings-outline\",\n          size: 30\n        })\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          alignItems: \"center\"\n        },\n        children: [_jsx(Image, {\n          style: {\n            width: 50,\n            height: 50,\n            borderRadius: 25,\n            marginRight: 10\n          },\n          source: {\n            uri: user.profilePhoto\n          }\n        }), _jsxs(View, {\n          children: [_jsx(Text, {\n            style: {\n              fontSize: 18,\n              fontWeight: \"bold\"\n            },\n            children: user.username\n          }), _jsxs(Text, {\n            children: [followers, \" Followers\"]\n          }), _jsxs(Text, {\n            children: [followings, \" Following\"]\n          })]\n        })]\n      }), _jsx(Button, {\n        title: \"Logout\",\n        onPress: logout\n      })]\n    }), _jsxs(Tab.Navigator, {\n      children: [_jsx(Tab.Screen, {\n        name: \"Images\",\n        component: function component() {\n          return _jsx(ImageScreen, {\n            posts: posts\n          });\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Tweets\",\n        component: function component() {\n          return _jsx(TweetScreen, {\n            posts: posts\n          });\n        }\n      })]\n    })]\n  });\n};\nexport default ProfileScreen;","map":{"version":3,"names":["React","useEffect","useState","useContext","View","Text","Button","Image","TouchableOpacity","useNavigation","UserType","Icon","createMaterialTopTabNavigator","ImageScreen","TweetScreen","axios","jsx","_jsx","jsxs","_jsxs","Tab","ProfileScreen","navigation","_useContext","userId","setUserId","_useState","_useState2","_slicedToArray","posts","setPosts","_useState3","_useState4","user","setUser","_useState5","_useState6","followers","setFollowers","_useState7","_useState8","followings","setFollowings","_useState9","_useState10","bio","setBio","fetchProfile","_ref","_asyncToGenerator","authToken","AsyncStorage","getItem","profileResponse","get","headers","Authorization","_profileResponse$data","data","length","postsResponse","error","console","_x","apply","arguments","logout","_ref2","handleSettingsPress","navigate","updateBio","_ref3","style","flex","children","flexDirection","justifyContent","alignItems","padding","borderBottomWidth","borderBottomColor","onPress","name","size","width","height","borderRadius","marginRight","source","uri","profilePhoto","fontSize","fontWeight","username","title","Navigator","Screen","component"],"sources":["C:/Users/DELL/Documents/Confidentials/levelArtFrontend/screens/ProfileScreen.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { View, Text, Button, Image, TouchableOpacity } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { UserType } from '../UserContext';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\r\nimport ImageScreen from './ImagesScreen';\r\nimport TweetScreen from './TweetsScreen';\r\nimport axios from \"axios\"; // Import axios for making API requests\r\n\r\nconst Tab = createMaterialTopTabNavigator();\r\n\r\nconst ProfileScreen = () => {\r\n  const navigation = useNavigation();\r\n  const { userId, setUserId } = useContext(UserType);\r\n  const [posts, setPosts] = useState([]); // Define state for posts data\r\n  const [user, setUser] = useState(\"\"); // Define state for user data\r\n  const [followers, setFollowers] = useState(0); // Define state for followers count\r\n  const [followings, setFollowings] = useState(0); // Define state for followings count\r\n  const [bio, setBio] = useState(\"\"); // Define state for bio\r\n\r\n  useEffect(() => {\r\n    // Fetch profile data when the component mounts\r\n    const fetchProfile = async (userId) => {\r\n      try {\r\n        // Make API request to fetch profile data\r\n        const authToken = await AsyncStorage.getItem(\"authToken\");\r\n        const profileResponse = await axios.get(`API_ENDPOINT_TO_FETCH_PROFILE/${userId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${authToken}`,\r\n          },\r\n        });\r\n        // Extract user, followers, followings, and bio from the response\r\n        const { user, followers, followings, bio } = profileResponse.data;\r\n        setUser(user);\r\n        setFollowers(followers?.length || 0);\r\n        setFollowings(followings?.length || 0);\r\n        setBio(bio || \"\");\r\n\r\n        // Fetch posts data\r\n        const postsResponse = await axios.get(`API_ENDPOINT_TO_FETCH_POSTS/${userId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${authToken}`,\r\n          },\r\n        });\r\n        setPosts(postsResponse.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching profile:\", error);\r\n      }\r\n    };\r\n\r\n    fetchProfile(userId); // Call the fetchProfile function\r\n  }, [userId]); // Add userId to the dependency array\r\n\r\n  const logout = async () => {\r\n    // Handle logout\r\n    // ...\r\n  };\r\n\r\n  const handleSettingsPress = () => {\r\n    navigation.navigate('Settings');\r\n  };\r\n\r\n  const updateBio = async () => {\r\n    // Update bio\r\n    // ...\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      {/* Profile Header */}\r\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\", alignItems: \"center\", padding: 10, borderBottomWidth: 1, borderBottomColor: \"#ccc\" }}>\r\n        <TouchableOpacity onPress={handleSettingsPress}>\r\n          <Icon name=\"settings-outline\" size={30} />\r\n        </TouchableOpacity>\r\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n          <Image\r\n            style={{ width: 50, height: 50, borderRadius: 25, marginRight: 10 }}\r\n            source={{ uri: user.profilePhoto }} // Replace user.profilePhoto with the actual URL of the profile photo\r\n          />\r\n          <View>\r\n            <Text style={{ fontSize: 18, fontWeight: \"bold\" }}>{user.username}</Text>\r\n            <Text>{followers} Followers</Text>\r\n            <Text>{followings} Following</Text>\r\n          </View>\r\n        </View>\r\n        <Button title=\"Logout\" onPress={logout} />\r\n      </View>\r\n      {/* Profile Content */}\r\n      <Tab.Navigator>\r\n        <Tab.Screen name=\"Images\" component={() => <ImageScreen posts={posts} />} />\r\n        <Tab.Screen name=\"Tweets\" component={() => <TweetScreen posts={posts} />} />\r\n      </Tab.Navigator>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}