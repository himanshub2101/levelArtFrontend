{"ast":null,"code":"import React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SettingsScreen = function SettingsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var handleThemeChange = function handleThemeChange() {\n    console.log(\"Theme changed\");\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Pressable, {\n        style: styles.themeIcon,\n        onPress: handleThemeChange,\n        children: _jsx(Icon, {\n          name: \"color-palette-outline\",\n          size: 30,\n          color: \"#333\"\n        })\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"Settings\"\n      })]\n    }), _jsxs(View, {\n      style: styles.options,\n      children: [_jsx(Pressable, {\n        style: styles.option,\n        onPress: function onPress() {\n          return navigation.navigate(\"AccountsCenter\");\n        },\n        children: _jsx(Text, {\n          children: \"Accounts Center\"\n        })\n      }), _jsx(Pressable, {\n        style: styles.option,\n        onPress: function onPress() {\n          return navigation.navigate(\"Notifications\");\n        },\n        children: _jsx(Text, {\n          children: \"Notifications\"\n        })\n      }), _jsx(Pressable, {\n        style: styles.option,\n        onPress: function onPress() {\n          return navigation.navigate(\"SecurityAccountAccess\");\n        },\n        children: _jsx(Text, {\n          children: \"Security & Account Access\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    padding: 20\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 20\n  },\n  themeIcon: {\n    marginRight: 10\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\"\n  },\n  options: {\n    marginTop: 10\n  },\n  option: {\n    paddingVertical: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: \"#ccc\"\n  }\n});\nexport default SettingsScreen;","map":{"version":3,"names":["React","StyleSheet","Text","View","Pressable","Icon","jsx","_jsx","jsxs","_jsxs","SettingsScreen","_ref","navigation","handleThemeChange","console","log","style","styles","container","children","header","themeIcon","onPress","name","size","color","title","options","option","navigate","create","flex","backgroundColor","padding","flexDirection","alignItems","marginBottom","marginRight","fontSize","fontWeight","marginTop","paddingVertical","borderBottomWidth","borderBottomColor"],"sources":["D:/LevelUp Technology/levelArtFrontend/screens/SettingsScreen.js"],"sourcesContent":["import React from \"react\";\nimport { StyleSheet, Text, View, Pressable } from \"react-native\";\nimport Icon from 'react-native-vector-icons/Ionicons';\n\nconst SettingsScreen = ({ navigation }) => {\n  // Function to handle theme change\n  const handleThemeChange = () => {\n    // Add logic to change the theme\n    console.log(\"Theme changed\");\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        {/* Theme change option */}\n        <Pressable style={styles.themeIcon} onPress={handleThemeChange}>\n          <Icon name=\"color-palette-outline\" size={30} color=\"#333\" />\n        </Pressable>\n        <Text style={styles.title}>Settings</Text>\n      </View>\n      <View style={styles.options}>\n        <Pressable style={styles.option} onPress={() => navigation.navigate(\"AccountsCenter\")}>\n          <Text>Accounts Center</Text>\n        </Pressable>\n        <Pressable style={styles.option} onPress={() => navigation.navigate(\"Notifications\")}>\n          <Text>Notifications</Text>\n        </Pressable>\n        <Pressable style={styles.option} onPress={() => navigation.navigate(\"SecurityAccountAccess\")}>\n          <Text>Security & Account Access</Text>\n        </Pressable>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    padding: 20,\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 20,\n  },\n  themeIcon: {\n    marginRight: 10,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n  },\n  options: {\n    marginTop: 10,\n  },\n  option: {\n    paddingVertical: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: \"#ccc\",\n  },\n});\n\nexport default SettingsScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}