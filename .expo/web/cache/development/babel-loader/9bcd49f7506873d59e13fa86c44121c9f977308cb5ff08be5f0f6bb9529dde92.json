{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ThreadsScreen = function ThreadsScreen() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    postedBy = _useState2[0],\n    setPostedBy = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    content = _useState4[0],\n    setContent = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setIsLoading = _useState6[1];\n  useEffect(function () {\n    var fetchUserId = function fetchUserId() {\n      try {\n        var storedUserId = AsyncStorage.getItem(\"userId\");\n        console.log(\"storedUserId:\", storedUserId);\n        if (storedUserId) {\n          setPostedBy(storedUserId);\n          setIsLoading(false);\n        } else {\n          console.log(\"User ID not found in AsyncStorage\");\n          setIsLoading(false);\n        }\n      } catch (error) {\n        console.error(\"Error fetching userId from AsyncStorage:\", error);\n        setIsLoading(false);\n      }\n    };\n    fetchUserId();\n  }, []);\n  var handlePostSubmit = function handlePostSubmit() {\n    if (!postedBy || !content) {\n      console.log(\"Postedby and text fields are required\");\n      return;\n    }\n    var postData = {\n      postedBy: postedBy,\n      content: content\n    };\n    AsyncStorage.getItem(\"authToken\").then(function (token) {\n      if (token) {\n        axios.post(\"https://levelartbackend-production.up.railway.app/posts/create-post\", postData, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).then(function (response) {\n          setContent(\"\");\n        }).catch(function (error) {\n          console.log(\"error creating post\", error);\n        });\n      } else {\n        console.log(\"No token found in AsyncStorage\");\n      }\n    });\n  };\n  if (isLoading) {\n    return _jsx(SafeAreaView, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"black\"\n      })\n    });\n  }\n  return _jsxs(SafeAreaView, {\n    style: {\n      padding: 10\n    },\n    children: [_jsx(View, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        gap: 10,\n        padding: 10\n      },\n      children: _jsx(Image, {\n        style: {\n          width: 40,\n          height: 40,\n          borderRadius: 20,\n          resizeMode: \"contain\"\n        },\n        source: {\n          uri: \"https://cdn-icons-png.flaticon.com/128/149/149071.png\"\n        }\n      })\n    }), _jsx(View, {\n      style: {\n        flexDirection: \"row\",\n        marginLeft: 10\n      },\n      children: _jsx(TextInput, {\n        value: content,\n        onChangeText: function onChangeText(text) {\n          return setContent(text);\n        },\n        placeholderTextColor: \"black\",\n        placeholder: \"Type your message...\",\n        multiline: true\n      })\n    }), _jsx(View, {\n      style: {\n        marginTop: 20\n      }\n    }), _jsx(Button, {\n      onPress: handlePostSubmit,\n      title: \"Share Post\"\n    })]\n  });\n};\nexport default ThreadsScreen;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","Text","View","Image","SafeAreaView","TextInput","Button","ActivityIndicator","axios","AsyncStorage","jsx","_jsx","jsxs","_jsxs","ThreadsScreen","_useState","_useState2","_slicedToArray","postedBy","setPostedBy","_useState3","_useState4","content","setContent","_useState5","_useState6","isLoading","setIsLoading","fetchUserId","storedUserId","getItem","console","log","error","handlePostSubmit","postData","then","token","post","headers","Authorization","response","catch","style","flex","justifyContent","alignItems","children","size","color","padding","flexDirection","gap","width","height","borderRadius","resizeMode","source","uri","marginLeft","value","onChangeText","text","placeholderTextColor","placeholder","multiline","marginTop","onPress","title","styles","create"],"sources":["C:/himanshu/LevelArtFrontend/screens/ThreadsScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, Text, View, Image, SafeAreaView, TextInput, Button, ActivityIndicator } from \"react-native\";\r\nimport axios from \"axios\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nconst ThreadsScreen = () => {\r\n  const [postedBy, setPostedBy] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchUserId =  () => {\r\n      try {\r\n        const storedUserId =  AsyncStorage.getItem(\"userId\");\r\n        console.log(\"storedUserId:\", storedUserId); // Log the stored user ID\r\n        if (storedUserId) {\r\n          setPostedBy(storedUserId);\r\n          setIsLoading(false); // Set loading state to false after fetching user ID\r\n        } else {\r\n          console.log(\"User ID not found in AsyncStorage\");\r\n          setIsLoading(false); // Set loading state to false even if user ID not found\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching userId from AsyncStorage:\", error);\r\n        setIsLoading(false); // Set loading state to false in case of error\r\n      }\r\n    };\r\n  \r\n    fetchUserId();\r\n  }, []);\r\n  \r\n  const handlePostSubmit = () => {\r\n    if (!postedBy || !content) {\r\n      console.log(\"Postedby and text fields are required\");\r\n      return;\r\n    }\r\n  \r\n    const postData = {\r\n      postedBy,\r\n      content,\r\n    };\r\n\r\n    // Retrieve the token from AsyncStorage\r\n    AsyncStorage.getItem(\"authToken\").then((token) => {\r\n      if (token) {\r\n        // Include the token in the request header\r\n        axios.post(\"https://levelartbackend-production.up.railway.app/posts/create-post\", postData, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n          .then((response) => {\r\n            setContent(\"\");\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"error creating post\", error);\r\n          });\r\n      } else {\r\n        console.log(\"No token found in AsyncStorage\");\r\n      }\r\n    });\r\n  };\r\n  \r\n  if (isLoading) {\r\n    return (\r\n      <SafeAreaView style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n        <ActivityIndicator size=\"large\" color=\"black\" />\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={{ padding: 10 }}>\r\n      <View\r\n        style={{\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          gap: 10,\r\n          padding: 10,\r\n        }}\r\n      >\r\n        <Image\r\n          style={{\r\n            width: 40,\r\n            height: 40,\r\n            borderRadius: 20,\r\n            resizeMode: \"contain\",\r\n          }}\r\n          source={{\r\n            uri: \"https://cdn-icons-png.flaticon.com/128/149/149071.png\",\r\n          }}\r\n        />\r\n      </View>\r\n\r\n      <View style={{ flexDirection: \"row\", marginLeft: 10 }}>\r\n        <TextInput\r\n          value={content}\r\n          onChangeText={(text) => setContent(text)}\r\n          placeholderTextColor={\"black\"}\r\n          placeholder=\"Type your message...\"\r\n          multiline\r\n        />\r\n      </View>\r\n\r\n      <View style={{ marginTop: 20 }} />\r\n\r\n      <Button onPress={handlePostSubmit} title=\"Share Post\" />\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default ThreadsScreen;\r\n\r\nconst styles = StyleSheet.create({});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}