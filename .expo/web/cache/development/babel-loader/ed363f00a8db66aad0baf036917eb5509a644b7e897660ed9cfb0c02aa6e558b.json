{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as ImagePicker from 'expo-image-picker';\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport jwt_decode from \"jwt-decode\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ThreadsScreen = function ThreadsScreen() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    postedBy = _useState2[0],\n    setPostedBy = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    content = _useState4[0],\n    setContent = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setIsLoading = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    image = _useState8[0],\n    setImage = _useState8[1];\n  useEffect(function () {\n    var fetchUserId = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var tokenInThreadScreen = yield AsyncStorage.getItem(\"authToken\");\n          var decodedToken = jwt_decode(tokenInThreadScreen);\n          var userId = decodedToken == null ? void 0 : decodedToken.sub;\n          console.log(\"userIdFromThreadScreen:\", userId);\n          if (userId) {\n            setPostedBy(userId);\n          } else {\n            console.log(\"User ID not found in AsyncStorage\");\n          }\n        } catch (error) {\n          console.error(\"Error fetching userId from AsyncStorage:\", error);\n        } finally {\n          setIsLoading(false);\n        }\n      });\n      return function fetchUserId() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchUserId();\n  }, []);\n  var handlePostSubmit = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!content && !image) {\n        console.log(\"Text field or image is required\");\n        return;\n      }\n      try {\n        var authToken = yield AsyncStorage.getItem(\"authToken\");\n        var postData = {\n          postedBy: postedBy,\n          text: content,\n          image: image\n        };\n        var response = yield axios.post(\"https://levelartbackend-production.up.railway.app/posts/create-post\", postData, {\n          headers: {\n            Authorization: `Bearer ${authToken}`\n          }\n        });\n        setContent(\"\");\n        setImage(null);\n        console.log(\"Post created successfully:\", response.data);\n      } catch (error) {\n        console.log(\"Error creating post:\", error);\n      }\n    });\n    return function handlePostSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleImagePicker = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var _yield$ImagePicker$la = yield ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [4, 3],\n            quality: 1\n          }),\n          cancelled = _yield$ImagePicker$la.cancelled,\n          uri = _yield$ImagePicker$la.uri;\n        if (!cancelled) {\n          setImage(uri);\n        }\n      } catch (error) {\n        console.log('Error selecting image:', error);\n      }\n    });\n    return function handleImagePicker() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  if (isLoading) {\n    return _jsx(SafeAreaView, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"black\"\n      })\n    });\n  }\n  return _jsxs(SafeAreaView, {\n    style: {\n      padding: 10\n    },\n    children: [_jsx(View, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        gap: 10,\n        padding: 10\n      },\n      children: _jsx(Image, {\n        style: {\n          width: 40,\n          height: 40,\n          borderRadius: 20,\n          resizeMode: \"contain\"\n        },\n        source: {\n          uri: \"https://cdn-icons-png.flaticon.com/128/149/149071.png\"\n        }\n      })\n    }), _jsx(View, {\n      style: {\n        flexDirection: \"row\",\n        marginLeft: 10\n      },\n      children: _jsx(TextInput, {\n        value: content,\n        onChangeText: function onChangeText(text) {\n          return setContent(text);\n        },\n        placeholderTextColor: \"black\",\n        placeholder: \"Type your message...\",\n        multiline: true\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: handleImagePicker,\n      children: _jsx(View, {\n        style: {\n          marginTop: 10,\n          alignItems: 'center'\n        },\n        children: _jsx(Text, {\n          children: \"Add Image\"\n        })\n      })\n    }), image && _jsx(Image, {\n      source: {\n        uri: image\n      },\n      style: {\n        width: 200,\n        height: 200,\n        marginTop: 10\n      }\n    }), _jsx(View, {\n      style: {\n        marginTop: 20\n      }\n    }), _jsx(Button, {\n      onPress: handlePostSubmit,\n      title: \"Share Post\"\n    })]\n  });\n};\nexport default ThreadsScreen;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","Text","View","Image","SafeAreaView","TextInput","Button","ActivityIndicator","TouchableOpacity","ImagePicker","axios","AsyncStorage","jwt_decode","jsx","_jsx","jsxs","_jsxs","ThreadsScreen","_useState","_useState2","_slicedToArray","postedBy","setPostedBy","_useState3","_useState4","content","setContent","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","image","setImage","fetchUserId","_ref","_asyncToGenerator","tokenInThreadScreen","getItem","decodedToken","userId","sub","console","log","error","apply","arguments","handlePostSubmit","_ref2","authToken","postData","text","response","post","headers","Authorization","data","handleImagePicker","_ref3","_yield$ImagePicker$la","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","cancelled","uri","style","flex","justifyContent","alignItems","children","size","color","padding","flexDirection","gap","width","height","borderRadius","resizeMode","source","marginLeft","value","onChangeText","placeholderTextColor","placeholder","multiline","onPress","marginTop","title","styles","create"],"sources":["C:/himanshu/LevelArtFrontend/screens/ThreadsScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, Text, View, Image, SafeAreaView, TextInput, Button, ActivityIndicator, TouchableOpacity } from \"react-native\";\r\nimport * as ImagePicker from 'expo-image-picker'; // Import Expo's ImagePicker module\r\nimport axios from \"axios\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst ThreadsScreen = () => {\r\n  const [postedBy, setPostedBy] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [image, setImage] = useState(null); // State to store selected image URI\r\n\r\n  useEffect(() => {\r\n    const fetchUserId = async () => {\r\n      try {\r\n        const tokenInThreadScreen = await AsyncStorage.getItem(\"authToken\");\r\n        const decodedToken = jwt_decode(tokenInThreadScreen);\r\n        const userId = decodedToken?.sub; // Extract userId from decoded token\r\n        console.log(\"userIdFromThreadScreen:\", userId);\r\n        if (userId) {\r\n          setPostedBy(userId);\r\n        } else {\r\n          console.log(\"User ID not found in AsyncStorage\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching userId from AsyncStorage:\", error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchUserId();\r\n  }, []);\r\n  \r\n  const handlePostSubmit = async () => {\r\n    if (!content && !image) {\r\n      console.log(\"Text field or image is required\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const authToken = await AsyncStorage.getItem(\"authToken\");\r\n      const postData = {\r\n        postedBy: postedBy, // Use postedBy state value\r\n        text: content,\r\n        image: image // Include the image URI in the post data\r\n      };\r\n  \r\n      const response = await axios.post(\"https://levelartbackend-production.up.railway.app/posts/create-post\", postData, {\r\n        headers: {\r\n          Authorization: `Bearer ${authToken}`,\r\n        },\r\n      });\r\n  \r\n      setContent(\"\");\r\n      setImage(null);\r\n      console.log(\"Post created successfully:\", response.data);\r\n    } catch (error) {\r\n      console.log(\"Error creating post:\", error);\r\n    }\r\n  };\r\n\r\n  const handleImagePicker = async () => {\r\n    try {\r\n      const { cancelled, uri } = await ImagePicker.launchImageLibraryAsync({\r\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n        allowsEditing: true,\r\n        aspect: [4, 3],\r\n        quality: 1,\r\n      });\r\n      if (!cancelled) {\r\n        setImage(uri);\r\n      }\r\n    } catch (error) {\r\n      console.log('Error selecting image:', error);\r\n    }\r\n  };\r\n  \r\n  if (isLoading) {\r\n    return (\r\n      <SafeAreaView style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n        <ActivityIndicator size=\"large\" color=\"black\" />\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={{ padding: 10 }}>\r\n      <View\r\n        style={{\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          gap: 10,\r\n          padding: 10,\r\n        }}\r\n      >\r\n        <Image\r\n          style={{\r\n            width: 40,\r\n            height: 40,\r\n            borderRadius: 20,\r\n            resizeMode: \"contain\",\r\n          }}\r\n          source={{\r\n            uri: \"https://cdn-icons-png.flaticon.com/128/149/149071.png\",\r\n          }}\r\n        />\r\n      </View>\r\n\r\n      <View style={{ flexDirection: \"row\", marginLeft: 10 }}>\r\n        <TextInput\r\n          value={content}\r\n          onChangeText={(text) => setContent(text)}\r\n          placeholderTextColor={\"black\"}\r\n          placeholder=\"Type your message...\"\r\n          multiline\r\n        />\r\n      </View>\r\n\r\n      <TouchableOpacity onPress={handleImagePicker}>\r\n        <View style={{ marginTop: 10, alignItems: 'center' }}>\r\n          <Text>Add Image</Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n\r\n      {image && (\r\n        <Image\r\n          source={{ uri: image }}\r\n          style={{ width: 200, height: 200, marginTop: 10 }}\r\n        />\r\n      )}\r\n\r\n      <View style={{ marginTop: 20 }} />\r\n\r\n      <Button onPress={handlePostSubmit} title=\"Share Post\" />\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default ThreadsScreen;\r\n\r\nconst styles = StyleSheet.create({});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}