{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ArtistForm = function ArtistForm() {\n  var _useState = useState(1),\n    _useState2 = _slicedToArray(_useState, 2),\n    page = _useState2[0],\n    setPage = _useState2[1];\n  var nextPage = function nextPage() {\n    setPage(page + 1);\n  };\n  var previousPage = function previousPage() {\n    setPage(page - 1);\n  };\n  var renderInputs = function renderInputs() {\n    switch (page) {\n      case 1:\n        return _jsx(_Fragment, {});\n      case 2:\n        return _jsx(_Fragment, {});\n      case 5:\n        return _jsx(_Fragment, {\n          children: _jsx(TouchableOpacity, {\n            onPress: previousPage,\n            style: styles.backIcon,\n            children: _jsx(Ionicons, {\n              name: \"arrow-back\",\n              size: 24,\n              color: \"black\"\n            })\n          })\n        });\n      default:\n        return null;\n    }\n  };\n  return _jsxs(ScrollView, {\n    contentContainerStyle: styles.container,\n    children: [renderInputs(), page < 5 && _jsx(Button, {\n      title: \"Next Page\",\n      onPress: nextPage\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: 'gray',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  },\n  backIcon: {\n    position: 'absolute',\n    top: 20,\n    left: 20\n  }\n});\nexport default ArtistForm;","map":{"version":3,"names":["React","useState","View","TextInput","StyleSheet","Button","ScrollView","TouchableOpacity","Ionicons","Fragment","_Fragment","jsx","_jsx","jsxs","_jsxs","ArtistForm","_useState","_useState2","_slicedToArray","page","setPage","nextPage","previousPage","renderInputs","children","onPress","style","styles","backIcon","name","size","color","contentContainerStyle","container","title","create","padding","input","borderWidth","borderColor","borderRadius","marginBottom","position","top","left"],"sources":["C:/Users/VT/Documents/confidential/native project/levelArtFrontend/components/forms/artist.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TextInput, StyleSheet, Button, ScrollView, TouchableOpacity } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons'; // Import Ionicons component\r\n\r\nconst ArtistForm = () => {\r\n  const [page, setPage] = useState(1);\r\n\r\n  const nextPage = () => {\r\n    setPage(page + 1);\r\n  };\r\n\r\n  const previousPage = () => {\r\n    setPage(page - 1);\r\n  };\r\n\r\n  const renderInputs = () => {\r\n    switch (page) {\r\n      case 1:\r\n        return (\r\n          <>\r\n            {/* Inputs for page 1 */}\r\n            \r\n          </>\r\n        );\r\n      case 2:\r\n        return (\r\n          <>\r\n            {/* Inputs for page 2 */}\r\n          </>\r\n        );\r\n      // Add cases for other pages\r\n\r\n      case 5:\r\n        return (\r\n          <>\r\n            {/* Inputs for page 5 */}\r\n            <TouchableOpacity onPress={previousPage} style={styles.backIcon}>\r\n              <Ionicons name=\"arrow-back\" size={24} color=\"black\" />\r\n            </TouchableOpacity>\r\n            {/* Other inputs */}\r\n          </>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={styles.container}>\r\n      {renderInputs()}\r\n      {page < 5 && <Button title=\"Next Page\" onPress={nextPage} />}\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 20,\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: 'gray',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  },\r\n  backIcon: {\r\n    position: 'absolute',\r\n    top: 20,\r\n    left: 20,\r\n  },\r\n});\r\n\r\nexport default ArtistForm;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAExC,SAASC,QAAQ,QAAQ,oBAAoB;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAE9C,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EACvB,IAAAC,SAAA,GAAwBf,QAAQ,CAAC,CAAC,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5BG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EAEpB,IAAMI,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;IACrBD,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;EACnB,CAAC;EAED,IAAMG,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzBF,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;EACnB,CAAC;EAED,IAAMI,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzB,QAAQJ,IAAI;MACV,KAAK,CAAC;QACJ,OACEP,IAAA,CAAAF,SAAA,IAGE,CAAC;MAEP,KAAK,CAAC;QACJ,OACEE,IAAA,CAAAF,SAAA,IAEE,CAAC;MAIP,KAAK,CAAC;QACJ,OACEE,IAAA,CAAAF,SAAA;UAAAc,QAAA,EAEEZ,IAAA,CAACL,gBAAgB;YAACkB,OAAO,EAAEH,YAAa;YAACI,KAAK,EAAEC,MAAM,CAACC,QAAS;YAAAJ,QAAA,EAC9DZ,IAAA,CAACJ,QAAQ;cAACqB,IAAI,EAAC,YAAY;cAACC,IAAI,EAAE,EAAG;cAACC,KAAK,EAAC;YAAO,CAAE;UAAC,CACtC;QAAC,CAEnB,CAAC;MAEP;QACE,OAAO,IAAI;IACf;EACF,CAAC;EAED,OACEjB,KAAA,CAACR,UAAU;IAAC0B,qBAAqB,EAAEL,MAAM,CAACM,SAAU;IAAAT,QAAA,GACjDD,YAAY,CAAC,CAAC,EACdJ,IAAI,GAAG,CAAC,IAAIP,IAAA,CAACP,MAAM;MAAC6B,KAAK,EAAC,WAAW;MAACT,OAAO,EAAEJ;IAAS,CAAE,CAAC;EAAA,CAClD,CAAC;AAEjB,CAAC;AAED,IAAMM,MAAM,GAAGvB,UAAU,CAAC+B,MAAM,CAAC;EAC/BF,SAAS,EAAE;IACTG,OAAO,EAAE;EACX,CAAC;EACDC,KAAK,EAAE;IACLC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE,CAAC;IACfJ,OAAO,EAAE,EAAE;IACXK,YAAY,EAAE;EAChB,CAAC;EACDb,QAAQ,EAAE;IACRc,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,EAAE;IACPC,IAAI,EAAE;EACR;AACF,CAAC,CAAC;AAEF,eAAe7B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}