{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ForYouScreen = function ForYouScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    forYouPosts = _useState2[0],\n    setForYouPosts = _useState2[1];\n  useEffect(function () {}, []);\n  return _jsx(View, {\n    children: _jsx(Text, {\n      children: \"For You Screen\"\n    })\n  });\n};\nexport default ForYouScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","jsx","_jsx","ForYouScreen","_useState","_useState2","_slicedToArray","forYouPosts","setForYouPosts","children"],"sources":["C:/Users/DELL/Documents/Confidentials/levelArtFrontend/screens/ForYouScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text } from 'react-native';\r\n\r\nconst ForYouScreen = () => {\r\n  // State to store posts for the \"For You\" tab\r\n  const [forYouPosts, setForYouPosts] = useState([]);\r\n\r\n  // Fetch posts relevant to the \"For You\" tab\r\n  useEffect(() => {\r\n    // Implement your logic to fetch posts for the \"For You\" tab\r\n  }, []);\r\n\r\n  return (\r\n    <View>\r\n      <Text>For You Screen</Text>\r\n      {/* Display posts fetched for the \"For You\" tab */}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ForYouScreen;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAGnD,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EAEzB,IAAAC,SAAA,GAAsCN,QAAQ,CAAC,EAAE,CAAC;IAAAO,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3CG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAGlCR,SAAS,CAAC,YAAM,CAEhB,CAAC,EAAE,EAAE,CAAC;EAEN,OACEK,IAAA,CAACH,IAAI;IAAAU,QAAA,EACHP,IAAA,CAACF,IAAI;MAAAS,QAAA,EAAC;IAAc,CAAM;EAAC,CAEvB,CAAC;AAEX,CAAC;AAED,eAAeN,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}