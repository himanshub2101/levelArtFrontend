{"ast":null,"code":"","map":{"version":3,"names":[],"sources":["C:/Users/VT/Documents/Confidentials/Native Projects/levelArtFrontend/screens/SearchScreen.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { View, Text, TextInput, FlatList, StyleSheet, TouchableOpacity, Animated, Image } from 'react-native';\r\n// import { Feather } from '@expo/vector-icons';\r\n// import axios from 'axios';\r\n// import { useNavigation } from '@react-navigation/native'; // Import useNavigation hook\r\n\r\n// const SearchScreen = () => {\r\n//   const navigation = useNavigation(); // Use useNavigation hook to get access to navigation prop\r\n\r\n//   const [searchQuery, setSearchQuery] = useState('');\r\n//   const [searchResults, setSearchResults] = useState([]);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [fadeAnim] = useState(new Animated.Value(0));\r\n\r\n//   useEffect(() => {\r\n//     Animated.timing(\r\n//       fadeAnim,\r\n//       {\r\n//         toValue: 1,\r\n//         duration: 1000,\r\n//         useNativeDriver: true,\r\n//       }\r\n//     ).start();\r\n//   }, [searchResults]);\r\n\r\n//   const handleSearch = async () => {\r\n//     try {\r\n//       setLoading(true);\r\n//       const response = await axios.get(`https://levelart.up.railway.app/search/user?username=${searchQuery}`);\r\n//       setSearchResults(response.data.data);\r\n//     } catch (error) {\r\n//       console.error('Error searching:', error.message);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <View style={styles.container}>\r\n//       <View style={styles.inputContainer}>\r\n//         <TextInput\r\n//           style={styles.input}\r\n//           placeholder=\"Search\"\r\n//           value={searchQuery}\r\n//           onChangeText={setSearchQuery}\r\n//           onSubmitEditing={handleSearch}\r\n//         />\r\n//         <TouchableOpacity onPress={handleSearch} style={styles.searchIconContainer}>\r\n//           <Feather name=\"search\" size={20} color=\"black\" />\r\n//         </TouchableOpacity>\r\n//       </View>\r\n//       {loading ? (\r\n//         <Text style={styles.loadingText}>Loading...</Text>\r\n//       ) : (\r\n//         <FlatList\r\n//           data={searchResults}\r\n//           renderItem={({ item }) => (\r\n//             <Animated.View style={{ ...styles.resultItem, opacity: fadeAnim }}>\r\n//               <TouchableOpacity\r\n//                 onPress={() => navigation.navigate('Profile', { user: item.username })} // Navigate to Profile screen with user data\r\n//                 style={styles.profileContainer}\r\n//               >\r\n//                 <Image\r\n//                   source={{ uri: item.profilePic }}\r\n//                   style={styles.profilePic}\r\n//                   onError={() => console.log('Error loading profile picture', item)}\r\n//                 />\r\n//                 <View style={styles.userInfo}>\r\n//                   <Text style={styles.username}>{item.username}</Text>\r\n//                   <Text style={styles.bio}>{item.bio}</Text>\r\n//                 </View>\r\n//               </TouchableOpacity>\r\n//             </Animated.View>\r\n//           )}\r\n//           keyExtractor={(item) => item._id.toString()}\r\n//         />\r\n//       )}\r\n//     </View>\r\n//   );\r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     paddingHorizontal: 20,\r\n//     paddingTop: 65,\r\n//     backgroundColor: 'white',\r\n//   },\r\n//   inputContainer: {\r\n//     flexDirection: 'row',\r\n//     alignItems: 'center',\r\n//     borderWidth: 2,\r\n//     borderColor: 'gray',\r\n//     borderRadius: 25,\r\n//     paddingHorizontal: 15,\r\n//     marginBottom: 10,\r\n//   },\r\n//   input: {\r\n//     flex: 1,\r\n//     fontSize: 16,\r\n//     paddingVertical: 10,\r\n//     // backgroundColor: '#fafafa',\r\n//   },\r\n//   searchIconContainer: {\r\n//     marginLeft: 10,\r\n//   },\r\n//   loadingText: {\r\n//     textAlign: 'center',\r\n//     marginTop: 20,\r\n//     fontSize: 16,\r\n//     color: 'black',\r\n//   },\r\n//   resultItem: {\r\n//     marginBottom: 10,\r\n//     paddingVertical: 15,\r\n//     paddingHorizontal: 20,\r\n//     borderWidth: 1,\r\n//     borderColor: 'lightgray',\r\n//     borderRadius: 25,\r\n//     //borderRadius: 50,\r\n//     backgroundColor: 'white',\r\n//     elevation: 3,\r\n//   },\r\n//   profileContainer: {\r\n//     flexDirection: 'row',\r\n//     alignItems: 'center',\r\n//   },\r\n//   profilePic: {\r\n//     width: 50,\r\n//     height: 50,\r\n//     borderRadius: 25,\r\n//     marginRight: 10,\r\n//   },\r\n//   userInfo: {\r\n//     flex: 1,\r\n//   },\r\n//   username: {\r\n//     fontWeight: 'bold',\r\n//     fontSize: 18,\r\n//   },\r\n//   bio: {\r\n//     fontSize: 14,\r\n//     color: 'gray',\r\n//   },\r\n// });\r\n\r\n// export default SearchScreen;\r\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}