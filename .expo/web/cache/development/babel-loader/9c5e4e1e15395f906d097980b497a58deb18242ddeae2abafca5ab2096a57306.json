{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { UserType } from \"../UserContext\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport ImageScreen from \"./ImagesScreen\";\nimport TweetScreen from \"./TweetsScreen\";\nimport axios from \"axios\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createMaterialTopTabNavigator();\nvar ProfileScreen = function ProfileScreen() {\n  var navigation = useNavigation();\n  var _useContext = useContext(UserType),\n    userId = _useContext.userId,\n    setUserId = _useContext.setUserId;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    posts = _useState2[0],\n    setPosts = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    user = _useState4[0],\n    setUser = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    followers = _useState6[0],\n    setFollowers = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    followings = _useState8[0],\n    setFollowings = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    bio = _useState10[0],\n    setBio = _useState10[1];\n  useEffect(function () {\n    var fetchProfile = function () {\n      var _ref = _asyncToGenerator(function* (userId) {\n        try {\n          var authToken = yield AsyncStorage.getItem(\"authToken\");\n          var profileResponse = yield axios.get(`https://levelart.up.railway.app/followers/follow/${userId}`, {\n            headers: {\n              Authorization: `Bearer ${authToken}`\n            }\n          });\n          var _profileResponse$data = profileResponse.data,\n            _user = _profileResponse$data.user,\n            _followers = _profileResponse$data.followers,\n            _followings = _profileResponse$data.followings,\n            _bio = _profileResponse$data.bio;\n          setUser(_user);\n          setFollowers((_followers == null ? void 0 : _followers.length) || 0);\n          setFollowings((_followings == null ? void 0 : _followings.length) || 0);\n          setBio(_bio || \"\");\n          var postsResponse = yield axios.get(`API_ENDPOINT_TO_FETCH_POSTS/${userId}`, {\n            headers: {\n              Authorization: `Bearer ${authToken}`\n            }\n          });\n          setPosts(postsResponse.data);\n        } catch (error) {\n          console.error(\"Error fetching profile:\", error);\n        }\n      });\n      return function fetchProfile(_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchProfile(userId);\n  }, [userId]);\n  var logout = function () {\n    var _ref2 = _asyncToGenerator(function* () {});\n    return function logout() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleSettingsPress = function handleSettingsPress() {\n    navigation.navigate('Settings');\n  };\n  var updateBio = function () {\n    var _ref3 = _asyncToGenerator(function* () {});\n    return function updateBio() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(TouchableOpacity, {\n        onPress: handleSettingsPress,\n        children: _jsx(Icon, {\n          name: \"settings-outline\",\n          size: 30\n        })\n      }), _jsxs(View, {\n        style: styles.userInfo,\n        children: [_jsx(Image, {\n          style: styles.profileImage,\n          source: {\n            uri: user.profilePhoto\n          }\n        }), _jsxs(View, {\n          style: styles.userDetails,\n          children: [_jsx(Text, {\n            style: styles.username,\n            children: user.username\n          }), _jsxs(Text, {\n            style: styles.followers,\n            children: [followers, \" Followers\"]\n          }), _jsxs(Text, {\n            style: styles.following,\n            children: [followings, \" Following\"]\n          })]\n        })]\n      }), _jsx(Button, {\n        title: \"Logout\",\n        onPress: logout\n      })]\n    }), _jsxs(Tab.Navigator, {\n      children: [_jsx(Tab.Screen, {\n        name: \"Images\",\n        component: function component() {\n          return _jsx(ImageScreen, {\n            posts: posts\n          });\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Tweets\",\n        component: function component() {\n          return _jsx(TweetScreen, {\n            posts: posts\n          });\n        }\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  header: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: \"#ccc\"\n  },\n  userInfo: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  profileImage: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    marginRight: 10\n  },\n  userDetails: {\n    justifyContent: \"center\"\n  },\n  username: {\n    fontSize: 18,\n    fontWeight: \"bold\"\n  },\n  followers: {\n    color: \"gray\"\n  },\n  following: {\n    color: \"gray\"\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"names":["React","useEffect","useState","useContext","View","Text","Button","Image","TouchableOpacity","StyleSheet","useNavigation","UserType","Icon","createMaterialTopTabNavigator","ImageScreen","TweetScreen","axios","AsyncStorage","jsx","_jsx","jsxs","_jsxs","Tab","ProfileScreen","navigation","_useContext","userId","setUserId","_useState","_useState2","_slicedToArray","posts","setPosts","_useState3","_useState4","user","setUser","_useState5","_useState6","followers","setFollowers","_useState7","_useState8","followings","setFollowings","_useState9","_useState10","bio","setBio","fetchProfile","_ref","_asyncToGenerator","authToken","getItem","profileResponse","get","headers","Authorization","_profileResponse$data","data","length","postsResponse","error","console","_x","apply","arguments","logout","_ref2","handleSettingsPress","navigate","updateBio","_ref3","style","styles","container","children","header","onPress","name","size","userInfo","profileImage","source","uri","profilePhoto","userDetails","username","following","title","Navigator","Screen","component","create","flex","flexDirection","justifyContent","alignItems","padding","borderBottomWidth","borderBottomColor","width","height","borderRadius","marginRight","fontSize","fontWeight","color"],"sources":["C:/Users/DELL/Documents/Confidentials/levelArtFrontend/screens/ProfileScreen.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { View, Text, Button, Image, TouchableOpacity, StyleSheet } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { UserType } from '../UserContext';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\r\nimport ImageScreen from './ImagesScreen';\r\nimport TweetScreen from './TweetsScreen';\r\nimport axios from \"axios\"; // Import axios for making API requests\r\nimport AsyncStorage from '@react-native-async-storage/async-storage'; // Import AsyncStorage\r\n\r\nconst Tab = createMaterialTopTabNavigator();\r\n\r\nconst ProfileScreen = () => {\r\n  const navigation = useNavigation();\r\n  const { userId, setUserId } = useContext(UserType);\r\n  const [posts, setPosts] = useState([]); // Define state for posts data\r\n  const [user, setUser] = useState(\"\"); // Define state for user data\r\n  const [followers, setFollowers] = useState(0); // Define state for followers count\r\n  const [followings, setFollowings] = useState(0); // Define state for followings count\r\n  const [bio, setBio] = useState(\"\"); // Define state for bio\r\n\r\n  useEffect(() => {\r\n    // Fetch profile data when the component mounts\r\n    const fetchProfile = async (userId) => {\r\n      try {\r\n        // Make API request to fetch profile data\r\n        const authToken = await AsyncStorage.getItem(\"authToken\");\r\n        const profileResponse = await axios.get(`https://levelart.up.railway.app/followers/follow/${userId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${authToken}`,\r\n          },\r\n        });\r\n        // Extract user, followers, followings, and bio from the response\r\n        const { user, followers, followings, bio } = profileResponse.data;\r\n        setUser(user);\r\n        setFollowers(followers?.length || 0);\r\n        setFollowings(followings?.length || 0);\r\n        setBio(bio || \"\");\r\n\r\n        // Fetch posts data\r\n        const postsResponse = await axios.get(`API_ENDPOINT_TO_FETCH_POSTS/${userId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${authToken}`,\r\n          },\r\n        });\r\n        setPosts(postsResponse.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching profile:\", error);\r\n      }\r\n    };\r\n\r\n    fetchProfile(userId); // Call the fetchProfile function\r\n  }, [userId]); // Add userId to the dependency array\r\n\r\n  const logout = async () => {\r\n    // Handle logout\r\n    // ...\r\n  };\r\n\r\n  const handleSettingsPress = () => {\r\n    navigation.navigate('Settings');\r\n  };\r\n\r\n  const updateBio = async () => {\r\n    // Update bio\r\n    // ...\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Profile Header */}\r\n      <View style={styles.header}>\r\n        <TouchableOpacity onPress={handleSettingsPress}>\r\n          <Icon name=\"settings-outline\" size={30} />\r\n        </TouchableOpacity>\r\n        <View style={styles.userInfo}>\r\n          <Image\r\n            style={styles.profileImage}\r\n            source={{ uri: user.profilePhoto }}\r\n          />\r\n          <View style={styles.userDetails}>\r\n            <Text style={styles.username}>{user.username}</Text>\r\n            <Text style={styles.followers}>{followers} Followers</Text>\r\n            <Text style={styles.following}>{followings} Following</Text>\r\n          </View>\r\n        </View>\r\n        <Button title=\"Logout\" onPress={logout} />\r\n      </View>\r\n      {/* Profile Content */}\r\n      <Tab.Navigator>\r\n        <Tab.Screen name=\"Images\" component={() => <ImageScreen posts={posts} />} />\r\n        <Tab.Screen name=\"Tweets\" component={() => <TweetScreen posts={posts} />} />\r\n      </Tab.Navigator>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  header: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: \"#ccc\",\r\n  },\r\n  userInfo: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  profileImage: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 25,\r\n    marginRight: 10,\r\n  },\r\n  userDetails: {\r\n    justifyContent: \"center\",\r\n  },\r\n  username: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  followers: {\r\n    color: \"gray\",\r\n  },\r\n  following: {\r\n    color: \"gray\",\r\n  },\r\n});\r\n\r\nexport default ProfileScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}