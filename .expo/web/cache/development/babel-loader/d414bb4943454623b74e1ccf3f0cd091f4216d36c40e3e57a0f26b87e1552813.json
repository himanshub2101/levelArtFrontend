{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport ThreadsScreen from \"./screens/ThreadsScreen\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport ActivityScreen from \"./screens/ActivityScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar StackNavigator = function StackNavigator() {\n  var Stack = createNativeStackNavigator();\n  var Tab = createBottomTabNavigator();\n  function BottomTabs(_ref) {\n    var authToken = _ref.authToken;\n    return _jsxs(Tab.Navigator, {\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        options: {\n          tabBarLabel: \"Home\",\n          tabBarLabelStyle: {\n            color: \"black\"\n          },\n          headerShown: false,\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused;\n            return focused ? _jsx(Entypo, {\n              name: \"home\",\n              size: 24,\n              color: \"black\"\n            }) : _jsx(AntDesign, {\n              name: \"home\",\n              size: 24,\n              color: \"black\"\n            });\n          }\n        },\n        children: function children(props) {\n          return _jsx(HomeScreen, _objectSpread(_objectSpread({}, props), {}, {\n            authToken: authToken\n          }));\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Thread\",\n        component: ThreadsScreen,\n        options: {\n          tabBarLabel: \"Create\",\n          tabBarLabelStyle: {\n            color: \"black\"\n          },\n          headerShown: false,\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var focused = _ref3.focused;\n            return focused ? _jsx(Ionicons, {\n              name: \"create\",\n              size: 24,\n              color: \"black\"\n            }) : _jsx(Ionicons, {\n              name: \"create-outline\",\n              size: 24,\n              color: \"black\"\n            });\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Activity\",\n        component: ActivityScreen,\n        options: {\n          tabBarLabel: \"Activity\",\n          tabBarLabelStyle: {\n            color: \"black\"\n          },\n          headerShown: false,\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var focused = _ref4.focused;\n            return focused ? _jsx(AntDesign, {\n              name: \"heart\",\n              size: 24,\n              color: \"black\"\n            }) : _jsx(AntDesign, {\n              name: \"hearto\",\n              size: 24,\n              color: \"black\"\n            });\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        options: {\n          tabBarLabel: \"Profile\",\n          tabBarLabelStyle: {\n            color: \"black\"\n          },\n          headerShown: false,\n          tabBarIcon: function tabBarIcon(_ref5) {\n            var focused = _ref5.focused;\n            return focused ? _jsx(Ionicons, {\n              name: \"person\",\n              size: 24,\n              color: \"black\"\n            }) : _jsx(Ionicons, {\n              name: \"person-outline\",\n              size: 24,\n              color: \"black\"\n            });\n          }\n        }\n      })]\n    });\n  }\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Login\",\n        component: LoginScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Register\",\n        component: RegisterScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Main\",\n        options: {\n          headerShown: false\n        },\n        children: function children(props) {\n          return _jsx(BottomTabs, _objectSpread(_objectSpread({}, props), {}, {\n            authToken: props.route.params.authToken\n          }));\n        }\n      })]\n    })\n  });\n};\nexport default StackNavigator;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","NavigationContainer","LoginScreen","RegisterScreen","createNativeStackNavigator","HomeScreen","createBottomTabNavigator","Entypo","AntDesign","ThreadsScreen","Ionicons","ActivityScreen","ProfileScreen","jsx","_jsx","jsxs","_jsxs","StackNavigator","Stack","Tab","BottomTabs","_ref","authToken","Navigator","children","Screen","name","options","tabBarLabel","tabBarLabelStyle","color","headerShown","tabBarIcon","_ref2","focused","size","props","_objectSpread","component","_ref3","_ref4","_ref5","route","params","styles","StyleSheet","create"],"sources":["C:/himanshu/threads-app/StackNavigator.js"],"sourcesContent":["import { StyleSheet, Text, View } from \"react-native\";\r\nimport React from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport RegisterScreen from \"./screens/RegisterScreen\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { Entypo } from \"@expo/vector-icons\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport ThreadsScreen from \"./screens/ThreadsScreen\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport ActivityScreen from \"./screens/ActivityScreen\";\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\n\r\nconst StackNavigator = () => {\r\n  const Stack = createNativeStackNavigator();\r\n  const Tab = createBottomTabNavigator();\r\n\r\n  function BottomTabs({ authToken }) {\r\n    return (\r\n      <Tab.Navigator>\r\n        <Tab.Screen\r\n          name=\"Home\"\r\n          options={{\r\n            tabBarLabel: \"Home\",\r\n            tabBarLabelStyle: { color: \"black\" },\r\n            headerShown: false,\r\n            tabBarIcon: ({ focused }) =>\r\n              focused ? (\r\n                <Entypo name=\"home\" size={24} color=\"black\" />\r\n              ) : (\r\n                <AntDesign name=\"home\" size={24} color=\"black\" />\r\n              ),\r\n          }}\r\n        >\r\n          {(props) => <HomeScreen {...props} authToken={authToken} />}\r\n        </Tab.Screen>\r\n\r\n        <Tab.Screen\r\n          name=\"Thread\"\r\n          component={ThreadsScreen}\r\n          options={{\r\n            tabBarLabel: \"Create\",\r\n            tabBarLabelStyle: { color: \"black\" },\r\n            headerShown: false,\r\n            tabBarIcon: ({ focused }) =>\r\n              focused ? (\r\n                <Ionicons name=\"create\" size={24} color=\"black\" />\r\n              ) : (\r\n                <Ionicons name=\"create-outline\" size={24} color=\"black\" />\r\n              ),\r\n          }}\r\n        />\r\n\r\n        <Tab.Screen\r\n          name=\"Activity\"\r\n          component={ActivityScreen}\r\n          options={{\r\n            tabBarLabel: \"Activity\",\r\n            tabBarLabelStyle: { color: \"black\" },\r\n            headerShown: false,\r\n            tabBarIcon: ({ focused }) =>\r\n              focused ? (\r\n                <AntDesign name=\"heart\" size={24} color=\"black\" />\r\n              ) : (\r\n                <AntDesign name=\"hearto\" size={24} color=\"black\" />\r\n              ),\r\n          }}\r\n        />\r\n\r\n        <Tab.Screen\r\n          name=\"Profile\"\r\n          component={ProfileScreen}\r\n          options={{\r\n            tabBarLabel: \"Profile\",\r\n            tabBarLabelStyle: { color: \"black\" },\r\n            headerShown: false,\r\n            tabBarIcon: ({ focused }) =>\r\n              focused ? (\r\n                <Ionicons name=\"person\" size={24} color=\"black\" />\r\n              ) : (\r\n                <Ionicons name=\"person-outline\" size={24} color=\"black\" />\r\n              ),\r\n          }}\r\n        />\r\n      </Tab.Navigator>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator>\r\n        <Stack.Screen\r\n          name=\"Login\"\r\n          component={LoginScreen}\r\n          options={{ headerShown: false }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"Register\"\r\n          component={RegisterScreen}\r\n          options={{ headerShown: false }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"Main\"\r\n          options={{ headerShown: false }}\r\n        >\r\n          {(props) => <BottomTabs {...props} authToken={props.route.params.authToken} />}\r\n        </Stack.Screen>\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default StackNavigator;\r\n\r\nconst styles = StyleSheet.create({});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}