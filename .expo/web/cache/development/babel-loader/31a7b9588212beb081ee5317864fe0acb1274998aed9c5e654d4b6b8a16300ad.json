{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport jwt_decode from \"jwt-decode\";\nimport axios from \"axios\";\nimport { UserType } from \"../UserContext\";\nimport User from \"../components/User\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ActivityScreen = function ActivityScreen() {\n  var _useState = useState(\"people\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedButton = _useState2[0],\n    setSelctedButton = _useState2[1];\n  var _useState3 = useState(\"People Content\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    content = _useState4[0],\n    setContent = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    users = _useState6[0],\n    setUsers = _useState6[1];\n  var _useContext = useContext(UserType),\n    userId = _useContext.userId,\n    setUserId = _useContext.setUserId;\n  var handleButtonClick = function handleButtonClick(buttonName) {\n    setSelctedButton(buttonName);\n  };\n  useEffect(function () {\n    var fetchUsers = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var token = yield AsyncStorage.getItem(\"authToken\");\n        var decodedToken = jwt_decode(token);\n        var userId = decodedToken.userId;\n        setUserId(userId);\n        axios.get(`http://localhost:3000/user/${userId}`).then(function (response) {\n          setUsers(response.data);\n        }).catch(function (error) {\n          console.log(\"error\", error);\n        });\n      });\n      return function fetchUsers() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchUsers();\n  }, []);\n  console.log(\"users\", users);\n  return _jsx(ScrollView, {\n    style: {\n      marginTop: 50\n    },\n    children: _jsxs(View, {\n      style: {\n        padding: 10\n      },\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 18,\n          fontWeight: \"bold\"\n        },\n        children: \"Activity\"\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          gap: 10,\n          marginTop: 12\n        },\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return handleButtonClick(\"people\");\n          },\n          style: [{\n            flex: 1,\n            paddingVertical: 10,\n            paddingHorizontal: 20,\n            backgroundColor: \"white\",\n            borderColor: \"#D0D0D0\",\n            borderRadius: 6,\n            borderWidth: 0.7\n          }, selectedButton === \"people\" ? {\n            backgroundColor: \"black\"\n          } : null],\n          children: _jsx(Text, {\n            style: [{\n              textAlign: \"center\",\n              fontWeight: \"bold\"\n            }, selectedButton === \"people\" ? {\n              color: \"white\"\n            } : {\n              color: \"black\"\n            }],\n            children: \"People\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return handleButtonClick(\"all\");\n          },\n          style: [{\n            flex: 1,\n            paddingVertical: 10,\n            paddingHorizontal: 20,\n            backgroundColor: \"white\",\n            borderColor: \"#D0D0D0\",\n            borderRadius: 6,\n            borderWidth: 0.7\n          }, selectedButton === \"all\" ? {\n            backgroundColor: \"black\"\n          } : null],\n          children: _jsx(Text, {\n            style: [{\n              textAlign: \"center\",\n              fontWeight: \"bold\"\n            }, selectedButton === \"all\" ? {\n              color: \"white\"\n            } : {\n              color: \"black\"\n            }],\n            children: \"All\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return handleButtonClick(\"requests\");\n          },\n          style: [{\n            flex: 1,\n            paddingVertical: 10,\n            paddingHorizontal: 20,\n            backgroundColor: \"white\",\n            borderColor: \"#D0D0D0\",\n            borderRadius: 6,\n            borderWidth: 0.7\n          }, selectedButton === \"requests\" ? {\n            backgroundColor: \"black\"\n          } : null],\n          children: _jsx(Text, {\n            style: [{\n              textAlign: \"center\",\n              fontWeight: \"bold\"\n            }, selectedButton === \"requests\" ? {\n              color: \"white\"\n            } : {\n              color: \"black\"\n            }],\n            children: \"Requests\"\n          })\n        })]\n      }), _jsx(View, {\n        children: selectedButton === \"people\" && _jsx(View, {\n          style: {\n            marginTop: 20\n          },\n          children: users == null ? void 0 : users.map(function (item, index) {\n            return _jsx(User, {\n              item: item\n            }, index);\n          })\n        })\n      })]\n    })\n  });\n};\nexport default ActivityScreen;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useState","useEffect","useContext","AsyncStorage","jwt_decode","axios","UserType","User","jsx","_jsx","jsxs","_jsxs","ActivityScreen","_useState","_useState2","_slicedToArray","selectedButton","setSelctedButton","_useState3","_useState4","content","setContent","_useState5","_useState6","users","setUsers","_useContext","userId","setUserId","handleButtonClick","buttonName","fetchUsers","_ref","_asyncToGenerator","token","getItem","decodedToken","get","then","response","data","catch","error","console","log","apply","arguments","ScrollView","style","marginTop","children","View","padding","Text","fontSize","fontWeight","flexDirection","alignItems","gap","TouchableOpacity","onPress","flex","paddingVertical","paddingHorizontal","backgroundColor","borderColor","borderRadius","borderWidth","textAlign","color","map","item","index","styles","StyleSheet","create"],"sources":["C:/Users/DELL/Documents/Confidentials/levelArtFrontend/screens/ActivityScreen.js"],"sourcesContent":["import {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport axios from \"axios\";\r\nimport { UserType } from \"../UserContext\";\r\nimport User from \"../components/User\";\r\n\r\nconst ActivityScreen = () => {\r\n  const [selectedButton, setSelctedButton] = useState(\"people\");\r\n  const [content, setContent] = useState(\"People Content\");\r\n  const [users, setUsers] = useState([]);\r\n  const { userId, setUserId } = useContext(UserType);\r\n  const handleButtonClick = (buttonName) => {\r\n    setSelctedButton(buttonName);\r\n  };\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      const token = await AsyncStorage.getItem(\"authToken\");\r\n      const decodedToken = jwt_decode(token);\r\n      const userId = decodedToken.userId;\r\n      setUserId(userId);\r\n\r\n      axios\r\n        .get(`http://localhost:3000/user/${userId}`)\r\n        .then((response) => {\r\n          setUsers(response.data);\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error\", error);\r\n        });\r\n    };\r\n\r\n    fetchUsers();\r\n  }, []);\r\n  console.log(\"users\", users);\r\n  return (\r\n    <ScrollView style={{ marginTop: 50 }}>\r\n      <View style={{ padding: 10 }}>\r\n        <Text style={{ fontSize: 18, fontWeight: \"bold\" }}>Activity</Text>\r\n\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            gap: 10,\r\n            marginTop: 12,\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => handleButtonClick(\"people\")}\r\n            style={[\r\n              {\r\n                flex: 1,\r\n                paddingVertical: 10,\r\n                paddingHorizontal: 20,\r\n                backgroundColor: \"white\",\r\n                borderColor: \"#D0D0D0\",\r\n                borderRadius: 6,\r\n                borderWidth: 0.7,\r\n              },\r\n              selectedButton === \"people\" ? { backgroundColor: \"black\" } : null,\r\n            ]}\r\n          >\r\n            <Text\r\n              style={[\r\n                { textAlign: \"center\", fontWeight: \"bold\" },\r\n                selectedButton === \"people\"\r\n                  ? { color: \"white\" }\r\n                  : { color: \"black\" },\r\n              ]}\r\n            >\r\n              People\r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            onPress={() => handleButtonClick(\"all\")}\r\n            style={[\r\n              {\r\n                flex: 1,\r\n                paddingVertical: 10,\r\n                paddingHorizontal: 20,\r\n                backgroundColor: \"white\",\r\n                borderColor: \"#D0D0D0\",\r\n                borderRadius: 6,\r\n                borderWidth: 0.7,\r\n              },\r\n              selectedButton === \"all\" ? { backgroundColor: \"black\" } : null,\r\n            ]}\r\n          >\r\n            <Text\r\n              style={[\r\n                { textAlign: \"center\", fontWeight: \"bold\" },\r\n                selectedButton === \"all\"\r\n                  ? { color: \"white\" }\r\n                  : { color: \"black\" },\r\n              ]}\r\n            >\r\n              All\r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            onPress={() => handleButtonClick(\"requests\")}\r\n            style={[\r\n              {\r\n                flex: 1,\r\n                paddingVertical: 10,\r\n                paddingHorizontal: 20,\r\n                backgroundColor: \"white\",\r\n                borderColor: \"#D0D0D0\",\r\n                borderRadius: 6,\r\n                borderWidth: 0.7,\r\n              },\r\n              selectedButton === \"requests\"\r\n                ? { backgroundColor: \"black\" }\r\n                : null,\r\n            ]}\r\n          >\r\n            <Text\r\n              style={[\r\n                { textAlign: \"center\", fontWeight: \"bold\" },\r\n                selectedButton === \"requests\"\r\n                  ? { color: \"white\" }\r\n                  : { color: \"black\" },\r\n              ]}\r\n            >\r\n              Requests\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <View>\r\n          {selectedButton === \"people\" && (\r\n            <View style={{marginTop:20}}>\r\n              {users?.map((item, index) => (\r\n                <User key={index} item={item} />\r\n              ))}\r\n            </View>\r\n          )}\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default ActivityScreen;\r\n\r\nconst styles = StyleSheet.create({});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}