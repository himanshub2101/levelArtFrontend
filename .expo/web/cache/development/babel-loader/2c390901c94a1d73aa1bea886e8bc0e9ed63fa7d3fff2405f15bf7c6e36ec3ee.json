{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen() {\n  var route = useRoute();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    posts = _useState2[0],\n    setPosts = _useState2[1];\n  useEffect(function () {\n    fetchPosts();\n  }, []);\n  var fetchPosts = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var authToken = route.params;\n        console.log(\"route:\");\n        var headers = {\n          Authorization: `Bearer ${authToken}`,\n          \"Content-Type\": \"application/json\"\n        };\n        var response = yield axios.get(\"http://localhost:3000/posts\", {\n          headers: headers\n        });\n        setPosts(response.data);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    });\n    return function fetchPosts() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: \"Recent Posts\"\n    }), _jsx(View, {\n      style: styles.postContainer,\n      children: posts.map(function (post) {\n        return _jsxs(View, {\n          style: styles.post,\n          children: [_jsx(Text, {\n            style: styles.postText,\n            children: post.content\n          }), _jsxs(Text, {\n            style: styles.author,\n            children: [\"Posted by: \", post.author]\n          })]\n        }, post._id);\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: \"#ffffff\"\n  },\n  heading: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20\n  },\n  postContainer: {\n    marginTop: 10\n  },\n  post: {\n    marginBottom: 20,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#cccccc\",\n    borderRadius: 5\n  },\n  postText: {\n    fontSize: 16,\n    marginBottom: 10\n  },\n  author: {\n    fontSize: 14,\n    color: \"#666666\"\n  }\n});\nexport default HomeScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","ScrollView","StyleSheet","axios","AsyncStorage","useRoute","jsx","_jsx","jsxs","_jsxs","HomeScreen","route","_useState","_useState2","_slicedToArray","posts","setPosts","fetchPosts","_ref","_asyncToGenerator","authToken","params","console","log","headers","Authorization","response","get","data","error","apply","arguments","style","styles","container","children","heading","postContainer","map","post","postText","content","author","_id","create","flex","padding","backgroundColor","fontSize","fontWeight","marginBottom","marginTop","borderWidth","borderColor","borderRadius","color"],"sources":["C:/himanshu/threads-app/screens/HomeScreen.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, Text, ScrollView, StyleSheet } from \"react-native\";\r\nimport axios from \"axios\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { useRoute } from \"@react-navigation/native\";\r\n\r\nconst HomeScreen = () => {\r\n  const route = useRoute();\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const fetchPosts = async () => {\r\n    try {\r\n      const authToken = route.params;\r\n      console.log(\"route:\", )\r\n      const headers = {\r\n        Authorization: `Bearer ${authToken}`,\r\n        \"Content-Type\": \"application/json\",\r\n      };\r\n\r\n      const response = await axios.get(\r\n        \"http://localhost:3000/posts\",\r\n        { headers }\r\n      );\r\n      setPosts(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching posts:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <Text style={styles.heading}>Recent Posts</Text>\r\n      <View style={styles.postContainer}>\r\n        {posts.map((post) => (\r\n          <View key={post._id} style={styles.post}>\r\n            <Text style={styles.postText}>{post.content}</Text>\r\n            <Text style={styles.author}>\r\n              Posted by: {post.author}\r\n            </Text>\r\n          </View>\r\n        ))}\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  heading: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 20,\r\n  },\r\n  postContainer: {\r\n    marginTop: 10,\r\n  },\r\n  post: {\r\n    marginBottom: 20,\r\n    padding: 10,\r\n    borderWidth: 1,\r\n    borderColor: \"#cccccc\",\r\n    borderRadius: 5,\r\n  },\r\n  postText: {\r\n    fontSize: 16,\r\n    marginBottom: 10,\r\n  },\r\n  author: {\r\n    fontSize: 14,\r\n    color: \"#666666\",\r\n  },\r\n});\r\n\r\nexport default HomeScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAEnD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,2CAA2C;AACpE,SAASC,QAAQ,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpD,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EACvB,IAAMC,KAAK,GAAGN,QAAQ,CAAC,CAAC;EACxB,IAAAO,SAAA,GAA0Bd,QAAQ,CAAC,EAAE,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAEtBhB,SAAS,CAAC,YAAM;IACdoB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMA,UAAU;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAC7B,IAAI;QACF,IAAMC,SAAS,GAAGT,KAAK,CAACU,MAAM;QAC9BC,OAAO,CAACC,GAAG,CAAC,QAAU,CAAC;QACvB,IAAMC,OAAO,GAAG;UACdC,aAAa,EAAG,UAASL,SAAU,EAAC;UACpC,cAAc,EAAE;QAClB,CAAC;QAED,IAAMM,QAAQ,SAASvB,KAAK,CAACwB,GAAG,CAC9B,6BAA6B,EAC7B;UAAEH,OAAO,EAAPA;QAAQ,CACZ,CAAC;QACDR,QAAQ,CAACU,QAAQ,CAACE,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAAA,gBAjBKZ,UAAUA,CAAA;MAAA,OAAAC,IAAA,CAAAY,KAAA,OAAAC,SAAA;IAAA;EAAA,GAiBf;EAED,OACEtB,KAAA,CAACR,UAAU;IAAC+B,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAClC5B,IAAA,CAACP,IAAI;MAACgC,KAAK,EAAEC,MAAM,CAACG,OAAQ;MAAAD,QAAA,EAAC;IAAY,CAAM,CAAC,EAChD5B,IAAA,CAACR,IAAI;MAACiC,KAAK,EAAEC,MAAM,CAACI,aAAc;MAAAF,QAAA,EAC/BpB,KAAK,CAACuB,GAAG,CAAC,UAACC,IAAI;QAAA,OACd9B,KAAA,CAACV,IAAI;UAAgBiC,KAAK,EAAEC,MAAM,CAACM,IAAK;UAAAJ,QAAA,GACtC5B,IAAA,CAACP,IAAI;YAACgC,KAAK,EAAEC,MAAM,CAACO,QAAS;YAAAL,QAAA,EAAEI,IAAI,CAACE;UAAO,CAAO,CAAC,EACnDhC,KAAA,CAACT,IAAI;YAACgC,KAAK,EAAEC,MAAM,CAACS,MAAO;YAAAP,QAAA,GAAC,aACf,EAACI,IAAI,CAACG,MAAM;UAAA,CACnB,CAAC;QAAA,GAJEH,IAAI,CAACI,GAKV,CAAC;MAAA,CACR;IAAC,CACE,CAAC;EAAA,CACG,CAAC;AAEjB,CAAC;AAED,IAAMV,MAAM,GAAG/B,UAAU,CAAC0C,MAAM,CAAC;EAC/BV,SAAS,EAAE;IACTW,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE;EACnB,CAAC;EACDX,OAAO,EAAE;IACPY,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAChB,CAAC;EACDb,aAAa,EAAE;IACbc,SAAS,EAAE;EACb,CAAC;EACDZ,IAAI,EAAE;IACJW,YAAY,EAAE,EAAE;IAChBJ,OAAO,EAAE,EAAE;IACXM,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,SAAS;IACtBC,YAAY,EAAE;EAChB,CAAC;EACDd,QAAQ,EAAE;IACRQ,QAAQ,EAAE,EAAE;IACZE,YAAY,EAAE;EAChB,CAAC;EACDR,MAAM,EAAE;IACNM,QAAQ,EAAE,EAAE;IACZO,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAe7C,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}